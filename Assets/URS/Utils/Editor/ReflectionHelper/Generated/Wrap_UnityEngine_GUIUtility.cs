//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEngine_GUIUtility
	{
		
		/// <summary>
		/// <see cref="UnityEngine.GUIUtility"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEngine.GUIUtility");
		
		
		public static float pixelsPerPoint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__pixelsPerPoint?.GetValue(null));
		}
		
		public static int guiDepth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__guiDepth?.GetValue(null));
		}
		
		public static UnityEngine.Vector2 s_EditorScreenPointOffset
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__s_EditorScreenPointOffset?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_EditorScreenPointOffset?.SetValue(null, value);
		}
		
		public static bool mouseUsed
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__mouseUsed?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __mouseUsed?.SetValue(null, value);
		}
		
		public static bool textFieldInput
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__textFieldInput?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __textFieldInput?.SetValue(null, value);
		}
		
		public static bool manualTex2SRGBEnabled
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__manualTex2SRGBEnabled?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __manualTex2SRGBEnabled?.SetValue(null, value);
		}
		
		public static string compositionString
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__compositionString?.GetValue(null));
		}
		
		public static UnityEngine.IMECompositionMode imeCompositionMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.IMECompositionMode)(__imeCompositionMode?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __imeCompositionMode?.SetValue(null, value);
		}
		
		public static UnityEngine.Vector2 compositionCursorPos
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__compositionCursorPos?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __compositionCursorPos?.SetValue(null, value);
		}
		
		public static bool guiIsExiting
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__guiIsExiting?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __guiIsExiting?.SetValue(null, value);
		}
		
		public static int s_ControlCount
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_ControlCount?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ControlCount?.SetValue(null, value);
		}
		
		public static int s_SkinMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_SkinMode?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_SkinMode?.SetValue(null, value);
		}
		
		public static int s_OriginalID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_OriginalID?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_OriginalID?.SetValue(null, value);
		}
		
		public static System.Action takeCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action)(__takeCapture?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __takeCapture?.SetValue(null, value);
		}
		
		public static System.Action releaseCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action)(__releaseCapture?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __releaseCapture?.SetValue(null, value);
		}
		
		public static System.Func<int, System.IntPtr, bool> processEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Func<int, System.IntPtr, bool>)(__processEvent?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __processEvent?.SetValue(null, value);
		}
		
		public static System.Action cleanupRoots
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action)(__cleanupRoots?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __cleanupRoots?.SetValue(null, value);
		}
		
		public static System.Func<System.Exception, bool> endContainerGUIFromException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Func<System.Exception, bool>)(__endContainerGUIFromException?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __endContainerGUIFromException?.SetValue(null, value);
		}
		
		public static System.Action guiChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action)(__guiChanged?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __guiChanged?.SetValue(null, value);
		}
		
		public static System.Func<bool> s_HasCurrentWindowKeyFocusFunc
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Func<bool>)(__s_HasCurrentWindowKeyFocusFunc?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_HasCurrentWindowKeyFocusFunc?.SetValue(null, value);
		}
		
		public static int Internal_GetControlID(int hint, UnityEngine.FocusType focusType, UnityEngine.Rect rect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = hint;
			__params__[1] = focusType;
			__params__[2] = rect;
			var __result__ = __Internal_GetControlID?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void BeginContainerFromOwner(UnityEngine.ScriptableObject owner)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = owner;
			__BeginContainerFromOwner?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void BeginContainer(object objectGUIState)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = objectGUIState;
			__BeginContainer?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void Internal_EndContainer()
		{
			__Internal_EndContainer?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static int GetPermanentControlID()
		{
			var __result__ = __GetPermanentControlID?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void UpdateUndoName()
		{
			__UpdateUndoName?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static int CheckForTabEvent(UnityEngine.Event evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = evt;
			var __result__ = __CheckForTabEvent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void SetKeyboardControlToFirstControlId()
		{
			__SetKeyboardControlToFirstControlId?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void SetKeyboardControlToLastControlId()
		{
			__SetKeyboardControlToLastControlId?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static bool HasFocusableControls()
		{
			var __result__ = __HasFocusableControls?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool OwnsId(int id)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			var __result__ = __OwnsId?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static UnityEngine.Vector3 Internal_MultiplyPoint(UnityEngine.Vector3 point, UnityEngine.Matrix4x4 transform)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = point;
			__params__[1] = transform;
			var __result__ = __Internal_MultiplyPoint?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector3)(__result__) : default;
		}
		
		public static bool GetChanged()
		{
			var __result__ = __GetChanged?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void SetChanged(bool changed)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = changed;
			__SetChanged?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetDidGUIWindowsEatLastEvent(bool value)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = value;
			__SetDidGUIWindowsEatLastEvent?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static int Internal_GetHotControl()
		{
			var __result__ = __Internal_GetHotControl?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int Internal_GetKeyboardControl()
		{
			var __result__ = __Internal_GetKeyboardControl?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void Internal_SetHotControl(int value)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = value;
			__Internal_SetHotControl?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void Internal_SetKeyboardControl(int value)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = value;
			__Internal_SetKeyboardControl?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static object Internal_GetDefaultSkin(int skinMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = skinMode;
			var __result__ = __Internal_GetDefaultSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public static UnityEngine.Object Internal_GetBuiltinSkin(int skin)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = skin;
			var __result__ = __Internal_GetBuiltinSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public static void Internal_ExitGUI()
		{
			__Internal_ExitGUI?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static UnityEngine.Vector2 InternalWindowToScreenPoint(UnityEngine.Vector2 windowPoint)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = windowPoint;
			var __result__ = __InternalWindowToScreenPoint?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector2)(__result__) : default;
		}
		
		public static UnityEngine.Vector2 InternalScreenToWindowPoint(UnityEngine.Vector2 screenPoint)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = screenPoint;
			var __result__ = __InternalScreenToWindowPoint?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector2)(__result__) : default;
		}
		
		public static void MarkGUIChanged()
		{
			__MarkGUIChanged?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void TakeCapture()
		{
			__TakeCapture?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void RemoveCapture()
		{
			__RemoveCapture?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static bool HasKeyFocus(int controlID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = controlID;
			var __result__ = __HasKeyFocus?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static UnityEngine.GUISkin GetDefaultSkin(int skinMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = skinMode;
			var __result__ = __GetDefaultSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUISkin)(__result__) : default;
		}
		
		public static UnityEngine.GUISkin GetDefaultSkin()
		{
			var __result__ = __GetDefaultSkin__2?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.GUISkin)(__result__) : default;
		}
		
		public static UnityEngine.GUISkin GetBuiltinSkin(int skin)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = skin;
			var __result__ = __GetBuiltinSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUISkin)(__result__) : default;
		}
		
		public static void ProcessEvent(int instanceID, System.IntPtr nativeEventPtr, out bool result)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = instanceID;
			__params__[1] = nativeEventPtr;
			__params__[2] = null;
			__ProcessEvent?.Invoke(null, __params__);
			result = (bool)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void EndContainer()
		{
			__EndContainer?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void CleanupRoots()
		{
			__CleanupRoots?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void BeginGUI(int skinMode, int instanceID, int useGUILayout)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = skinMode;
			__params__[1] = instanceID;
			__params__[2] = useGUILayout;
			__BeginGUI?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetSkin(int skinMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = skinMode;
			__SetSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void EndGUI(int layoutType)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = layoutType;
			__EndGUI?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static bool EndGUIFromException(System.Exception exception)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = exception;
			var __result__ = __EndGUIFromException?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool EndContainerGUIFromException(System.Exception exception)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = exception;
			var __result__ = __EndContainerGUIFromException?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void ResetGlobalState()
		{
			__ResetGlobalState?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static bool IsExitGUIException(System.Exception exception)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = exception;
			var __result__ = __IsExitGUIException?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool ShouldRethrowException(System.Exception exception)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = exception;
			var __result__ = __ShouldRethrowException?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void CheckOnGUI()
		{
			__CheckOnGUI?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static float RoundToPixelGrid(float v)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = v;
			var __result__ = __RoundToPixelGrid?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static bool HitTest(UnityEngine.Rect rect, UnityEngine.Vector2 point, int offset)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = rect;
			__params__[1] = point;
			__params__[2] = offset;
			var __result__ = __HitTest?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool HitTest(UnityEngine.Rect rect, UnityEngine.Vector2 point, bool isDirectManipulationDevice)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = rect;
			__params__[1] = point;
			__params__[2] = isDirectManipulationDevice;
			var __result__ = __HitTest__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool HitTest(UnityEngine.Rect rect, UnityEngine.Event evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = rect;
			__params__[1] = evt;
			var __result__ = __HitTest__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static int Internal_GetControlID_Injected(int hint, UnityEngine.FocusType focusType, ref UnityEngine.Rect rect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = hint;
			__params__[1] = focusType;
			__params__[2] = rect;
			var __result__ = __Internal_GetControlID_Injected?.Invoke(null, __params__);
			rect = (UnityEngine.Rect)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void AlignRectToDevice_Injected(ref UnityEngine.Rect rect, out int widthInPixels, out int heightInPixels, out UnityEngine.Rect ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = rect;
			__params__[1] = Activator.CreateInstance(typeof(int));
			__params__[2] = Activator.CreateInstance(typeof(int));
			__params__[3] = Activator.CreateInstance(typeof(UnityEngine.Rect));
			__AlignRectToDevice_Injected?.Invoke(null, __params__);
			rect = (UnityEngine.Rect)(__params__[0]);
			widthInPixels = (int)(__params__[1]);
			heightInPixels = (int)(__params__[2]);
			ret = (UnityEngine.Rect)(__params__[3]);
			__pool__.Return(__params__);
		}
		
		public static void Internal_MultiplyPoint_Injected(ref UnityEngine.Vector3 point, ref UnityEngine.Matrix4x4 transform, out UnityEngine.Vector3 ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = point;
			__params__[1] = transform;
			__params__[2] = Activator.CreateInstance(typeof(UnityEngine.Vector3));
			__Internal_MultiplyPoint_Injected?.Invoke(null, __params__);
			point = (UnityEngine.Vector3)(__params__[0]);
			transform = (UnityEngine.Matrix4x4)(__params__[1]);
			ret = (UnityEngine.Vector3)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void InternalWindowToScreenPoint_Injected(ref UnityEngine.Vector2 windowPoint, out UnityEngine.Vector2 ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = windowPoint;
			__params__[1] = Activator.CreateInstance(typeof(UnityEngine.Vector2));
			__InternalWindowToScreenPoint_Injected?.Invoke(null, __params__);
			windowPoint = (UnityEngine.Vector2)(__params__[0]);
			ret = (UnityEngine.Vector2)(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public static void InternalScreenToWindowPoint_Injected(ref UnityEngine.Vector2 screenPoint, out UnityEngine.Vector2 ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = screenPoint;
			__params__[1] = Activator.CreateInstance(typeof(UnityEngine.Vector2));
			__InternalScreenToWindowPoint_Injected?.Invoke(null, __params__);
			screenPoint = (UnityEngine.Vector2)(__params__[0]);
			ret = (UnityEngine.Vector2)(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public UnityEngine_GUIUtility(object __self__) => this.__self__ = __self__ as object;
		public object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEngine.GUIUtility __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIUtility)(__self__);
		}
		
		private static FieldInfo ___s_ControlCount;
		private static FieldInfo __s_ControlCount
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ControlCount ??= __type__?.GetField("s_ControlCount", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_SkinMode;
		private static FieldInfo __s_SkinMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_SkinMode ??= __type__?.GetField("s_SkinMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_OriginalID;
		private static FieldInfo __s_OriginalID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_OriginalID ??= __type__?.GetField("s_OriginalID", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___takeCapture;
		private static FieldInfo __takeCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___takeCapture ??= __type__?.GetField("takeCapture", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___releaseCapture;
		private static FieldInfo __releaseCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___releaseCapture ??= __type__?.GetField("releaseCapture", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___processEvent;
		private static FieldInfo __processEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___processEvent ??= __type__?.GetField("processEvent", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___cleanupRoots;
		private static FieldInfo __cleanupRoots
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___cleanupRoots ??= __type__?.GetField("cleanupRoots", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___endContainerGUIFromException;
		private static FieldInfo __endContainerGUIFromException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___endContainerGUIFromException ??= __type__?.GetField("endContainerGUIFromException", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___guiChanged;
		private static FieldInfo __guiChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___guiChanged ??= __type__?.GetField("guiChanged", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_HasCurrentWindowKeyFocusFunc;
		private static FieldInfo __s_HasCurrentWindowKeyFocusFunc
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_HasCurrentWindowKeyFocusFunc ??= __type__?.GetField("s_HasCurrentWindowKeyFocusFunc", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___pixelsPerPoint;
		private static PropertyInfo __pixelsPerPoint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___pixelsPerPoint ??= __type__?.GetProperty("pixelsPerPoint", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___guiDepth;
		private static PropertyInfo __guiDepth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___guiDepth ??= __type__?.GetProperty("guiDepth", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___s_EditorScreenPointOffset;
		private static PropertyInfo __s_EditorScreenPointOffset
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_EditorScreenPointOffset ??= __type__?.GetProperty("s_EditorScreenPointOffset", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___mouseUsed;
		private static PropertyInfo __mouseUsed
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___mouseUsed ??= __type__?.GetProperty("mouseUsed", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___textFieldInput;
		private static PropertyInfo __textFieldInput
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___textFieldInput ??= __type__?.GetProperty("textFieldInput", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___manualTex2SRGBEnabled;
		private static PropertyInfo __manualTex2SRGBEnabled
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___manualTex2SRGBEnabled ??= __type__?.GetProperty("manualTex2SRGBEnabled", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___compositionString;
		private static PropertyInfo __compositionString
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___compositionString ??= __type__?.GetProperty("compositionString", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___imeCompositionMode;
		private static PropertyInfo __imeCompositionMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___imeCompositionMode ??= __type__?.GetProperty("imeCompositionMode", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___compositionCursorPos;
		private static PropertyInfo __compositionCursorPos
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___compositionCursorPos ??= __type__?.GetProperty("compositionCursorPos", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___guiIsExiting;
		private static PropertyInfo __guiIsExiting
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___guiIsExiting ??= __type__?.GetProperty("guiIsExiting", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___Internal_GetControlID;
		private static MethodInfo __Internal_GetControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetControlID ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetControlID", "System.Int32", "UnityEngine.FocusType", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___BeginContainerFromOwner;
		private static MethodInfo __BeginContainerFromOwner
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginContainerFromOwner ??= __type__?.GetMethodInfoByParameterTypeNames("BeginContainerFromOwner", "UnityEngine.ScriptableObject");
		}
		
		private static MethodInfo ___BeginContainer;
		private static MethodInfo __BeginContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginContainer ??= __type__?.GetMethodInfoByParameterTypeNames("BeginContainer", "UnityEngine.ObjectGUIState");
		}
		
		private static MethodInfo ___Internal_EndContainer;
		private static MethodInfo __Internal_EndContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_EndContainer ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_EndContainer");
		}
		
		private static MethodInfo ___GetPermanentControlID;
		private static MethodInfo __GetPermanentControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPermanentControlID ??= __type__?.GetMethodInfoByParameterTypeNames("GetPermanentControlID");
		}
		
		private static MethodInfo ___UpdateUndoName;
		private static MethodInfo __UpdateUndoName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UpdateUndoName ??= __type__?.GetMethodInfoByParameterTypeNames("UpdateUndoName");
		}
		
		private static MethodInfo ___CheckForTabEvent;
		private static MethodInfo __CheckForTabEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckForTabEvent ??= __type__?.GetMethodInfoByParameterTypeNames("CheckForTabEvent", "UnityEngine.Event");
		}
		
		private static MethodInfo ___SetKeyboardControlToFirstControlId;
		private static MethodInfo __SetKeyboardControlToFirstControlId
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetKeyboardControlToFirstControlId ??= __type__?.GetMethodInfoByParameterTypeNames("SetKeyboardControlToFirstControlId");
		}
		
		private static MethodInfo ___SetKeyboardControlToLastControlId;
		private static MethodInfo __SetKeyboardControlToLastControlId
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetKeyboardControlToLastControlId ??= __type__?.GetMethodInfoByParameterTypeNames("SetKeyboardControlToLastControlId");
		}
		
		private static MethodInfo ___HasFocusableControls;
		private static MethodInfo __HasFocusableControls
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasFocusableControls ??= __type__?.GetMethodInfoByParameterTypeNames("HasFocusableControls");
		}
		
		private static MethodInfo ___OwnsId;
		private static MethodInfo __OwnsId
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OwnsId ??= __type__?.GetMethodInfoByParameterTypeNames("OwnsId", "System.Int32");
		}
		
		private static MethodInfo ___Internal_MultiplyPoint;
		private static MethodInfo __Internal_MultiplyPoint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_MultiplyPoint ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_MultiplyPoint", "UnityEngine.Vector3", "UnityEngine.Matrix4x4");
		}
		
		private static MethodInfo ___GetChanged;
		private static MethodInfo __GetChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetChanged ??= __type__?.GetMethodInfoByParameterTypeNames("GetChanged");
		}
		
		private static MethodInfo ___SetChanged;
		private static MethodInfo __SetChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetChanged ??= __type__?.GetMethodInfoByParameterTypeNames("SetChanged", "System.Boolean");
		}
		
		private static MethodInfo ___SetDidGUIWindowsEatLastEvent;
		private static MethodInfo __SetDidGUIWindowsEatLastEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetDidGUIWindowsEatLastEvent ??= __type__?.GetMethodInfoByParameterTypeNames("SetDidGUIWindowsEatLastEvent", "System.Boolean");
		}
		
		private static MethodInfo ___Internal_GetHotControl;
		private static MethodInfo __Internal_GetHotControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetHotControl ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetHotControl");
		}
		
		private static MethodInfo ___Internal_GetKeyboardControl;
		private static MethodInfo __Internal_GetKeyboardControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetKeyboardControl ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetKeyboardControl");
		}
		
		private static MethodInfo ___Internal_SetHotControl;
		private static MethodInfo __Internal_SetHotControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_SetHotControl ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_SetHotControl", "System.Int32");
		}
		
		private static MethodInfo ___Internal_SetKeyboardControl;
		private static MethodInfo __Internal_SetKeyboardControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_SetKeyboardControl ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_SetKeyboardControl", "System.Int32");
		}
		
		private static MethodInfo ___Internal_GetDefaultSkin;
		private static MethodInfo __Internal_GetDefaultSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetDefaultSkin ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetDefaultSkin", "System.Int32");
		}
		
		private static MethodInfo ___Internal_GetBuiltinSkin;
		private static MethodInfo __Internal_GetBuiltinSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetBuiltinSkin ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetBuiltinSkin", "System.Int32");
		}
		
		private static MethodInfo ___Internal_ExitGUI;
		private static MethodInfo __Internal_ExitGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_ExitGUI ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_ExitGUI");
		}
		
		private static MethodInfo ___InternalWindowToScreenPoint;
		private static MethodInfo __InternalWindowToScreenPoint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalWindowToScreenPoint ??= __type__?.GetMethodInfoByParameterTypeNames("InternalWindowToScreenPoint", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___InternalScreenToWindowPoint;
		private static MethodInfo __InternalScreenToWindowPoint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalScreenToWindowPoint ??= __type__?.GetMethodInfoByParameterTypeNames("InternalScreenToWindowPoint", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___MarkGUIChanged;
		private static MethodInfo __MarkGUIChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___MarkGUIChanged ??= __type__?.GetMethodInfoByParameterTypeNames("MarkGUIChanged");
		}
		
		private static MethodInfo ___TakeCapture;
		private static MethodInfo __TakeCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TakeCapture ??= __type__?.GetMethodInfoByParameterTypeNames("TakeCapture");
		}
		
		private static MethodInfo ___RemoveCapture;
		private static MethodInfo __RemoveCapture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RemoveCapture ??= __type__?.GetMethodInfoByParameterTypeNames("RemoveCapture");
		}
		
		private static MethodInfo ___HasKeyFocus;
		private static MethodInfo __HasKeyFocus
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasKeyFocus ??= __type__?.GetMethodInfoByParameterTypeNames("HasKeyFocus", "System.Int32");
		}
		
		private static MethodInfo ___GetDefaultSkin;
		private static MethodInfo __GetDefaultSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetDefaultSkin ??= __type__?.GetMethodInfoByParameterTypeNames("GetDefaultSkin", "System.Int32");
		}
		
		private static MethodInfo ___GetDefaultSkin__2;
		private static MethodInfo __GetDefaultSkin__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetDefaultSkin__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetDefaultSkin");
		}
		
		private static MethodInfo ___GetBuiltinSkin;
		private static MethodInfo __GetBuiltinSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetBuiltinSkin ??= __type__?.GetMethodInfoByParameterTypeNames("GetBuiltinSkin", "System.Int32");
		}
		
		private static MethodInfo ___ProcessEvent;
		private static MethodInfo __ProcessEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ProcessEvent ??= __type__?.GetMethodInfoByParameterTypeNames("ProcessEvent", "System.Int32", "System.IntPtr", "System.Boolean&");
		}
		
		private static MethodInfo ___EndContainer;
		private static MethodInfo __EndContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndContainer ??= __type__?.GetMethodInfoByParameterTypeNames("EndContainer");
		}
		
		private static MethodInfo ___CleanupRoots;
		private static MethodInfo __CleanupRoots
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CleanupRoots ??= __type__?.GetMethodInfoByParameterTypeNames("CleanupRoots");
		}
		
		private static MethodInfo ___BeginGUI;
		private static MethodInfo __BeginGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginGUI ??= __type__?.GetMethodInfoByParameterTypeNames("BeginGUI", "System.Int32", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___SetSkin;
		private static MethodInfo __SetSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetSkin ??= __type__?.GetMethodInfoByParameterTypeNames("SetSkin", "System.Int32");
		}
		
		private static MethodInfo ___EndGUI;
		private static MethodInfo __EndGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndGUI ??= __type__?.GetMethodInfoByParameterTypeNames("EndGUI", "System.Int32");
		}
		
		private static MethodInfo ___EndGUIFromException;
		private static MethodInfo __EndGUIFromException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndGUIFromException ??= __type__?.GetMethodInfoByParameterTypeNames("EndGUIFromException", "System.Exception");
		}
		
		private static MethodInfo ___EndContainerGUIFromException;
		private static MethodInfo __EndContainerGUIFromException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndContainerGUIFromException ??= __type__?.GetMethodInfoByParameterTypeNames("EndContainerGUIFromException", "System.Exception");
		}
		
		private static MethodInfo ___ResetGlobalState;
		private static MethodInfo __ResetGlobalState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ResetGlobalState ??= __type__?.GetMethodInfoByParameterTypeNames("ResetGlobalState");
		}
		
		private static MethodInfo ___IsExitGUIException;
		private static MethodInfo __IsExitGUIException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsExitGUIException ??= __type__?.GetMethodInfoByParameterTypeNames("IsExitGUIException", "System.Exception");
		}
		
		private static MethodInfo ___ShouldRethrowException;
		private static MethodInfo __ShouldRethrowException
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldRethrowException ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldRethrowException", "System.Exception");
		}
		
		private static MethodInfo ___CheckOnGUI;
		private static MethodInfo __CheckOnGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckOnGUI ??= __type__?.GetMethodInfoByParameterTypeNames("CheckOnGUI");
		}
		
		private static MethodInfo ___RoundToPixelGrid;
		private static MethodInfo __RoundToPixelGrid
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RoundToPixelGrid ??= __type__?.GetMethodInfoByParameterTypeNames("RoundToPixelGrid", "System.Single");
		}
		
		private static MethodInfo ___HitTest;
		private static MethodInfo __HitTest
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HitTest ??= __type__?.GetMethodInfoByParameterTypeNames("HitTest", "UnityEngine.Rect", "UnityEngine.Vector2", "System.Int32");
		}
		
		private static MethodInfo ___HitTest__2;
		private static MethodInfo __HitTest__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HitTest__2 ??= __type__?.GetMethodInfoByParameterTypeNames("HitTest", "UnityEngine.Rect", "UnityEngine.Vector2", "System.Boolean");
		}
		
		private static MethodInfo ___HitTest__3;
		private static MethodInfo __HitTest__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HitTest__3 ??= __type__?.GetMethodInfoByParameterTypeNames("HitTest", "UnityEngine.Rect", "UnityEngine.Event");
		}
		
		private static MethodInfo ___Internal_GetControlID_Injected;
		private static MethodInfo __Internal_GetControlID_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetControlID_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetControlID_Injected", "System.Int32", "UnityEngine.FocusType", "UnityEngine.Rect&");
		}
		
		private static MethodInfo ___AlignRectToDevice_Injected;
		private static MethodInfo __AlignRectToDevice_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AlignRectToDevice_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("AlignRectToDevice_Injected", "UnityEngine.Rect&", "System.Int32&", "System.Int32&", "UnityEngine.Rect&");
		}
		
		private static MethodInfo ___Internal_MultiplyPoint_Injected;
		private static MethodInfo __Internal_MultiplyPoint_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_MultiplyPoint_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_MultiplyPoint_Injected", "UnityEngine.Vector3&", "UnityEngine.Matrix4x4&", "UnityEngine.Vector3&");
		}
		
		private static MethodInfo ___InternalWindowToScreenPoint_Injected;
		private static MethodInfo __InternalWindowToScreenPoint_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalWindowToScreenPoint_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("InternalWindowToScreenPoint_Injected", "UnityEngine.Vector2&", "UnityEngine.Vector2&");
		}
		
		private static MethodInfo ___InternalScreenToWindowPoint_Injected;
		private static MethodInfo __InternalScreenToWindowPoint_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalScreenToWindowPoint_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("InternalScreenToWindowPoint_Injected", "UnityEngine.Vector2&", "UnityEngine.Vector2&");
		}
	}
	public static class UnityEngine_GUIUtility_Extension
	{
		public static UnityEngine_GUIUtility ReflectionHelper(this UnityEngine.GUIUtility self) => new(self);
	}
}
