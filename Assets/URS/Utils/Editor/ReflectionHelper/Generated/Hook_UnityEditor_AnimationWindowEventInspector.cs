//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_AnimationWindowEventInspector
	{
		public static class __hook__
		{
			
			[MonoHook]
			public class DoEditRegularParameters
			{
				/// <summary>
				/// <see cref="UnityEditor.AnimationWindowEventInspector"/>
				/// </summary>
				public static string __type__ = "UnityEditor.AnimationWindowEventInspector";
				public delegate void __delegate__(UnityEngine.AnimationEvent[] events, System.Type selectedParameter);
				
				public struct Param
				{
					public UnityEngine.AnimationEvent[] events;
					public System.Type selectedParameter;
					
					public __delegate__ __original__;
				}
				
				public delegate bool BeginDelegate(ref Param param);
				public delegate void EndDelegate(ref Param param);
				public static BeginDelegate OnBegin = null;
				public static EndDelegate OnEnd = null;
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public static void __replace__(UnityEngine.AnimationEvent[] events, System.Type selectedParameter)
				{
					Param param = new();
					param.events = events;
					param.selectedParameter = selectedParameter;
					param.__original__ = __original__;
					
					if (OnBegin?.Invoke(ref param) == true)
						return;
					
					__original__(param.events, param.selectedParameter);
					
					OnEnd?.Invoke(ref param);
				}
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public static void __original__(UnityEngine.AnimationEvent[] events, System.Type selectedParameter)
				{
				}
			}
		}
	}
}
