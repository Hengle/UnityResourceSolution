//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_EditorGUI_RecycledTextEditor
	{
		
		/// <summary>
		/// <see cref="UnityEditor.EditorGUI+RecycledTextEditor"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.EditorGUI+RecycledTextEditor");
		
		
		public static bool s_ActuallyEditing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__s_ActuallyEditing?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ActuallyEditing?.SetValue(null, value);
		}
		
		public static bool s_AllowContextCutOrPaste
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__s_AllowContextCutOrPaste?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_AllowContextCutOrPaste?.SetValue(null, value);
		}
		
		public UnityEngine.IMECompositionMode m_IMECompositionModeBackup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.IMECompositionMode)(__m_IMECompositionModeBackup?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_IMECompositionModeBackup?.SetValue(__self__, value);
		}
		
		public bool IsEditingControl(int id)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			var __result__ = __IsEditingControl?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void BeginEditing(int id, string newText, UnityEngine.Rect _position, UnityEngine.GUIStyle _style, bool _multiline, bool passwordField)
		{
			var __pool__ = FixedArrayPool<object>.Shared(6);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			__params__[1] = newText;
			__params__[2] = _position;
			__params__[3] = _style;
			__params__[4] = _multiline;
			__params__[5] = passwordField;
			__BeginEditing?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void EndEditing()
		{
			__EndEditing?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEditor_EditorGUI_RecycledTextEditor(object __self__) => this.__self__ = __self__ as object;
		public object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEngine.TextEditor __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextEditor)(__self__);
		}
		
		private static FieldInfo ___s_ActuallyEditing;
		private static FieldInfo __s_ActuallyEditing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ActuallyEditing ??= __type__?.GetField("s_ActuallyEditing", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_AllowContextCutOrPaste;
		private static FieldInfo __s_AllowContextCutOrPaste
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_AllowContextCutOrPaste ??= __type__?.GetField("s_AllowContextCutOrPaste", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_IMECompositionModeBackup;
		private static FieldInfo __m_IMECompositionModeBackup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_IMECompositionModeBackup ??= __type__?.GetField("m_IMECompositionModeBackup", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___IsEditingControl;
		private static MethodInfo __IsEditingControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsEditingControl ??= __type__?.GetMethodInfoByParameterTypeNames("IsEditingControl", "System.Int32");
		}
		
		private static MethodInfo ___BeginEditing;
		private static MethodInfo __BeginEditing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginEditing ??= __type__?.GetMethodInfoByParameterTypeNames("BeginEditing", "System.Int32", "System.String", "UnityEngine.Rect", "UnityEngine.GUIStyle", "System.Boolean", "System.Boolean");
		}
		
		private static MethodInfo ___EndEditing;
		private static MethodInfo __EndEditing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndEditing ??= __type__?.GetMethodInfoByParameterTypeNames("EndEditing");
		}
	}
}
