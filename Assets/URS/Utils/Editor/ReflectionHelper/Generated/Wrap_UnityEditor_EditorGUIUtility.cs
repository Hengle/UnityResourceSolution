//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_EditorGUIUtility
	{
		
		/// <summary>
		/// <see cref="UnityEditor.EditorGUIUtility"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.EditorGUIUtility");
		
		public delegate bool HeaderItemDelegate(UnityEngine.Rect rectangle, UnityEngine.Object[] targets);
		
		public static int skinIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__skinIndex?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __skinIndex?.SetValue(null, value);
		}
		
		public static UnityEngine.Material GUITextureBlit2SRGBMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material)(__GUITextureBlit2SRGBMaterial?.GetValue(null));
		}
		
		public static UnityEngine.Material GUITextureBlitSceneGUIMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material)(__GUITextureBlitSceneGUIMaterial?.GetValue(null));
		}
		
		public static UnityEngine.Texture2D infoIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Texture2D)(__infoIcon?.GetValue(null));
		}
		
		public static UnityEngine.Texture2D warningIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Texture2D)(__warningIcon?.GetValue(null));
		}
		
		public static UnityEngine.Texture2D errorIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Texture2D)(__errorIcon?.GetValue(null));
		}
		
		public static UnityEngine.GUIContent blankContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__blankContent?.GetValue(null));
		}
		
		public static UnityEngine.GUIStyle whiteTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIStyle)(__whiteTextureStyle?.GetValue(null));
		}
		
		public static object comparisonViewMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__comparisonViewMode?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __comparisonViewMode?.SetValue(null, value);
		}
		
		public static float leftMarginCoord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__leftMarginCoord?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __leftMarginCoord?.SetValue(null, value);
		}
		
		public static float contextWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__contextWidth?.GetValue(null));
		}
		
		public static float currentViewWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__currentViewWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __currentViewWidth?.SetValue(null, value);
		}
		
		public static UnityEngine.EventType magnifyGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.EventType)(__magnifyGestureEventType?.GetValue(null));
		}
		
		public static UnityEngine.EventType swipeGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.EventType)(__swipeGestureEventType?.GetValue(null));
		}
		
		public static UnityEngine.EventType rotateGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.EventType)(__rotateGestureEventType?.GetValue(null));
		}
		
		public static UnityEngine.Material s_GUITextureBlit2SRGBMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material)(__s_GUITextureBlit2SRGBMaterial?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GUITextureBlit2SRGBMaterial?.SetValue(null, value);
		}
		
		public static UnityEngine.Material s_GUITextureBlitSceneGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material)(__s_GUITextureBlitSceneGUI?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GUITextureBlitSceneGUI?.SetValue(null, value);
		}
		
		public static int s_FontIsBold
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_FontIsBold?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_FontIsBold?.SetValue(null, value);
		}
		
		public static int s_LastControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_LastControlID?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LastControlID?.SetValue(null, value);
		}
		
		public static float s_LabelWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__s_LabelWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LabelWidth?.SetValue(null, value);
		}
		
		public static object s_InfoIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_InfoIcon?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_InfoIcon?.SetValue(null, value);
		}
		
		public static object s_WarningIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_WarningIcon?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_WarningIcon?.SetValue(null, value);
		}
		
		public static object s_ErrorIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_ErrorIcon?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ErrorIcon?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIStyle s_WhiteTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIStyle)(__s_WhiteTextureStyle?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_WhiteTextureStyle?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIStyle s_BasicTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIStyle)(__s_BasicTextureStyle?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_BasicTextureStyle?.SetValue(null, value);
		}
		
		public static System.Collections.Hashtable s_TextGUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Hashtable)(__s_TextGUIContents?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_TextGUIContents?.SetValue(null, value);
		}
		
		public static System.Collections.Hashtable s_GUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Hashtable)(__s_GUIContents?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GUIContents?.SetValue(null, value);
		}
		
		public static System.Collections.Hashtable s_IconGUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Hashtable)(__s_IconGUIContents?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_IconGUIContents?.SetValue(null, value);
		}
		
		public static System.Collections.Hashtable s_SkinnedIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Hashtable)(__s_SkinnedIcons?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_SkinnedIcons?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent s_ObjectContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_ObjectContent?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ObjectContent?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent s_Text
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_Text?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_Text?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent s_Image
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_Image?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_Image?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent s_TextImage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_TextImage?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_TextImage?.SetValue(null, value);
		}
		
		public static object kViewBackgroundColor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__kViewBackgroundColor?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kViewBackgroundColor?.SetValue(null, value);
		}
		
		public static System.Action<UnityEditor.GenericMenu, UnityEditor.SerializedProperty> contextualPropertyMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action<UnityEditor.GenericMenu, UnityEditor.SerializedProperty>)(__contextualPropertyMenu__2?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __contextualPropertyMenu__2?.SetValue(null, value);
		}
		
		public static System.Action<UnityEngine.Rect, UnityEditor.SerializedProperty> beginProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action<UnityEngine.Rect, UnityEditor.SerializedProperty>)(__beginProperty__2?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __beginProperty__2?.SetValue(null, value);
		}
		
		public static System.Collections.IList s_EditorHeaderItemsMethods
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.IList)(__s_EditorHeaderItemsMethods?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_EditorHeaderItemsMethods?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static HeaderItemDelegate s_EditorHeaderItemsMethods__GetItem(int i) => (s_EditorHeaderItemsMethods?[i] as Delegate)?.Cast<HeaderItemDelegate>();
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_EditorHeaderItemsMethods__SetItem(int i, HeaderItemDelegate value)
		{
			var __list__ = s_EditorHeaderItemsMethods;
			if (__list__ == null) return;
			__list__[i] = value?.Cast(__E__s_EditorHeaderItemsMethods);
		}
		
		public static object sliderLabels
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__sliderLabels?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __sliderLabels?.SetValue(null, value);
		}
		
		public static System.Collections.Generic.List<string> k_UserSideSupportedImageExtensions
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.List<string>)(__k_UserSideSupportedImageExtensions?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_UserSideSupportedImageExtensions?.SetValue(null, value);
		}
		
		public static object s_ComparisonViewMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_ComparisonViewMode?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ComparisonViewMode?.SetValue(null, value);
		}
		
		public static float s_LeftMarginCoord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__s_LeftMarginCoord?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LeftMarginCoord?.SetValue(null, value);
		}
		
		public static System.Collections.Generic.Stack<float> s_ContextWidthStack
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.Stack<float>)(__s_ContextWidthStack?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ContextWidthStack?.SetValue(null, value);
		}
		
		public static float s_OverriddenViewWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__s_OverriddenViewWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_OverriddenViewWidth?.SetValue(null, value);
		}
		
		public static float s_FieldWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__s_FieldWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_FieldWidth?.SetValue(null, value);
		}
		
		public static string k_LookLikeControlsObsoleteMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__k_LookLikeControlsObsoleteMessage?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_LookLikeControlsObsoleteMessage?.SetValue(null, value);
		}
		
		public static UnityEngine.Object GetScript(string scriptClass)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = scriptClass;
			var __result__ = __GetScript?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public static UnityEngine.Object GetBuiltinExtraResource(System.Type type, string path)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			__params__[1] = path;
			var __result__ = __GetBuiltinExtraResource?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public static Array GetBuiltinResourceList(int classID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = classID;
			var __result__ = __GetBuiltinResourceList?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static UnityEngine.AssetBundle GetEditorAssetBundle()
		{
			var __result__ = __GetEditorAssetBundle?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.AssetBundle)(__result__) : default;
		}
		
		public static UnityEngine.AssetBundle ReloadEditorAssetBundle()
		{
			var __result__ = __ReloadEditorAssetBundle?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.AssetBundle)(__result__) : default;
		}
		
		public static void SetRenderTextureNoViewport(UnityEngine.RenderTexture rt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = rt;
			__SetRenderTextureNoViewport?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetVisibleLayers(int layers)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = layers;
			__SetVisibleLayers?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetLockedLayers(int layers)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = layers;
			__SetLockedLayers?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static bool IsGizmosAllowedForObject(UnityEngine.Object obj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			var __result__ = __IsGizmosAllowedForObject?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void SetCurrentViewCursor(UnityEngine.Texture2D texture, UnityEngine.Vector2 hotspot, UnityEditor.MouseCursor type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = texture;
			__params__[1] = hotspot;
			__params__[2] = type;
			__SetCurrentViewCursor?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void ClearCurrentViewCursor()
		{
			__ClearCurrentViewCursor?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void CleanCache(string text)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = text;
			__CleanCache?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetSearchIndexOfControlIDList(int index)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = index;
			__SetSearchIndexOfControlIDList?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static int GetSearchIndexOfControlIDList()
		{
			var __result__ = __GetSearchIndexOfControlIDList?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static bool CanHaveKeyboardFocus(int id)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			var __result__ = __CanHaveKeyboardFocus?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void SetDefaultFont(UnityEngine.Font font)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = font;
			__SetDefaultFont?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void RenderPlayModeViewCamerasInternal(UnityEngine.RenderTexture target, int targetDisplay, UnityEngine.Vector2 mousePosition, bool gizmos, bool renderIMGUI)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = target;
			__params__[1] = targetDisplay;
			__params__[2] = mousePosition;
			__params__[3] = gizmos;
			__params__[4] = renderIMGUI;
			__RenderPlayModeViewCamerasInternal?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetupWindowSpaceAndVSyncInternal(UnityEngine.Rect screenRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = screenRect;
			__SetupWindowSpaceAndVSyncInternal?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Texture2D FindTextureByName(string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			var __result__ = __FindTextureByName?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D FindTextureByType(System.Type type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __FindTextureByType?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static string GetObjectNameWithInfo(UnityEngine.Object obj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			var __result__ = __GetObjectNameWithInfo?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (string)(__result__) : default;
		}
		
		public static string GetTypeNameWithInfo(string typeName, int instanceID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = typeName;
			__params__[1] = instanceID;
			var __result__ = __GetTypeNameWithInfo?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (string)(__result__) : default;
		}
		
		public static void Internal_SetupEventValues(object evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = evt;
			__Internal_SetupEventValues?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Vector2 Internal_GetIconSize()
		{
			var __result__ = __Internal_GetIconSize?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Vector2)(__result__) : default;
		}
		
		public static bool Internal_GetKeyboardRect(int id, out UnityEngine.Rect rect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			__params__[1] = Activator.CreateInstance(typeof(UnityEngine.Rect));
			var __result__ = __Internal_GetKeyboardRect?.Invoke(null, __params__);
			rect = (UnityEngine.Rect)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void Internal_MoveKeyboardFocus(bool forward)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = forward;
			__Internal_MoveKeyboardFocus?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static int Internal_GetNextKeyboardControlID(bool forward)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = forward;
			var __result__ = __Internal_GetNextKeyboardControlID?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void Internal_AddCursorRect(UnityEngine.Rect r, UnityEditor.MouseCursor m, int controlID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			__params__[1] = m;
			__params__[2] = controlID;
			__Internal_AddCursorRect?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Material GetPreviewMaterial(object type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __GetPreviewMaterial?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Material)(__result__) : default;
		}
		
		public static void RegisterResourceForCleanupOnDomainReload(UnityEngine.Object obj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__RegisterResourceForCleanupOnDomainReload?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void BeginPropertyCallback(UnityEngine.Rect totalRect, UnityEditor.SerializedProperty property)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = totalRect;
			__params__[1] = property;
			__BeginPropertyCallback?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void ContextualPropertyMenuCallback(UnityEditor.GenericMenu gm, UnityEditor.SerializedProperty prop)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = gm;
			__params__[1] = prop;
			__ContextualPropertyMenuCallback?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Rect GetCenteredWindowPosition(UnityEngine.Rect parentWindowPosition, UnityEngine.Vector2 size)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = parentWindowPosition;
			__params__[1] = size;
			var __result__ = __GetCenteredWindowPosition?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static void RepaintCurrentWindow()
		{
			__RepaintCurrentWindow?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static bool HasCurrentWindowKeyFocus()
		{
			var __result__ = __HasCurrentWindowKeyFocus?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static UnityEngine.Rect DrawEditorHeaderItems(UnityEngine.Rect rectangle, UnityEngine.Object[] targetObjs, float spacing)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = rectangle;
			__params__[1] = targetObjs;
			__params__[2] = spacing;
			var __result__ = __DrawEditorHeaderItems?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D FindTexture(System.Type type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __FindTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D LightenTexture(UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = texture;
			var __result__ = __LightenTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Color LightenColor(UnityEngine.Color color)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = color;
			var __result__ = __LightenColor?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Color)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TrIconContent(string iconName, string tooltip, bool lightenTexture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = iconName;
			__params__[1] = tooltip;
			__params__[2] = lightenTexture;
			var __result__ = __TrIconContent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TrIconContent<T>(string tooltip)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = tooltip;
			var __result__ = __TrIconContent__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TextContent(string textAndTooltip)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = textAndTooltip;
			var __result__ = __TextContent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TextContentWithIcon(string textAndTooltip, string icon)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = textAndTooltip;
			__params__[1] = icon;
			var __result__ = __TextContentWithIcon?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.Color GetDefaultBackgroundColor()
		{
			var __result__ = __GetDefaultBackgroundColor?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Color)(__result__) : default;
		}
		
		public static string[] GetNameAndTooltipString(string nameAndTooltip)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = nameAndTooltip;
			var __result__ = __GetNameAndTooltipString?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (string[])(__result__) : default;
		}
		
		public static UnityEngine.Texture2D LoadIconRequired(string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			var __result__ = __LoadIconRequired?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D LoadIcon(string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			var __result__ = __LoadIcon?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D LoadGeneratedIconOrNormalIcon(string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			var __result__ = __LoadGeneratedIconOrNormalIcon?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D InnerLoadGeneratedIconOrNormalIcon(string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			var __result__ = __InnerLoadGeneratedIconOrNormalIcon?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D LoadIconForSkin(string name, int in_SkinIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = name;
			__params__[1] = in_SkinIndex;
			var __result__ = __LoadIconForSkin?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static string GetIconPathFromAttribute(System.Type type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __GetIconPathFromAttribute?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (string)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent IconContent<T>(string text)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = text;
			var __result__ = __IconContent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent IconContent(UnityEngine.Texture icon, string text)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = icon;
			__params__[1] = text;
			var __result__ = __IconContent__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static void Internal_SwitchSkin()
		{
			__Internal_SwitchSkin?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static UnityEngine.GUIContent ObjectContent(UnityEngine.Object obj, System.Type type, int instanceID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__params__[1] = type;
			__params__[2] = instanceID;
			var __result__ = __ObjectContent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TempContent(string t)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			var __result__ = __TempContent?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TempContent(string text, string tip)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = text;
			__params__[1] = tip;
			var __result__ = __TempContent__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TempContent(UnityEngine.Texture i)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = i;
			var __result__ = __TempContent__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent TempContent(string t, UnityEngine.Texture i)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			__params__[1] = i;
			var __result__ = __TempContent__4?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent[] TempContent(string[] texts)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = texts;
			var __result__ = __TempContent__5?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent[])(__result__) : default;
		}
		
		public static UnityEngine.GUIContent[] TempContent(string[] texts, string[] tooltips)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = texts;
			__params__[1] = tooltips;
			var __result__ = __TempContent__6?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent[])(__result__) : default;
		}
		
		public static bool HasHolddownKeyModifiers(UnityEngine.Event evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = evt;
			var __result__ = __HasHolddownKeyModifiers?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static UnityEngine.Texture2D GetHelpIcon(UnityEditor.MessageType type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __GetHelpIcon?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture2D)(__result__) : default;
		}
		
		public static UnityEngine.GUIStyle GetBasicTextureStyle(UnityEngine.Texture2D tex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = tex;
			var __result__ = __GetBasicTextureStyle?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIStyle)(__result__) : default;
		}
		
		public static void NotifyLanguageChanged(UnityEngine.SystemLanguage newLanguage)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = newLanguage;
			__NotifyLanguageChanged?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Object Load(string filename, System.Type type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = filename;
			__params__[1] = type;
			var __result__ = __Load?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public static void PingObjectFromCPP(int targetInstanceID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = targetInstanceID;
			__PingObjectFromCPP?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void MoveFocusAndScroll(bool forward)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = forward;
			__MoveFocusAndScroll?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void RefreshScrollPosition()
		{
			__RefreshScrollPosition?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void ScrollForTabbing(bool forward)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = forward;
			__ScrollForTabbing?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void ResetGUIState()
		{
			__ResetGUIState?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void HandleControlID(int id)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = id;
			__HandleControlID?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static float CalcContextWidth()
		{
			var __result__ = __CalcContextWidth?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static void LockContextWidth()
		{
			__LockContextWidth?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void UnlockContextWidth()
		{
			__UnlockContextWidth?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void SkinChanged()
		{
			__SkinChanged?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static UnityEngine.Rect DragZoneRect(UnityEngine.Rect position, bool hasLabel)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = hasLabel;
			var __result__ = __DragZoneRect?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static void SetBoldDefaultFont(bool isBold)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = isBold;
			__SetBoldDefaultFont?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static bool GetBoldDefaultFont()
		{
			var __result__ = __GetBoldDefaultFont?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void DrawColorSwatch(UnityEngine.Rect position, UnityEngine.Color color, bool showAlpha)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = color;
			__params__[2] = showAlpha;
			__DrawColorSwatch?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void DrawColorSwatch(UnityEngine.Rect position, UnityEngine.Color color, bool showAlpha, bool hdr)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = color;
			__params__[2] = showAlpha;
			__params__[3] = hdr;
			__DrawColorSwatch__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void DrawRegionSwatch(UnityEngine.Rect position, UnityEditor.SerializedProperty property, UnityEditor.SerializedProperty property2, UnityEngine.Color color, UnityEngine.Color bgColor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = property;
			__params__[2] = property2;
			__params__[3] = color;
			__params__[4] = bgColor;
			__DrawRegionSwatch?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void DrawCurveSwatchInternal(UnityEngine.Rect position, UnityEngine.AnimationCurve curve, UnityEngine.AnimationCurve curve2, UnityEditor.SerializedProperty property, UnityEditor.SerializedProperty property2, UnityEngine.Color color, UnityEngine.Color bgColor, bool useCurveRanges, UnityEngine.Rect curveRanges, UnityEngine.Color topFillColor, UnityEngine.Color bottomFillColor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(11);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = curve;
			__params__[2] = curve2;
			__params__[3] = property;
			__params__[4] = property2;
			__params__[5] = color;
			__params__[6] = bgColor;
			__params__[7] = useCurveRanges;
			__params__[8] = curveRanges;
			__params__[9] = topFillColor;
			__params__[10] = bottomFillColor;
			__DrawCurveSwatchInternal?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Rect HandleHorizontalSplitter(UnityEngine.Rect dragRect, float width, float minLeftSide, float minRightSide)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = dragRect;
			__params__[1] = width;
			__params__[2] = minLeftSide;
			__params__[3] = minRightSide;
			var __result__ = __HandleHorizontalSplitter?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static void DrawHorizontalSplitter(UnityEngine.Rect dragRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = dragRect;
			__DrawHorizontalSplitter?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetupObjectSelector(UnityEngine.Object obj, System.Type objType, bool allowSceneObjects, string searchFilter, int controlID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__params__[1] = objType;
			__params__[2] = allowSceneObjects;
			__params__[3] = searchFilter;
			__params__[4] = controlID;
			__SetupObjectSelector?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void SetIconSize_Injected(ref UnityEngine.Vector2 size)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = size;
			__SetIconSize_Injected?.Invoke(null, __params__);
			size = (UnityEngine.Vector2)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public static void SetCurrentViewCursor_Injected(UnityEngine.Texture2D texture, ref UnityEngine.Vector2 hotspot, UnityEditor.MouseCursor type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = texture;
			__params__[1] = hotspot;
			__params__[2] = type;
			__SetCurrentViewCursor_Injected?.Invoke(null, __params__);
			hotspot = (UnityEngine.Vector2)(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public static void RenderPlayModeViewCamerasInternal_Injected(UnityEngine.RenderTexture target, int targetDisplay, ref UnityEngine.Vector2 mousePosition, bool gizmos, bool renderIMGUI)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = target;
			__params__[1] = targetDisplay;
			__params__[2] = mousePosition;
			__params__[3] = gizmos;
			__params__[4] = renderIMGUI;
			__RenderPlayModeViewCamerasInternal_Injected?.Invoke(null, __params__);
			mousePosition = (UnityEngine.Vector2)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void SetupWindowSpaceAndVSyncInternal_Injected(ref UnityEngine.Rect screenRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = screenRect;
			__SetupWindowSpaceAndVSyncInternal_Injected?.Invoke(null, __params__);
			screenRect = (UnityEngine.Rect)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public static void Internal_GetIconSize_Injected(out UnityEngine.Vector2 ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(UnityEngine.Vector2));
			__Internal_GetIconSize_Injected?.Invoke(null, __params__);
			ret = (UnityEngine.Vector2)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public static void Internal_AddCursorRect_Injected(ref UnityEngine.Rect r, UnityEditor.MouseCursor m, int controlID)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			__params__[1] = m;
			__params__[2] = controlID;
			__Internal_AddCursorRect_Injected?.Invoke(null, __params__);
			r = (UnityEngine.Rect)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public UnityEditor_EditorGUIUtility(object __self__) => this.__self__ = __self__ as object;
		public object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEditor.EditorGUIUtility __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.EditorGUIUtility)(__self__);
		}
		
		private static FieldInfo ___s_GUITextureBlit2SRGBMaterial;
		private static FieldInfo __s_GUITextureBlit2SRGBMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GUITextureBlit2SRGBMaterial ??= __type__?.GetField("s_GUITextureBlit2SRGBMaterial", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_GUITextureBlitSceneGUI;
		private static FieldInfo __s_GUITextureBlitSceneGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GUITextureBlitSceneGUI ??= __type__?.GetField("s_GUITextureBlitSceneGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_FontIsBold;
		private static FieldInfo __s_FontIsBold
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_FontIsBold ??= __type__?.GetField("s_FontIsBold", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_LastControlID;
		private static FieldInfo __s_LastControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LastControlID ??= __type__?.GetField("s_LastControlID", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_LabelWidth;
		private static FieldInfo __s_LabelWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LabelWidth ??= __type__?.GetField("s_LabelWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_InfoIcon;
		private static FieldInfo __s_InfoIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_InfoIcon ??= __type__?.GetField("s_InfoIcon", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_WarningIcon;
		private static FieldInfo __s_WarningIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_WarningIcon ??= __type__?.GetField("s_WarningIcon", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ErrorIcon;
		private static FieldInfo __s_ErrorIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ErrorIcon ??= __type__?.GetField("s_ErrorIcon", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_WhiteTextureStyle;
		private static FieldInfo __s_WhiteTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_WhiteTextureStyle ??= __type__?.GetField("s_WhiteTextureStyle", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_BasicTextureStyle;
		private static FieldInfo __s_BasicTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_BasicTextureStyle ??= __type__?.GetField("s_BasicTextureStyle", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_TextGUIContents;
		private static FieldInfo __s_TextGUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_TextGUIContents ??= __type__?.GetField("s_TextGUIContents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_GUIContents;
		private static FieldInfo __s_GUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GUIContents ??= __type__?.GetField("s_GUIContents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_IconGUIContents;
		private static FieldInfo __s_IconGUIContents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_IconGUIContents ??= __type__?.GetField("s_IconGUIContents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_SkinnedIcons;
		private static FieldInfo __s_SkinnedIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_SkinnedIcons ??= __type__?.GetField("s_SkinnedIcons", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ObjectContent;
		private static FieldInfo __s_ObjectContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ObjectContent ??= __type__?.GetField("s_ObjectContent", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_Text;
		private static FieldInfo __s_Text
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_Text ??= __type__?.GetField("s_Text", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_Image;
		private static FieldInfo __s_Image
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_Image ??= __type__?.GetField("s_Image", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_TextImage;
		private static FieldInfo __s_TextImage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_TextImage ??= __type__?.GetField("s_TextImage", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kViewBackgroundColor;
		private static FieldInfo __kViewBackgroundColor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kViewBackgroundColor ??= __type__?.GetField("kViewBackgroundColor", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___contextualPropertyMenu__2;
		private static FieldInfo __contextualPropertyMenu__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___contextualPropertyMenu__2 ??= __type__?.GetField("contextualPropertyMenu", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___beginProperty__2;
		private static FieldInfo __beginProperty__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___beginProperty__2 ??= __type__?.GetField("beginProperty", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_EditorHeaderItemsMethods;
		private static FieldInfo __s_EditorHeaderItemsMethods
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_EditorHeaderItemsMethods ??= __type__?.GetField("s_EditorHeaderItemsMethods", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_EditorHeaderItemsMethods;
		public static Type __E__s_EditorHeaderItemsMethods
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_EditorHeaderItemsMethods ??= EditorUtils.GetTypeByFullName("UnityEditor.EditorGUIUtility+HeaderItemDelegate");
		}
		
		private static FieldInfo ___sliderLabels;
		private static FieldInfo __sliderLabels
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___sliderLabels ??= __type__?.GetField("sliderLabels", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_UserSideSupportedImageExtensions;
		private static FieldInfo __k_UserSideSupportedImageExtensions
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_UserSideSupportedImageExtensions ??= __type__?.GetField("k_UserSideSupportedImageExtensions", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ComparisonViewMode;
		private static FieldInfo __s_ComparisonViewMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ComparisonViewMode ??= __type__?.GetField("s_ComparisonViewMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_LeftMarginCoord;
		private static FieldInfo __s_LeftMarginCoord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LeftMarginCoord ??= __type__?.GetField("s_LeftMarginCoord", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ContextWidthStack;
		private static FieldInfo __s_ContextWidthStack
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ContextWidthStack ??= __type__?.GetField("s_ContextWidthStack", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_OverriddenViewWidth;
		private static FieldInfo __s_OverriddenViewWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_OverriddenViewWidth ??= __type__?.GetField("s_OverriddenViewWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_FieldWidth;
		private static FieldInfo __s_FieldWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_FieldWidth ??= __type__?.GetField("s_FieldWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_LookLikeControlsObsoleteMessage;
		private static FieldInfo __k_LookLikeControlsObsoleteMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_LookLikeControlsObsoleteMessage ??= __type__?.GetField("k_LookLikeControlsObsoleteMessage", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___skinIndex;
		private static PropertyInfo __skinIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___skinIndex ??= __type__?.GetProperty("skinIndex", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___GUITextureBlit2SRGBMaterial;
		private static PropertyInfo __GUITextureBlit2SRGBMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GUITextureBlit2SRGBMaterial ??= __type__?.GetProperty("GUITextureBlit2SRGBMaterial", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___GUITextureBlitSceneGUIMaterial;
		private static PropertyInfo __GUITextureBlitSceneGUIMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GUITextureBlitSceneGUIMaterial ??= __type__?.GetProperty("GUITextureBlitSceneGUIMaterial", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___infoIcon;
		private static PropertyInfo __infoIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___infoIcon ??= __type__?.GetProperty("infoIcon", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___warningIcon;
		private static PropertyInfo __warningIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___warningIcon ??= __type__?.GetProperty("warningIcon", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___errorIcon;
		private static PropertyInfo __errorIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___errorIcon ??= __type__?.GetProperty("errorIcon", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___blankContent;
		private static PropertyInfo __blankContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___blankContent ??= __type__?.GetProperty("blankContent", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___whiteTextureStyle;
		private static PropertyInfo __whiteTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___whiteTextureStyle ??= __type__?.GetProperty("whiteTextureStyle", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___comparisonViewMode;
		private static PropertyInfo __comparisonViewMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___comparisonViewMode ??= __type__?.GetProperty("comparisonViewMode", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___leftMarginCoord;
		private static PropertyInfo __leftMarginCoord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___leftMarginCoord ??= __type__?.GetProperty("leftMarginCoord", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___contextWidth;
		private static PropertyInfo __contextWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___contextWidth ??= __type__?.GetProperty("contextWidth", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___currentViewWidth;
		private static PropertyInfo __currentViewWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___currentViewWidth ??= __type__?.GetProperty("currentViewWidth", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___magnifyGestureEventType;
		private static PropertyInfo __magnifyGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___magnifyGestureEventType ??= __type__?.GetProperty("magnifyGestureEventType", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___swipeGestureEventType;
		private static PropertyInfo __swipeGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___swipeGestureEventType ??= __type__?.GetProperty("swipeGestureEventType", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___rotateGestureEventType;
		private static PropertyInfo __rotateGestureEventType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___rotateGestureEventType ??= __type__?.GetProperty("rotateGestureEventType", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___GetScript;
		private static MethodInfo __GetScript
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetScript ??= __type__?.GetMethodInfoByParameterTypeNames("GetScript", "System.String");
		}
		
		private static MethodInfo ___GetBuiltinExtraResource;
		private static MethodInfo __GetBuiltinExtraResource
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetBuiltinExtraResource ??= __type__?.GetMethodInfoByParameterTypeNames("GetBuiltinExtraResource", "System.Type", "System.String");
		}
		
		private static MethodInfo ___GetBuiltinResourceList;
		private static MethodInfo __GetBuiltinResourceList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetBuiltinResourceList ??= __type__?.GetMethodInfoByParameterTypeNames("GetBuiltinResourceList", "System.Int32");
		}
		
		private static MethodInfo ___GetEditorAssetBundle;
		private static MethodInfo __GetEditorAssetBundle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetEditorAssetBundle ??= __type__?.GetMethodInfoByParameterTypeNames("GetEditorAssetBundle");
		}
		
		private static MethodInfo ___ReloadEditorAssetBundle;
		private static MethodInfo __ReloadEditorAssetBundle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ReloadEditorAssetBundle ??= __type__?.GetMethodInfoByParameterTypeNames("ReloadEditorAssetBundle");
		}
		
		private static MethodInfo ___SetRenderTextureNoViewport;
		private static MethodInfo __SetRenderTextureNoViewport
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetRenderTextureNoViewport ??= __type__?.GetMethodInfoByParameterTypeNames("SetRenderTextureNoViewport", "UnityEngine.RenderTexture");
		}
		
		private static MethodInfo ___SetVisibleLayers;
		private static MethodInfo __SetVisibleLayers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetVisibleLayers ??= __type__?.GetMethodInfoByParameterTypeNames("SetVisibleLayers", "System.Int32");
		}
		
		private static MethodInfo ___SetLockedLayers;
		private static MethodInfo __SetLockedLayers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetLockedLayers ??= __type__?.GetMethodInfoByParameterTypeNames("SetLockedLayers", "System.Int32");
		}
		
		private static MethodInfo ___IsGizmosAllowedForObject;
		private static MethodInfo __IsGizmosAllowedForObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsGizmosAllowedForObject ??= __type__?.GetMethodInfoByParameterTypeNames("IsGizmosAllowedForObject", "UnityEngine.Object");
		}
		
		private static MethodInfo ___SetCurrentViewCursor;
		private static MethodInfo __SetCurrentViewCursor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetCurrentViewCursor ??= __type__?.GetMethodInfoByParameterTypeNames("SetCurrentViewCursor", "UnityEngine.Texture2D", "UnityEngine.Vector2", "UnityEditor.MouseCursor");
		}
		
		private static MethodInfo ___ClearCurrentViewCursor;
		private static MethodInfo __ClearCurrentViewCursor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearCurrentViewCursor ??= __type__?.GetMethodInfoByParameterTypeNames("ClearCurrentViewCursor");
		}
		
		private static MethodInfo ___CleanCache;
		private static MethodInfo __CleanCache
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CleanCache ??= __type__?.GetMethodInfoByParameterTypeNames("CleanCache", "System.String");
		}
		
		private static MethodInfo ___SetSearchIndexOfControlIDList;
		private static MethodInfo __SetSearchIndexOfControlIDList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetSearchIndexOfControlIDList ??= __type__?.GetMethodInfoByParameterTypeNames("SetSearchIndexOfControlIDList", "System.Int32");
		}
		
		private static MethodInfo ___GetSearchIndexOfControlIDList;
		private static MethodInfo __GetSearchIndexOfControlIDList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSearchIndexOfControlIDList ??= __type__?.GetMethodInfoByParameterTypeNames("GetSearchIndexOfControlIDList");
		}
		
		private static MethodInfo ___CanHaveKeyboardFocus;
		private static MethodInfo __CanHaveKeyboardFocus
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CanHaveKeyboardFocus ??= __type__?.GetMethodInfoByParameterTypeNames("CanHaveKeyboardFocus", "System.Int32");
		}
		
		private static MethodInfo ___SetDefaultFont;
		private static MethodInfo __SetDefaultFont
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetDefaultFont ??= __type__?.GetMethodInfoByParameterTypeNames("SetDefaultFont", "UnityEngine.Font");
		}
		
		private static MethodInfo ___RenderPlayModeViewCamerasInternal;
		private static MethodInfo __RenderPlayModeViewCamerasInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderPlayModeViewCamerasInternal ??= __type__?.GetMethodInfoByParameterTypeNames("RenderPlayModeViewCamerasInternal", "UnityEngine.RenderTexture", "System.Int32", "UnityEngine.Vector2", "System.Boolean", "System.Boolean");
		}
		
		private static MethodInfo ___SetupWindowSpaceAndVSyncInternal;
		private static MethodInfo __SetupWindowSpaceAndVSyncInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetupWindowSpaceAndVSyncInternal ??= __type__?.GetMethodInfoByParameterTypeNames("SetupWindowSpaceAndVSyncInternal", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___FindTextureByName;
		private static MethodInfo __FindTextureByName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FindTextureByName ??= __type__?.GetMethodInfoByParameterTypeNames("FindTextureByName", "System.String");
		}
		
		private static MethodInfo ___FindTextureByType;
		private static MethodInfo __FindTextureByType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FindTextureByType ??= __type__?.GetMethodInfoByParameterTypeNames("FindTextureByType", "System.Type");
		}
		
		private static MethodInfo ___GetObjectNameWithInfo;
		private static MethodInfo __GetObjectNameWithInfo
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetObjectNameWithInfo ??= __type__?.GetMethodInfoByParameterTypeNames("GetObjectNameWithInfo", "UnityEngine.Object");
		}
		
		private static MethodInfo ___GetTypeNameWithInfo;
		private static MethodInfo __GetTypeNameWithInfo
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetTypeNameWithInfo ??= __type__?.GetMethodInfoByParameterTypeNames("GetTypeNameWithInfo", "System.String", "System.Int32");
		}
		
		private static MethodInfo ___Internal_SetupEventValues;
		private static MethodInfo __Internal_SetupEventValues
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_SetupEventValues ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_SetupEventValues", "System.Object");
		}
		
		private static MethodInfo ___Internal_GetIconSize;
		private static MethodInfo __Internal_GetIconSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetIconSize ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetIconSize");
		}
		
		private static MethodInfo ___Internal_GetKeyboardRect;
		private static MethodInfo __Internal_GetKeyboardRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetKeyboardRect ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetKeyboardRect", "System.Int32", "UnityEngine.Rect&");
		}
		
		private static MethodInfo ___Internal_MoveKeyboardFocus;
		private static MethodInfo __Internal_MoveKeyboardFocus
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_MoveKeyboardFocus ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_MoveKeyboardFocus", "System.Boolean");
		}
		
		private static MethodInfo ___Internal_GetNextKeyboardControlID;
		private static MethodInfo __Internal_GetNextKeyboardControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetNextKeyboardControlID ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetNextKeyboardControlID", "System.Boolean");
		}
		
		private static MethodInfo ___Internal_AddCursorRect;
		private static MethodInfo __Internal_AddCursorRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_AddCursorRect ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_AddCursorRect", "UnityEngine.Rect", "UnityEditor.MouseCursor", "System.Int32");
		}
		
		private static MethodInfo ___GetPreviewMaterial;
		private static MethodInfo __GetPreviewMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPreviewMaterial ??= __type__?.GetMethodInfoByParameterTypeNames("GetPreviewMaterial", "UnityEditor.EditorGUIUtility+PreviewType");
		}
		
		private static MethodInfo ___RegisterResourceForCleanupOnDomainReload;
		private static MethodInfo __RegisterResourceForCleanupOnDomainReload
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RegisterResourceForCleanupOnDomainReload ??= __type__?.GetMethodInfoByParameterTypeNames("RegisterResourceForCleanupOnDomainReload", "UnityEngine.Object");
		}
		
		private static MethodInfo ___BeginPropertyCallback;
		private static MethodInfo __BeginPropertyCallback
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginPropertyCallback ??= __type__?.GetMethodInfoByParameterTypeNames("BeginPropertyCallback", "UnityEngine.Rect", "UnityEditor.SerializedProperty");
		}
		
		private static MethodInfo ___ContextualPropertyMenuCallback;
		private static MethodInfo __ContextualPropertyMenuCallback
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ContextualPropertyMenuCallback ??= __type__?.GetMethodInfoByParameterTypeNames("ContextualPropertyMenuCallback", "UnityEditor.GenericMenu", "UnityEditor.SerializedProperty");
		}
		
		private static MethodInfo ___GetCenteredWindowPosition;
		private static MethodInfo __GetCenteredWindowPosition
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetCenteredWindowPosition ??= __type__?.GetMethodInfoByParameterTypeNames("GetCenteredWindowPosition", "UnityEngine.Rect", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___RepaintCurrentWindow;
		private static MethodInfo __RepaintCurrentWindow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RepaintCurrentWindow ??= __type__?.GetMethodInfoByParameterTypeNames("RepaintCurrentWindow");
		}
		
		private static MethodInfo ___HasCurrentWindowKeyFocus;
		private static MethodInfo __HasCurrentWindowKeyFocus
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasCurrentWindowKeyFocus ??= __type__?.GetMethodInfoByParameterTypeNames("HasCurrentWindowKeyFocus");
		}
		
		private static MethodInfo ___DrawEditorHeaderItems;
		private static MethodInfo __DrawEditorHeaderItems
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawEditorHeaderItems ??= __type__?.GetMethodInfoByParameterTypeNames("DrawEditorHeaderItems", "UnityEngine.Rect", "UnityEngine.Object[]", "System.Single");
		}
		
		private static MethodInfo ___FindTexture;
		private static MethodInfo __FindTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FindTexture ??= __type__?.GetMethodInfoByParameterTypeNames("FindTexture", "System.Type");
		}
		
		private static MethodInfo ___LightenTexture;
		private static MethodInfo __LightenTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LightenTexture ??= __type__?.GetMethodInfoByParameterTypeNames("LightenTexture", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___LightenColor;
		private static MethodInfo __LightenColor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LightenColor ??= __type__?.GetMethodInfoByParameterTypeNames("LightenColor", "UnityEngine.Color");
		}
		
		private static MethodInfo ___TrIconContent;
		private static MethodInfo __TrIconContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TrIconContent ??= __type__?.GetMethodInfoByParameterTypeNames("TrIconContent", "System.String", "System.String", "System.Boolean");
		}
		
		private static MethodInfo ___TrIconContent__2;
		private static MethodInfo __TrIconContent__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TrIconContent__2 ??= __type__?.GetMethodInfoByParameterTypeNames("TrIconContent", "System.String");
		}
		
		private static MethodInfo ___TextContent;
		private static MethodInfo __TextContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TextContent ??= __type__?.GetMethodInfoByParameterTypeNames("TextContent", "System.String");
		}
		
		private static MethodInfo ___TextContentWithIcon;
		private static MethodInfo __TextContentWithIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TextContentWithIcon ??= __type__?.GetMethodInfoByParameterTypeNames("TextContentWithIcon", "System.String", "System.String");
		}
		
		private static MethodInfo ___GetDefaultBackgroundColor;
		private static MethodInfo __GetDefaultBackgroundColor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetDefaultBackgroundColor ??= __type__?.GetMethodInfoByParameterTypeNames("GetDefaultBackgroundColor");
		}
		
		private static MethodInfo ___GetNameAndTooltipString;
		private static MethodInfo __GetNameAndTooltipString
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetNameAndTooltipString ??= __type__?.GetMethodInfoByParameterTypeNames("GetNameAndTooltipString", "System.String");
		}
		
		private static MethodInfo ___LoadIconRequired;
		private static MethodInfo __LoadIconRequired
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadIconRequired ??= __type__?.GetMethodInfoByParameterTypeNames("LoadIconRequired", "System.String");
		}
		
		private static MethodInfo ___LoadIcon;
		private static MethodInfo __LoadIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadIcon ??= __type__?.GetMethodInfoByParameterTypeNames("LoadIcon", "System.String");
		}
		
		private static MethodInfo ___LoadGeneratedIconOrNormalIcon;
		private static MethodInfo __LoadGeneratedIconOrNormalIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadGeneratedIconOrNormalIcon ??= __type__?.GetMethodInfoByParameterTypeNames("LoadGeneratedIconOrNormalIcon", "System.String");
		}
		
		private static MethodInfo ___InnerLoadGeneratedIconOrNormalIcon;
		private static MethodInfo __InnerLoadGeneratedIconOrNormalIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InnerLoadGeneratedIconOrNormalIcon ??= __type__?.GetMethodInfoByParameterTypeNames("InnerLoadGeneratedIconOrNormalIcon", "System.String");
		}
		
		private static MethodInfo ___LoadIconForSkin;
		private static MethodInfo __LoadIconForSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadIconForSkin ??= __type__?.GetMethodInfoByParameterTypeNames("LoadIconForSkin", "System.String", "System.Int32");
		}
		
		private static MethodInfo ___GetIconPathFromAttribute;
		private static MethodInfo __GetIconPathFromAttribute
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetIconPathFromAttribute ??= __type__?.GetMethodInfoByParameterTypeNames("GetIconPathFromAttribute", "System.Type");
		}
		
		private static MethodInfo ___IconContent;
		private static MethodInfo __IconContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IconContent ??= __type__?.GetMethodInfoByParameterTypeNames("IconContent", "System.String");
		}
		
		private static MethodInfo ___IconContent__2;
		private static MethodInfo __IconContent__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IconContent__2 ??= __type__?.GetMethodInfoByParameterTypeNames("IconContent", "UnityEngine.Texture", "System.String");
		}
		
		private static MethodInfo ___Internal_SwitchSkin;
		private static MethodInfo __Internal_SwitchSkin
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_SwitchSkin ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_SwitchSkin");
		}
		
		private static MethodInfo ___ObjectContent;
		private static MethodInfo __ObjectContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ObjectContent ??= __type__?.GetMethodInfoByParameterTypeNames("ObjectContent", "UnityEngine.Object", "System.Type", "System.Int32");
		}
		
		private static MethodInfo ___TempContent;
		private static MethodInfo __TempContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "System.String");
		}
		
		private static MethodInfo ___TempContent__2;
		private static MethodInfo __TempContent__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent__2 ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "System.String", "System.String");
		}
		
		private static MethodInfo ___TempContent__3;
		private static MethodInfo __TempContent__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent__3 ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "UnityEngine.Texture");
		}
		
		private static MethodInfo ___TempContent__4;
		private static MethodInfo __TempContent__4
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent__4 ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "System.String", "UnityEngine.Texture");
		}
		
		private static MethodInfo ___TempContent__5;
		private static MethodInfo __TempContent__5
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent__5 ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "System.String[]");
		}
		
		private static MethodInfo ___TempContent__6;
		private static MethodInfo __TempContent__6
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TempContent__6 ??= __type__?.GetMethodInfoByParameterTypeNames("TempContent", "System.String[]", "System.String[]");
		}
		
		private static MethodInfo ___HasHolddownKeyModifiers;
		private static MethodInfo __HasHolddownKeyModifiers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasHolddownKeyModifiers ??= __type__?.GetMethodInfoByParameterTypeNames("HasHolddownKeyModifiers", "UnityEngine.Event");
		}
		
		private static MethodInfo ___GetHelpIcon;
		private static MethodInfo __GetHelpIcon
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetHelpIcon ??= __type__?.GetMethodInfoByParameterTypeNames("GetHelpIcon", "UnityEditor.MessageType");
		}
		
		private static MethodInfo ___GetBasicTextureStyle;
		private static MethodInfo __GetBasicTextureStyle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetBasicTextureStyle ??= __type__?.GetMethodInfoByParameterTypeNames("GetBasicTextureStyle", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___NotifyLanguageChanged;
		private static MethodInfo __NotifyLanguageChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___NotifyLanguageChanged ??= __type__?.GetMethodInfoByParameterTypeNames("NotifyLanguageChanged", "UnityEngine.SystemLanguage");
		}
		
		private static MethodInfo ___Load;
		private static MethodInfo __Load
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Load ??= __type__?.GetMethodInfoByParameterTypeNames("Load", "System.String", "System.Type");
		}
		
		private static MethodInfo ___PingObjectFromCPP;
		private static MethodInfo __PingObjectFromCPP
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PingObjectFromCPP ??= __type__?.GetMethodInfoByParameterTypeNames("PingObjectFromCPP", "System.Int32");
		}
		
		private static MethodInfo ___MoveFocusAndScroll;
		private static MethodInfo __MoveFocusAndScroll
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___MoveFocusAndScroll ??= __type__?.GetMethodInfoByParameterTypeNames("MoveFocusAndScroll", "System.Boolean");
		}
		
		private static MethodInfo ___RefreshScrollPosition;
		private static MethodInfo __RefreshScrollPosition
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RefreshScrollPosition ??= __type__?.GetMethodInfoByParameterTypeNames("RefreshScrollPosition");
		}
		
		private static MethodInfo ___ScrollForTabbing;
		private static MethodInfo __ScrollForTabbing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ScrollForTabbing ??= __type__?.GetMethodInfoByParameterTypeNames("ScrollForTabbing", "System.Boolean");
		}
		
		private static MethodInfo ___ResetGUIState;
		private static MethodInfo __ResetGUIState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ResetGUIState ??= __type__?.GetMethodInfoByParameterTypeNames("ResetGUIState");
		}
		
		private static MethodInfo ___HandleControlID;
		private static MethodInfo __HandleControlID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HandleControlID ??= __type__?.GetMethodInfoByParameterTypeNames("HandleControlID", "System.Int32");
		}
		
		private static MethodInfo ___CalcContextWidth;
		private static MethodInfo __CalcContextWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CalcContextWidth ??= __type__?.GetMethodInfoByParameterTypeNames("CalcContextWidth");
		}
		
		private static MethodInfo ___LockContextWidth;
		private static MethodInfo __LockContextWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LockContextWidth ??= __type__?.GetMethodInfoByParameterTypeNames("LockContextWidth");
		}
		
		private static MethodInfo ___UnlockContextWidth;
		private static MethodInfo __UnlockContextWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnlockContextWidth ??= __type__?.GetMethodInfoByParameterTypeNames("UnlockContextWidth");
		}
		
		private static MethodInfo ___SkinChanged;
		private static MethodInfo __SkinChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SkinChanged ??= __type__?.GetMethodInfoByParameterTypeNames("SkinChanged");
		}
		
		private static MethodInfo ___DragZoneRect;
		private static MethodInfo __DragZoneRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DragZoneRect ??= __type__?.GetMethodInfoByParameterTypeNames("DragZoneRect", "UnityEngine.Rect", "System.Boolean");
		}
		
		private static MethodInfo ___SetBoldDefaultFont;
		private static MethodInfo __SetBoldDefaultFont
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetBoldDefaultFont ??= __type__?.GetMethodInfoByParameterTypeNames("SetBoldDefaultFont", "System.Boolean");
		}
		
		private static MethodInfo ___GetBoldDefaultFont;
		private static MethodInfo __GetBoldDefaultFont
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetBoldDefaultFont ??= __type__?.GetMethodInfoByParameterTypeNames("GetBoldDefaultFont");
		}
		
		private static MethodInfo ___DrawColorSwatch;
		private static MethodInfo __DrawColorSwatch
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawColorSwatch ??= __type__?.GetMethodInfoByParameterTypeNames("DrawColorSwatch", "UnityEngine.Rect", "UnityEngine.Color", "System.Boolean");
		}
		
		private static MethodInfo ___DrawColorSwatch__2;
		private static MethodInfo __DrawColorSwatch__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawColorSwatch__2 ??= __type__?.GetMethodInfoByParameterTypeNames("DrawColorSwatch", "UnityEngine.Rect", "UnityEngine.Color", "System.Boolean", "System.Boolean");
		}
		
		private static MethodInfo ___DrawRegionSwatch;
		private static MethodInfo __DrawRegionSwatch
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawRegionSwatch ??= __type__?.GetMethodInfoByParameterTypeNames("DrawRegionSwatch", "UnityEngine.Rect", "UnityEditor.SerializedProperty", "UnityEditor.SerializedProperty", "UnityEngine.Color", "UnityEngine.Color");
		}
		
		private static MethodInfo ___DrawCurveSwatchInternal;
		private static MethodInfo __DrawCurveSwatchInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawCurveSwatchInternal ??= __type__?.GetMethodInfoByParameterTypeNames("DrawCurveSwatchInternal", "UnityEngine.Rect", "UnityEngine.AnimationCurve", "UnityEngine.AnimationCurve", "UnityEditor.SerializedProperty", "UnityEditor.SerializedProperty", "UnityEngine.Color", "UnityEngine.Color", "System.Boolean", "UnityEngine.Rect", "UnityEngine.Color", "UnityEngine.Color");
		}
		
		private static MethodInfo ___HandleHorizontalSplitter;
		private static MethodInfo __HandleHorizontalSplitter
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HandleHorizontalSplitter ??= __type__?.GetMethodInfoByParameterTypeNames("HandleHorizontalSplitter", "UnityEngine.Rect", "System.Single", "System.Single", "System.Single");
		}
		
		private static MethodInfo ___DrawHorizontalSplitter;
		private static MethodInfo __DrawHorizontalSplitter
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawHorizontalSplitter ??= __type__?.GetMethodInfoByParameterTypeNames("DrawHorizontalSplitter", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___SetupObjectSelector;
		private static MethodInfo __SetupObjectSelector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetupObjectSelector ??= __type__?.GetMethodInfoByParameterTypeNames("SetupObjectSelector", "UnityEngine.Object", "System.Type", "System.Boolean", "System.String", "System.Int32");
		}
		
		private static MethodInfo ___SetIconSize_Injected;
		private static MethodInfo __SetIconSize_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetIconSize_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("SetIconSize_Injected", "UnityEngine.Vector2&");
		}
		
		private static MethodInfo ___SetCurrentViewCursor_Injected;
		private static MethodInfo __SetCurrentViewCursor_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetCurrentViewCursor_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("SetCurrentViewCursor_Injected", "UnityEngine.Texture2D", "UnityEngine.Vector2&", "UnityEditor.MouseCursor");
		}
		
		private static MethodInfo ___RenderPlayModeViewCamerasInternal_Injected;
		private static MethodInfo __RenderPlayModeViewCamerasInternal_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderPlayModeViewCamerasInternal_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("RenderPlayModeViewCamerasInternal_Injected", "UnityEngine.RenderTexture", "System.Int32", "UnityEngine.Vector2&", "System.Boolean", "System.Boolean");
		}
		
		private static MethodInfo ___SetupWindowSpaceAndVSyncInternal_Injected;
		private static MethodInfo __SetupWindowSpaceAndVSyncInternal_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetupWindowSpaceAndVSyncInternal_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("SetupWindowSpaceAndVSyncInternal_Injected", "UnityEngine.Rect&");
		}
		
		private static MethodInfo ___Internal_GetIconSize_Injected;
		private static MethodInfo __Internal_GetIconSize_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_GetIconSize_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_GetIconSize_Injected", "UnityEngine.Vector2&");
		}
		
		private static MethodInfo ___Internal_AddCursorRect_Injected;
		private static MethodInfo __Internal_AddCursorRect_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_AddCursorRect_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_AddCursorRect_Injected", "UnityEngine.Rect&", "UnityEditor.MouseCursor", "System.Int32");
		}
	}
	public static class UnityEditor_EditorGUIUtility_Extension
	{
		public static UnityEditor_EditorGUIUtility ReflectionHelper(this UnityEditor.EditorGUIUtility self) => new(self);
	}
}
