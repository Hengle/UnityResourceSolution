//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_BaseAssetImporterTabUI
	{
		
		/// <summary>
		/// <see cref="UnityEditor.BaseAssetImporterTabUI"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.BaseAssetImporterTabUI");
		
		
		public UnityEditor.AssetImporters.AssetImporterEditor panelContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.AssetImporters.AssetImporterEditor)(__panelContainer?.GetValue(__self__));
		}
		
		public UnityEditor.SerializedObject serializedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedObject)(__serializedObject?.GetValue(__self__));
		}
		
		public UnityEngine.Object[] targets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object[])(__targets?.GetValue(__self__));
		}
		
		public UnityEngine.Object target
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object)(__target?.GetValue(__self__));
		}
		
		public UnityEngine.Object assetTarget
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object)(__assetTarget?.GetValue(__self__));
		}
		
		public UnityEngine.Object[] assetTargets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object[])(__assetTargets?.GetValue(__self__));
		}
		
		public int referenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__referenceTargetIndex?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __referenceTargetIndex?.SetValue(__self__, value);
		}
		
		public UnityEditor.AssetImporters.AssetImporterEditor m_PanelContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.AssetImporters.AssetImporterEditor)(__m_PanelContainer?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PanelContainer?.SetValue(__self__, value);
		}
		
		public System.Func<UnityEngine.Object, UnityEngine.Object> Instantiate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Func<UnityEngine.Object, UnityEngine.Object>)(__Instantiate?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __Instantiate?.SetValue(__self__, value);
		}
		
		public System.Action<UnityEngine.Object> DestroyImmediate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action<UnityEngine.Object>)(__DestroyImmediate?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __DestroyImmediate?.SetValue(__self__, value);
		}
		
		public void OnEnable()
		{
			__OnEnable?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnDisable()
		{
			__OnDisable?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void PreApply()
		{
			__PreApply?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void PostApply()
		{
			__PostApply?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ResetValues()
		{
			__ResetValues?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnInspectorGUI()
		{
			__OnInspectorGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool HasModified()
		{
			var __result__ = __HasModified?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnPreviewSettings()
		{
			__OnPreviewSettings?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnInteractivePreviewGUI(UnityEngine.Rect r, UnityEngine.GUIStyle background)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			__params__[1] = background;
			__OnInteractivePreviewGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool HasPreviewGUI()
		{
			var __result__ = __HasPreviewGUI?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnDestroy()
		{
			__OnDestroy?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void Repaint()
		{
			__Repaint?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEditor_BaseAssetImporterTabUI(object __self__) => this.__self__ = __self__ as object;
		public object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		
		private static FieldInfo ___m_PanelContainer;
		private static FieldInfo __m_PanelContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PanelContainer ??= __type__?.GetField("m_PanelContainer", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___Instantiate;
		private static FieldInfo __Instantiate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Instantiate ??= __type__?.GetField("Instantiate", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___DestroyImmediate;
		private static FieldInfo __DestroyImmediate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DestroyImmediate ??= __type__?.GetField("DestroyImmediate", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___panelContainer;
		private static PropertyInfo __panelContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___panelContainer ??= __type__?.GetProperty("panelContainer", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___serializedObject;
		private static PropertyInfo __serializedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___serializedObject ??= __type__?.GetProperty("serializedObject", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___targets;
		private static PropertyInfo __targets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___targets ??= __type__?.GetProperty("targets", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___target;
		private static PropertyInfo __target
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___target ??= __type__?.GetProperty("target", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___assetTarget;
		private static PropertyInfo __assetTarget
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___assetTarget ??= __type__?.GetProperty("assetTarget", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___assetTargets;
		private static PropertyInfo __assetTargets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___assetTargets ??= __type__?.GetProperty("assetTargets", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___referenceTargetIndex;
		private static PropertyInfo __referenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___referenceTargetIndex ??= __type__?.GetProperty("referenceTargetIndex", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___OnEnable;
		private static MethodInfo __OnEnable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnEnable ??= __type__?.GetMethodInfoByParameterTypeNames("OnEnable");
		}
		
		private static MethodInfo ___OnDisable;
		private static MethodInfo __OnDisable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDisable ??= __type__?.GetMethodInfoByParameterTypeNames("OnDisable");
		}
		
		private static MethodInfo ___PreApply;
		private static MethodInfo __PreApply
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PreApply ??= __type__?.GetMethodInfoByParameterTypeNames("PreApply");
		}
		
		private static MethodInfo ___PostApply;
		private static MethodInfo __PostApply
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PostApply ??= __type__?.GetMethodInfoByParameterTypeNames("PostApply");
		}
		
		private static MethodInfo ___ResetValues;
		private static MethodInfo __ResetValues
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ResetValues ??= __type__?.GetMethodInfoByParameterTypeNames("ResetValues");
		}
		
		private static MethodInfo ___OnInspectorGUI;
		private static MethodInfo __OnInspectorGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnInspectorGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnInspectorGUI");
		}
		
		private static MethodInfo ___HasModified;
		private static MethodInfo __HasModified
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasModified ??= __type__?.GetMethodInfoByParameterTypeNames("HasModified");
		}
		
		private static MethodInfo ___OnPreviewSettings;
		private static MethodInfo __OnPreviewSettings
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnPreviewSettings ??= __type__?.GetMethodInfoByParameterTypeNames("OnPreviewSettings");
		}
		
		private static MethodInfo ___OnInteractivePreviewGUI;
		private static MethodInfo __OnInteractivePreviewGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnInteractivePreviewGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnInteractivePreviewGUI", "UnityEngine.Rect", "UnityEngine.GUIStyle");
		}
		
		private static MethodInfo ___HasPreviewGUI;
		private static MethodInfo __HasPreviewGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasPreviewGUI ??= __type__?.GetMethodInfoByParameterTypeNames("HasPreviewGUI");
		}
		
		private static MethodInfo ___OnDestroy;
		private static MethodInfo __OnDestroy
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDestroy ??= __type__?.GetMethodInfoByParameterTypeNames("OnDestroy");
		}
		
		private static MethodInfo ___Repaint;
		private static MethodInfo __Repaint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Repaint ??= __type__?.GetMethodInfoByParameterTypeNames("Repaint");
		}
	}
}
