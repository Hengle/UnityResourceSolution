//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_MaterialEditor
	{
		
		/// <summary>
		/// <see cref="UnityEditor.MaterialEditor"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.MaterialEditor");
		
		public delegate void MaterialPropertyCallbackFunction(UnityEditor.GenericMenu menu, UnityEditor.MaterialProperty property, UnityEngine.Renderer[] renderers);
		
		public UnityEngine.Renderer rendererForAnimationMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Renderer)(__rendererForAnimationMode?.GetValue(__self__));
		}
		
		public bool isPrefabAsset
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__isPrefabAsset?.GetValue(__self__));
		}
		
		public static System.Collections.Generic.List<UnityEditor.MaterialEditor> s_MaterialEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.List<UnityEditor.MaterialEditor>)(__s_MaterialEditors?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MaterialEditors?.SetValue(null, value);
		}
		
		public bool m_CheckSetup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_CheckSetup?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_CheckSetup?.SetValue(__self__, value);
		}
		
		public static int s_ControlHash
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_ControlHash?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ControlHash?.SetValue(null, value);
		}
		
		public static float kSpacingUnderTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kSpacingUnderTexture?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kSpacingUnderTexture?.SetValue(null, value);
		}
		
		public static float kMiniWarningMessageHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kMiniWarningMessageHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kMiniWarningMessageHeight?.SetValue(null, value);
		}
		
		public UnityEngine.MaterialPropertyBlock m_PropertyBlock
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.MaterialPropertyBlock)(__m_PropertyBlock?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PropertyBlock?.SetValue(__self__, value);
		}
		
		public UnityEngine.Shader m_Shader
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Shader)(__m_Shader?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Shader?.SetValue(__self__, value);
		}
		
		public UnityEditor.SerializedProperty m_EnableInstancing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedProperty)(__m_EnableInstancing?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_EnableInstancing?.SetValue(__self__, value);
		}
		
		public UnityEditor.SerializedProperty m_DoubleSidedGI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedProperty)(__m_DoubleSidedGI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DoubleSidedGI?.SetValue(__self__, value);
		}
		
		public string m_InfoMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__m_InfoMessage?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InfoMessage?.SetValue(__self__, value);
		}
		
		public UnityEngine.Vector2 m_PreviewDir
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__m_PreviewDir?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviewDir?.SetValue(__self__, value);
		}
		
		public int m_SelectedMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_SelectedMesh?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_SelectedMesh?.SetValue(__self__, value);
		}
		
		public int m_TimeUpdate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_TimeUpdate?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_TimeUpdate?.SetValue(__self__, value);
		}
		
		public int m_LightMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_LightMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LightMode?.SetValue(__self__, value);
		}
		
		public static UnityEngine.GUIContent s_TilingText
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_TilingText?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_TilingText?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent s_OffsetText
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__s_OffsetText?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_OffsetText?.SetValue(null, value);
		}
		
		public static string kDefaultMaterialPreviewMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__kDefaultMaterialPreviewMesh?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kDefaultMaterialPreviewMesh?.SetValue(null, value);
		}
		
		public UnityEditor.ShaderGUI m_CustomShaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.ShaderGUI)(__m_CustomShaderGUI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_CustomShaderGUI?.SetValue(__self__, value);
		}
		
		public string m_CustomEditorClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__m_CustomEditorClassName?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_CustomEditorClassName?.SetValue(__self__, value);
		}
		
		public bool m_InsidePropertiesGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_InsidePropertiesGUI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InsidePropertiesGUI?.SetValue(__self__, value);
		}
		
		public UnityEngine.Renderer[] m_RenderersForAnimationMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Renderer[])(__m_RenderersForAnimationMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_RenderersForAnimationMode?.SetValue(__self__, value);
		}
		
		public UnityEngine.Component m_MeshRendererComp
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Component)(__m_MeshRendererComp?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_MeshRendererComp?.SetValue(__self__, value);
		}
		
		public static object s_AnimatedCheckStack
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_AnimatedCheckStack?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_AnimatedCheckStack?.SetValue(null, value);
		}
		
		public static MaterialPropertyCallbackFunction contextualPropertyMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (__contextualPropertyMenu?.GetValue(null) as Delegate)?.Cast<MaterialPropertyCallbackFunction>();
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __contextualPropertyMenu?.SetValue(null, value?.Cast(__contextualPropertyMenu.FieldType));
		}
		
		public object m_ReflectionProbePicker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_ReflectionProbePicker?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ReflectionProbePicker?.SetValue(__self__, value);
		}
		
		public UnityEngine.Rendering.TextureDimension m_DesiredTexdim
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rendering.TextureDimension)(__m_DesiredTexdim?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DesiredTexdim?.SetValue(__self__, value);
		}
		
		public static UnityEngine.Mesh[] s_Meshes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Mesh[])(__s_Meshes?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_Meshes?.SetValue(null, value);
		}
		
		public static UnityEngine.Mesh s_PlaneMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Mesh)(__s_PlaneMesh?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_PlaneMesh?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent[] s_MeshIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent[])(__s_MeshIcons?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MeshIcons?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent[] s_LightIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent[])(__s_LightIcons?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LightIcons?.SetValue(null, value);
		}
		
		public static UnityEngine.GUIContent[] s_TimeIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent[])(__s_TimeIcons?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_TimeIcons?.SetValue(null, value);
		}
		
		public static UnityEditor.PreviewRenderUtility s_PreviewRenderUtility
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.PreviewRenderUtility)(__s_PreviewRenderUtility?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_PreviewRenderUtility?.SetValue(null, value);
		}
		
		public static int s_NumberOfEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__s_NumberOfEditors?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_NumberOfEditors?.SetValue(null, value);
		}
		
		public UnityEngine.Material s_OriginalMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material)(__s_OriginalMaterial?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_OriginalMaterial?.SetValue(__self__, value);
		}
		
		public static UnityEngine.Renderer s_previousDraggedUponRenderer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Renderer)(__s_previousDraggedUponRenderer?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_previousDraggedUponRenderer?.SetValue(null, value);
		}
		
		public static UnityEngine.Material[] s_previousMaterialValue
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Material[])(__s_previousMaterialValue?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_previousMaterialValue?.SetValue(null, value);
		}
		
		public static bool s_previousAlreadyHadPrefabModification
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__s_previousAlreadyHadPrefabModification?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_previousAlreadyHadPrefabModification?.SetValue(null, value);
		}
		
		public static float kSpaceBetweenFlexibleAreaAndField
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kSpaceBetweenFlexibleAreaAndField?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kSpaceBetweenFlexibleAreaAndField?.SetValue(null, value);
		}
		
		public static float kQueuePopupWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kQueuePopupWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kQueuePopupWidth?.SetValue(null, value);
		}
		
		public static float kCustomQueuePopupWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kCustomQueuePopupWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kCustomQueuePopupWidth?.SetValue(null, value);
		}
		
		public static object GetPreviewType(UnityEngine.Material mat)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = mat;
			var __result__ = __GetPreviewType?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public static bool DoesPreviewAllowRotation(object type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __DoesPreviewAllowRotation?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool ShouldEditorBeHidden()
		{
			var __result__ = __ShouldEditorBeHidden?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void UpdateAllOpenMaterialEditors()
		{
			__UpdateAllOpenMaterialEditors?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnSelectedShaderPopup(object shaderNameObj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = shaderNameObj;
			__OnSelectedShaderPopup?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool HasMultipleMixedShaderValues()
		{
			var __result__ = __HasMultipleMixedShaderValues?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void ShaderPopup(UnityEngine.GUIStyle style)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = style;
			__ShaderPopup?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DetectShaderEditorNeedsUpdate()
		{
			__DetectShaderEditorNeedsUpdate?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public string ParseValidationResult(object validationResult)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = validationResult;
			var __result__ = __ParseValidationResult?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (string)(__result__) : default;
		}
		
		public void DetectTextureStackValidationIssues()
		{
			__DetectTextureStackValidationIssues?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void CheckSetup()
		{
			__CheckSetup?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnAssetStoreInspectorGUI()
		{
			__OnAssetStoreInspectorGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnShaderChanged()
		{
			__OnShaderChanged?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnHeaderGUI()
		{
			__OnHeaderGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnHeaderControlsGUI()
		{
			__OnHeaderControlsGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public float RangePropertyInternal(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			var __result__ = __RangePropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static float RangePropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __RangePropertyInternal__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static float DoPowerRangeProperty(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label, float power)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			__params__[3] = power;
			var __result__ = __DoPowerRangeProperty?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static int DoIntRangeProperty(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __DoIntRangeProperty?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public int IntegerPropertyInternal(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			var __result__ = __IntegerPropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public int IntegerPropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __IntegerPropertyInternal__2?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public float FloatPropertyInternal(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			var __result__ = __FloatPropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static float FloatPropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __FloatPropertyInternal__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public UnityEngine.Color ColorPropertyInternal(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			var __result__ = __ColorPropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Color)(__result__) : default;
		}
		
		public static UnityEngine.Color ColorPropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __ColorPropertyInternal__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Color)(__result__) : default;
		}
		
		public static UnityEngine.Vector4 VectorPropertyInternal(in UnityEngine.Rect position, in UnityEditor.MaterialProperty prop, in UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			var __result__ = __VectorPropertyInternal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector4)(__result__) : default;
		}
		
		public UnityEngine.Texture TexturePropertyBody(UnityEngine.Rect position, UnityEditor.MaterialProperty prop)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			var __result__ = __TexturePropertyBody?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Texture)(__result__) : default;
		}
		
		public static UnityEngine.Vector4 TextureScaleOffsetProperty(UnityEngine.Rect position, UnityEngine.Vector4 scaleOffset, int mixedValueMask, bool partOfTexturePropertyControl)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = scaleOffset;
			__params__[2] = mixedValueMask;
			__params__[3] = partOfTexturePropertyControl;
			var __result__ = __TextureScaleOffsetProperty?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector4)(__result__) : default;
		}
		
		public static float GetTextureFieldHeight()
		{
			var __result__ = __GetTextureFieldHeight?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public UnityEngine.Rect GetPropertyRect(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label, bool ignoreDrawer)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			__params__[2] = ignoreDrawer;
			var __result__ = __GetPropertyRect?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public UnityEngine.Rect GetPropertyRect(UnityEditor.MaterialProperty prop, string label, bool ignoreDrawer)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			__params__[2] = ignoreDrawer;
			var __result__ = __GetPropertyRect__2?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public void DoPropertyContextMenu(UnityEditor.MaterialProperty prop)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__DoPropertyContextMenu?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.MaterialGlobalIlluminationFlags GetGlobalIlluminationFlags(UnityEngine.MaterialGlobalIlluminationFlags flags)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = flags;
			var __result__ = __GetGlobalIlluminationFlags?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.MaterialGlobalIlluminationFlags)(__result__) : default;
		}
		
		public void ShaderPropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			__ShaderPropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DefaultShaderPropertyInternal(UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = prop;
			__params__[1] = label;
			__DefaultShaderPropertyInternal?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DefaultShaderPropertyInternal(UnityEngine.Rect position, UnityEditor.MaterialProperty prop, UnityEngine.GUIContent label)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__params__[1] = prop;
			__params__[2] = label;
			__DefaultShaderPropertyInternal__2?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEngine.Renderer[] GetAssociatedRenderersFromInspector()
		{
			var __result__ = __GetAssociatedRenderersFromInspector?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Renderer[])(__result__) : default;
		}
		
		public static UnityEngine.Renderer[] GetAssociatedRenderersFromEditors(System.Collections.Generic.IEnumerable<UnityEditor.Editor> editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			var __result__ = __GetAssociatedRenderersFromEditors?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Renderer[])(__result__) : default;
		}
		
		public static UnityEngine.Renderer PrepareMaterialPropertiesForAnimationMode(UnityEditor.MaterialProperty[] properties, UnityEngine.Renderer renderer, bool isMaterialEditable)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = properties;
			__params__[1] = renderer;
			__params__[2] = isMaterialEditable;
			var __result__ = __PrepareMaterialPropertiesForAnimationMode?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Renderer)(__result__) : default;
		}
		
		public static UnityEngine.Renderer[] PrepareMaterialPropertiesForAnimationMode(UnityEditor.MaterialProperty[] properties, UnityEngine.Renderer[] renderers, bool isMaterialEditable)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = properties;
			__params__[1] = renderers;
			__params__[2] = isMaterialEditable;
			var __result__ = __PrepareMaterialPropertiesForAnimationMode__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Renderer[])(__result__) : default;
		}
		
		public bool IsMaterialEditor(string customEditorName)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = customEditorName;
			var __result__ = __IsMaterialEditor?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void CreateCustomShaderEditorIfNeeded(UnityEngine.Shader shader)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = shader;
			__CreateCustomShaderEditorIfNeeded?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static void BeginNoApplyMaterialPropertyDrawers()
		{
			__BeginNoApplyMaterialPropertyDrawers?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void EndNoApplyMaterialPropertyDrawers()
		{
			__EndNoApplyMaterialPropertyDrawers?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void ApplyMaterialPropertyDrawersFromNative(UnityEngine.Material material)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = material;
			__ApplyMaterialPropertyDrawersFromNative?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEngine.Object TextureValidator(UnityEngine.Object[] references, System.Type objType, UnityEditor.SerializedProperty property, object options)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = references;
			__params__[1] = objType;
			__params__[2] = property;
			__params__[3] = options;
			var __result__ = __TextureValidator?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public void Init()
		{
			__Init?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool DoReflectionProbePicker(out UnityEngine.Rect buttonRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = null;
			var __result__ = __DoReflectionProbePicker?.Invoke(__self__, __params__);
			buttonRect = (UnityEngine.Rect)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void StreamRenderResources()
		{
			__StreamRenderResources?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void DoRenderPreview(UnityEditor.PreviewRenderUtility previewRenderUtility, bool overridePreviewMesh)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = previewRenderUtility;
			__params__[1] = overridePreviewMesh;
			__DoRenderPreview?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static UnityEditor.PreviewRenderUtility GetPreviewRendererUtility()
		{
			var __result__ = __GetPreviewRendererUtility?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEditor.PreviewRenderUtility)(__result__) : default;
		}
		
		public static void CleanUpPreviewRenderUtility()
		{
			__CleanUpPreviewRenderUtility?.Invoke(null, System.Array.Empty<object>());
		}
		
		public void OnSceneDrag(UnityEditor.SceneView sceneView, int index)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = sceneView;
			__params__[1] = index;
			__OnSceneDrag?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static void TryRevertDragChanges()
		{
			__TryRevertDragChanges?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void ClearDragMaterialRendering()
		{
			__ClearDragMaterialRendering?.Invoke(null, System.Array.Empty<object>());
		}
		
		public void HandleSkybox(UnityEngine.GameObject go, UnityEngine.Event evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = go;
			__params__[1] = evt;
			__HandleSkybox?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static void HandleRenderer(UnityEngine.Renderer r, int materialIndex, UnityEngine.Material dragMaterial, UnityEngine.EventType eventType, bool alt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			__params__[1] = materialIndex;
			__params__[2] = dragMaterial;
			__params__[3] = eventType;
			__params__[4] = alt;
			__HandleRenderer?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public bool HasLargeHeader()
		{
			var __result__ = __HasLargeHeader?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnHeaderIconGUI(UnityEngine.Rect iconRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = iconRect;
			__OnHeaderIconGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool HasMultipleMixedQueueValues()
		{
			var __result__ = __HasMultipleMixedQueueValues?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public int CalculateClosestQueueIndexToValue(int requestedValue)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = requestedValue;
			var __result__ = __CalculateClosestQueueIndexToValue?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public UnityEngine.Rect GetControlRectForSingleLine()
		{
			var __result__ = __GetControlRectForSingleLine?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public void ExtraPropertyAfterTexture(UnityEngine.Rect r, UnityEditor.MaterialProperty property, bool adjustLabelWidth)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			__params__[1] = property;
			__params__[2] = adjustLabelWidth;
			__ExtraPropertyAfterTexture?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static System.Type GetTextureTypeFromDimension(UnityEngine.Rendering.TextureDimension dim)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = dim;
			var __result__ = __GetTextureTypeFromDimension?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (System.Type)(__result__) : default;
		}
		
		public UnityEditor_MaterialEditor(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
		public UnityEngine.Object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEditor.MaterialEditor __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.MaterialEditor)(__self__);
		}
		
		private static FieldInfo ___s_MaterialEditors;
		private static FieldInfo __s_MaterialEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MaterialEditors ??= __type__?.GetField("s_MaterialEditors", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_CheckSetup;
		private static FieldInfo __m_CheckSetup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_CheckSetup ??= __type__?.GetField("m_CheckSetup", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ControlHash;
		private static FieldInfo __s_ControlHash
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ControlHash ??= __type__?.GetField("s_ControlHash", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kSpacingUnderTexture;
		private static FieldInfo __kSpacingUnderTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kSpacingUnderTexture ??= __type__?.GetField("kSpacingUnderTexture", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kMiniWarningMessageHeight;
		private static FieldInfo __kMiniWarningMessageHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kMiniWarningMessageHeight ??= __type__?.GetField("kMiniWarningMessageHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PropertyBlock;
		private static FieldInfo __m_PropertyBlock
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PropertyBlock ??= __type__?.GetField("m_PropertyBlock", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Shader;
		private static FieldInfo __m_Shader
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Shader ??= __type__?.GetField("m_Shader", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_EnableInstancing;
		private static FieldInfo __m_EnableInstancing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_EnableInstancing ??= __type__?.GetField("m_EnableInstancing", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DoubleSidedGI;
		private static FieldInfo __m_DoubleSidedGI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DoubleSidedGI ??= __type__?.GetField("m_DoubleSidedGI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InfoMessage;
		private static FieldInfo __m_InfoMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InfoMessage ??= __type__?.GetField("m_InfoMessage", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PreviewDir;
		private static FieldInfo __m_PreviewDir
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviewDir ??= __type__?.GetField("m_PreviewDir", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_SelectedMesh;
		private static FieldInfo __m_SelectedMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_SelectedMesh ??= __type__?.GetField("m_SelectedMesh", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_TimeUpdate;
		private static FieldInfo __m_TimeUpdate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_TimeUpdate ??= __type__?.GetField("m_TimeUpdate", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LightMode;
		private static FieldInfo __m_LightMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LightMode ??= __type__?.GetField("m_LightMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_TilingText;
		private static FieldInfo __s_TilingText
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_TilingText ??= __type__?.GetField("s_TilingText", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_OffsetText;
		private static FieldInfo __s_OffsetText
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_OffsetText ??= __type__?.GetField("s_OffsetText", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kDefaultMaterialPreviewMesh;
		private static FieldInfo __kDefaultMaterialPreviewMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kDefaultMaterialPreviewMesh ??= __type__?.GetField("kDefaultMaterialPreviewMesh", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_CustomShaderGUI;
		private static FieldInfo __m_CustomShaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_CustomShaderGUI ??= __type__?.GetField("m_CustomShaderGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_CustomEditorClassName;
		private static FieldInfo __m_CustomEditorClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_CustomEditorClassName ??= __type__?.GetField("m_CustomEditorClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InsidePropertiesGUI;
		private static FieldInfo __m_InsidePropertiesGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InsidePropertiesGUI ??= __type__?.GetField("m_InsidePropertiesGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_RenderersForAnimationMode;
		private static FieldInfo __m_RenderersForAnimationMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_RenderersForAnimationMode ??= __type__?.GetField("m_RenderersForAnimationMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_MeshRendererComp;
		private static FieldInfo __m_MeshRendererComp
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_MeshRendererComp ??= __type__?.GetField("m_MeshRendererComp", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_AnimatedCheckStack;
		private static FieldInfo __s_AnimatedCheckStack
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_AnimatedCheckStack ??= __type__?.GetField("s_AnimatedCheckStack", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___contextualPropertyMenu;
		private static FieldInfo __contextualPropertyMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___contextualPropertyMenu ??= __type__?.GetField("contextualPropertyMenu", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ReflectionProbePicker;
		private static FieldInfo __m_ReflectionProbePicker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ReflectionProbePicker ??= __type__?.GetField("m_ReflectionProbePicker", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DesiredTexdim;
		private static FieldInfo __m_DesiredTexdim
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DesiredTexdim ??= __type__?.GetField("m_DesiredTexdim", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_Meshes;
		private static FieldInfo __s_Meshes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_Meshes ??= __type__?.GetField("s_Meshes", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_PlaneMesh;
		private static FieldInfo __s_PlaneMesh
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_PlaneMesh ??= __type__?.GetField("s_PlaneMesh", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_MeshIcons;
		private static FieldInfo __s_MeshIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MeshIcons ??= __type__?.GetField("s_MeshIcons", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_LightIcons;
		private static FieldInfo __s_LightIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LightIcons ??= __type__?.GetField("s_LightIcons", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_TimeIcons;
		private static FieldInfo __s_TimeIcons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_TimeIcons ??= __type__?.GetField("s_TimeIcons", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_PreviewRenderUtility;
		private static FieldInfo __s_PreviewRenderUtility
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_PreviewRenderUtility ??= __type__?.GetField("s_PreviewRenderUtility", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_NumberOfEditors;
		private static FieldInfo __s_NumberOfEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_NumberOfEditors ??= __type__?.GetField("s_NumberOfEditors", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_OriginalMaterial;
		private static FieldInfo __s_OriginalMaterial
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_OriginalMaterial ??= __type__?.GetField("s_OriginalMaterial", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_previousDraggedUponRenderer;
		private static FieldInfo __s_previousDraggedUponRenderer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_previousDraggedUponRenderer ??= __type__?.GetField("s_previousDraggedUponRenderer", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_previousMaterialValue;
		private static FieldInfo __s_previousMaterialValue
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_previousMaterialValue ??= __type__?.GetField("s_previousMaterialValue", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_previousAlreadyHadPrefabModification;
		private static FieldInfo __s_previousAlreadyHadPrefabModification
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_previousAlreadyHadPrefabModification ??= __type__?.GetField("s_previousAlreadyHadPrefabModification", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kSpaceBetweenFlexibleAreaAndField;
		private static FieldInfo __kSpaceBetweenFlexibleAreaAndField
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kSpaceBetweenFlexibleAreaAndField ??= __type__?.GetField("kSpaceBetweenFlexibleAreaAndField", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kQueuePopupWidth;
		private static FieldInfo __kQueuePopupWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kQueuePopupWidth ??= __type__?.GetField("kQueuePopupWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kCustomQueuePopupWidth;
		private static FieldInfo __kCustomQueuePopupWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kCustomQueuePopupWidth ??= __type__?.GetField("kCustomQueuePopupWidth", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___rendererForAnimationMode;
		private static PropertyInfo __rendererForAnimationMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___rendererForAnimationMode ??= __type__?.GetProperty("rendererForAnimationMode", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___isPrefabAsset;
		private static PropertyInfo __isPrefabAsset
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___isPrefabAsset ??= __type__?.GetProperty("isPrefabAsset", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___GetPreviewType;
		private static MethodInfo __GetPreviewType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPreviewType ??= __type__?.GetMethodInfoByParameterTypeNames("GetPreviewType", "UnityEngine.Material");
		}
		
		private static MethodInfo ___DoesPreviewAllowRotation;
		private static MethodInfo __DoesPreviewAllowRotation
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoesPreviewAllowRotation ??= __type__?.GetMethodInfoByParameterTypeNames("DoesPreviewAllowRotation", "UnityEditor.MaterialEditor+PreviewType");
		}
		
		private static MethodInfo ___ShouldEditorBeHidden;
		private static MethodInfo __ShouldEditorBeHidden
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldEditorBeHidden ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldEditorBeHidden");
		}
		
		private static MethodInfo ___UpdateAllOpenMaterialEditors;
		private static MethodInfo __UpdateAllOpenMaterialEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UpdateAllOpenMaterialEditors ??= __type__?.GetMethodInfoByParameterTypeNames("UpdateAllOpenMaterialEditors");
		}
		
		private static MethodInfo ___OnSelectedShaderPopup;
		private static MethodInfo __OnSelectedShaderPopup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnSelectedShaderPopup ??= __type__?.GetMethodInfoByParameterTypeNames("OnSelectedShaderPopup", "System.Object");
		}
		
		private static MethodInfo ___HasMultipleMixedShaderValues;
		private static MethodInfo __HasMultipleMixedShaderValues
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasMultipleMixedShaderValues ??= __type__?.GetMethodInfoByParameterTypeNames("HasMultipleMixedShaderValues");
		}
		
		private static MethodInfo ___ShaderPopup;
		private static MethodInfo __ShaderPopup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShaderPopup ??= __type__?.GetMethodInfoByParameterTypeNames("ShaderPopup", "UnityEngine.GUIStyle");
		}
		
		private static MethodInfo ___DetectShaderEditorNeedsUpdate;
		private static MethodInfo __DetectShaderEditorNeedsUpdate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DetectShaderEditorNeedsUpdate ??= __type__?.GetMethodInfoByParameterTypeNames("DetectShaderEditorNeedsUpdate");
		}
		
		private static MethodInfo ___ParseValidationResult;
		private static MethodInfo __ParseValidationResult
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ParseValidationResult ??= __type__?.GetMethodInfoByParameterTypeNames("ParseValidationResult", "UnityEngine.Rendering.VirtualTexturing.EditorHelpers+StackValidationResult");
		}
		
		private static MethodInfo ___DetectTextureStackValidationIssues;
		private static MethodInfo __DetectTextureStackValidationIssues
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DetectTextureStackValidationIssues ??= __type__?.GetMethodInfoByParameterTypeNames("DetectTextureStackValidationIssues");
		}
		
		private static MethodInfo ___CheckSetup;
		private static MethodInfo __CheckSetup
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckSetup ??= __type__?.GetMethodInfoByParameterTypeNames("CheckSetup");
		}
		
		private static MethodInfo ___OnAssetStoreInspectorGUI;
		private static MethodInfo __OnAssetStoreInspectorGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnAssetStoreInspectorGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnAssetStoreInspectorGUI");
		}
		
		private static MethodInfo ___OnShaderChanged;
		private static MethodInfo __OnShaderChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnShaderChanged ??= __type__?.GetMethodInfoByParameterTypeNames("OnShaderChanged");
		}
		
		private static MethodInfo ___OnHeaderGUI;
		private static MethodInfo __OnHeaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderGUI");
		}
		
		private static MethodInfo ___OnHeaderControlsGUI;
		private static MethodInfo __OnHeaderControlsGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderControlsGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderControlsGUI");
		}
		
		private static MethodInfo ___RangePropertyInternal;
		private static MethodInfo __RangePropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RangePropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("RangePropertyInternal", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___RangePropertyInternal__2;
		private static MethodInfo __RangePropertyInternal__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RangePropertyInternal__2 ??= __type__?.GetMethodInfoByParameterTypeNames("RangePropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___DoPowerRangeProperty;
		private static MethodInfo __DoPowerRangeProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoPowerRangeProperty ??= __type__?.GetMethodInfoByParameterTypeNames("DoPowerRangeProperty", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent", "System.Single");
		}
		
		private static MethodInfo ___DoIntRangeProperty;
		private static MethodInfo __DoIntRangeProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoIntRangeProperty ??= __type__?.GetMethodInfoByParameterTypeNames("DoIntRangeProperty", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___IntegerPropertyInternal;
		private static MethodInfo __IntegerPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IntegerPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("IntegerPropertyInternal", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___IntegerPropertyInternal__2;
		private static MethodInfo __IntegerPropertyInternal__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IntegerPropertyInternal__2 ??= __type__?.GetMethodInfoByParameterTypeNames("IntegerPropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___FloatPropertyInternal;
		private static MethodInfo __FloatPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FloatPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("FloatPropertyInternal", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___FloatPropertyInternal__2;
		private static MethodInfo __FloatPropertyInternal__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FloatPropertyInternal__2 ??= __type__?.GetMethodInfoByParameterTypeNames("FloatPropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___ColorPropertyInternal;
		private static MethodInfo __ColorPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ColorPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("ColorPropertyInternal", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___ColorPropertyInternal__2;
		private static MethodInfo __ColorPropertyInternal__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ColorPropertyInternal__2 ??= __type__?.GetMethodInfoByParameterTypeNames("ColorPropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___VectorPropertyInternal;
		private static MethodInfo __VectorPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VectorPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("VectorPropertyInternal", "UnityEngine.Rect&", "UnityEditor.MaterialProperty&", "UnityEngine.GUIContent&");
		}
		
		private static MethodInfo ___TexturePropertyBody;
		private static MethodInfo __TexturePropertyBody
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TexturePropertyBody ??= __type__?.GetMethodInfoByParameterTypeNames("TexturePropertyBody", "UnityEngine.Rect", "UnityEditor.MaterialProperty");
		}
		
		private static MethodInfo ___TextureScaleOffsetProperty;
		private static MethodInfo __TextureScaleOffsetProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TextureScaleOffsetProperty ??= __type__?.GetMethodInfoByParameterTypeNames("TextureScaleOffsetProperty", "UnityEngine.Rect", "UnityEngine.Vector4", "System.Int32", "System.Boolean");
		}
		
		private static MethodInfo ___GetTextureFieldHeight;
		private static MethodInfo __GetTextureFieldHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetTextureFieldHeight ??= __type__?.GetMethodInfoByParameterTypeNames("GetTextureFieldHeight");
		}
		
		private static MethodInfo ___GetPropertyRect;
		private static MethodInfo __GetPropertyRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPropertyRect ??= __type__?.GetMethodInfoByParameterTypeNames("GetPropertyRect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent", "System.Boolean");
		}
		
		private static MethodInfo ___GetPropertyRect__2;
		private static MethodInfo __GetPropertyRect__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPropertyRect__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPropertyRect", "UnityEditor.MaterialProperty", "System.String", "System.Boolean");
		}
		
		private static MethodInfo ___DoPropertyContextMenu;
		private static MethodInfo __DoPropertyContextMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoPropertyContextMenu ??= __type__?.GetMethodInfoByParameterTypeNames("DoPropertyContextMenu", "UnityEditor.MaterialProperty");
		}
		
		private static MethodInfo ___GetGlobalIlluminationFlags;
		private static MethodInfo __GetGlobalIlluminationFlags
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlobalIlluminationFlags ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlobalIlluminationFlags", "UnityEngine.MaterialGlobalIlluminationFlags");
		}
		
		private static MethodInfo ___ShaderPropertyInternal;
		private static MethodInfo __ShaderPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShaderPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("ShaderPropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___DefaultShaderPropertyInternal;
		private static MethodInfo __DefaultShaderPropertyInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DefaultShaderPropertyInternal ??= __type__?.GetMethodInfoByParameterTypeNames("DefaultShaderPropertyInternal", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___DefaultShaderPropertyInternal__2;
		private static MethodInfo __DefaultShaderPropertyInternal__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DefaultShaderPropertyInternal__2 ??= __type__?.GetMethodInfoByParameterTypeNames("DefaultShaderPropertyInternal", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___GetAssociatedRenderersFromInspector;
		private static MethodInfo __GetAssociatedRenderersFromInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAssociatedRenderersFromInspector ??= __type__?.GetMethodInfoByParameterTypeNames("GetAssociatedRenderersFromInspector");
		}
		
		private static MethodInfo ___GetAssociatedRenderersFromEditors;
		private static MethodInfo __GetAssociatedRenderersFromEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAssociatedRenderersFromEditors ??= __type__?.GetMethodInfoByParameterTypeNames("GetAssociatedRenderersFromEditors", "System.Collections.Generic.IEnumerable`1[[UnityEditor.Editor, UnityEditor.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]");
		}
		
		private static MethodInfo ___PrepareMaterialPropertiesForAnimationMode;
		private static MethodInfo __PrepareMaterialPropertiesForAnimationMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PrepareMaterialPropertiesForAnimationMode ??= __type__?.GetMethodInfoByParameterTypeNames("PrepareMaterialPropertiesForAnimationMode", "UnityEditor.MaterialProperty[]", "UnityEngine.Renderer", "System.Boolean");
		}
		
		private static MethodInfo ___PrepareMaterialPropertiesForAnimationMode__2;
		private static MethodInfo __PrepareMaterialPropertiesForAnimationMode__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PrepareMaterialPropertiesForAnimationMode__2 ??= __type__?.GetMethodInfoByParameterTypeNames("PrepareMaterialPropertiesForAnimationMode", "UnityEditor.MaterialProperty[]", "UnityEngine.Renderer[]", "System.Boolean");
		}
		
		private static MethodInfo ___IsMaterialEditor;
		private static MethodInfo __IsMaterialEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsMaterialEditor ??= __type__?.GetMethodInfoByParameterTypeNames("IsMaterialEditor", "System.String");
		}
		
		private static MethodInfo ___CreateCustomShaderEditorIfNeeded;
		private static MethodInfo __CreateCustomShaderEditorIfNeeded
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateCustomShaderEditorIfNeeded ??= __type__?.GetMethodInfoByParameterTypeNames("CreateCustomShaderEditorIfNeeded", "UnityEngine.Shader");
		}
		
		private static MethodInfo ___BeginNoApplyMaterialPropertyDrawers;
		private static MethodInfo __BeginNoApplyMaterialPropertyDrawers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginNoApplyMaterialPropertyDrawers ??= __type__?.GetMethodInfoByParameterTypeNames("BeginNoApplyMaterialPropertyDrawers");
		}
		
		private static MethodInfo ___EndNoApplyMaterialPropertyDrawers;
		private static MethodInfo __EndNoApplyMaterialPropertyDrawers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndNoApplyMaterialPropertyDrawers ??= __type__?.GetMethodInfoByParameterTypeNames("EndNoApplyMaterialPropertyDrawers");
		}
		
		private static MethodInfo ___ApplyMaterialPropertyDrawersFromNative;
		private static MethodInfo __ApplyMaterialPropertyDrawersFromNative
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ApplyMaterialPropertyDrawersFromNative ??= __type__?.GetMethodInfoByParameterTypeNames("ApplyMaterialPropertyDrawersFromNative", "UnityEngine.Material");
		}
		
		private static MethodInfo ___TextureValidator;
		private static MethodInfo __TextureValidator
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TextureValidator ??= __type__?.GetMethodInfoByParameterTypeNames("TextureValidator", "UnityEngine.Object[]", "System.Type", "UnityEditor.SerializedProperty", "UnityEditor.EditorGUI+ObjectFieldValidatorOptions");
		}
		
		private static MethodInfo ___Init;
		private static MethodInfo __Init
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Init ??= __type__?.GetMethodInfoByParameterTypeNames("Init");
		}
		
		private static MethodInfo ___DoReflectionProbePicker;
		private static MethodInfo __DoReflectionProbePicker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoReflectionProbePicker ??= __type__?.GetMethodInfoByParameterTypeNames("DoReflectionProbePicker", "UnityEngine.Rect&");
		}
		
		private static MethodInfo ___StreamRenderResources;
		private static MethodInfo __StreamRenderResources
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___StreamRenderResources ??= __type__?.GetMethodInfoByParameterTypeNames("StreamRenderResources");
		}
		
		private static MethodInfo ___DoRenderPreview;
		private static MethodInfo __DoRenderPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoRenderPreview ??= __type__?.GetMethodInfoByParameterTypeNames("DoRenderPreview", "UnityEditor.PreviewRenderUtility", "System.Boolean");
		}
		
		private static MethodInfo ___GetPreviewRendererUtility;
		private static MethodInfo __GetPreviewRendererUtility
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPreviewRendererUtility ??= __type__?.GetMethodInfoByParameterTypeNames("GetPreviewRendererUtility");
		}
		
		private static MethodInfo ___CleanUpPreviewRenderUtility;
		private static MethodInfo __CleanUpPreviewRenderUtility
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CleanUpPreviewRenderUtility ??= __type__?.GetMethodInfoByParameterTypeNames("CleanUpPreviewRenderUtility");
		}
		
		private static MethodInfo ___OnSceneDrag;
		private static MethodInfo __OnSceneDrag
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnSceneDrag ??= __type__?.GetMethodInfoByParameterTypeNames("OnSceneDrag", "UnityEditor.SceneView", "System.Int32");
		}
		
		private static MethodInfo ___TryRevertDragChanges;
		private static MethodInfo __TryRevertDragChanges
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryRevertDragChanges ??= __type__?.GetMethodInfoByParameterTypeNames("TryRevertDragChanges");
		}
		
		private static MethodInfo ___ClearDragMaterialRendering;
		private static MethodInfo __ClearDragMaterialRendering
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearDragMaterialRendering ??= __type__?.GetMethodInfoByParameterTypeNames("ClearDragMaterialRendering");
		}
		
		private static MethodInfo ___HandleSkybox;
		private static MethodInfo __HandleSkybox
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HandleSkybox ??= __type__?.GetMethodInfoByParameterTypeNames("HandleSkybox", "UnityEngine.GameObject", "UnityEngine.Event");
		}
		
		private static MethodInfo ___HandleRenderer;
		private static MethodInfo __HandleRenderer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HandleRenderer ??= __type__?.GetMethodInfoByParameterTypeNames("HandleRenderer", "UnityEngine.Renderer", "System.Int32", "UnityEngine.Material", "UnityEngine.EventType", "System.Boolean");
		}
		
		private static MethodInfo ___HasLargeHeader;
		private static MethodInfo __HasLargeHeader
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasLargeHeader ??= __type__?.GetMethodInfoByParameterTypeNames("HasLargeHeader");
		}
		
		private static MethodInfo ___OnHeaderIconGUI;
		private static MethodInfo __OnHeaderIconGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderIconGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderIconGUI", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___HasMultipleMixedQueueValues;
		private static MethodInfo __HasMultipleMixedQueueValues
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasMultipleMixedQueueValues ??= __type__?.GetMethodInfoByParameterTypeNames("HasMultipleMixedQueueValues");
		}
		
		private static MethodInfo ___CalculateClosestQueueIndexToValue;
		private static MethodInfo __CalculateClosestQueueIndexToValue
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CalculateClosestQueueIndexToValue ??= __type__?.GetMethodInfoByParameterTypeNames("CalculateClosestQueueIndexToValue", "System.Int32");
		}
		
		private static MethodInfo ___GetControlRectForSingleLine;
		private static MethodInfo __GetControlRectForSingleLine
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetControlRectForSingleLine ??= __type__?.GetMethodInfoByParameterTypeNames("GetControlRectForSingleLine");
		}
		
		private static MethodInfo ___ExtraPropertyAfterTexture;
		private static MethodInfo __ExtraPropertyAfterTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ExtraPropertyAfterTexture ??= __type__?.GetMethodInfoByParameterTypeNames("ExtraPropertyAfterTexture", "UnityEngine.Rect", "UnityEditor.MaterialProperty", "System.Boolean");
		}
		
		private static MethodInfo ___GetTextureTypeFromDimension;
		private static MethodInfo __GetTextureTypeFromDimension
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetTextureTypeFromDimension ??= __type__?.GetMethodInfoByParameterTypeNames("GetTextureTypeFromDimension", "UnityEngine.Rendering.TextureDimension");
		}
	}
	public static class UnityEditor_MaterialEditor_Extension
	{
		public static UnityEditor_MaterialEditor ReflectionHelper(this UnityEditor.MaterialEditor self) => new(self);
	}
}
