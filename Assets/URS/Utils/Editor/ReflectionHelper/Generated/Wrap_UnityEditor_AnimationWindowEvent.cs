//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_AnimationWindowEvent
	{
		
		/// <summary>
		/// <see cref="UnityEditor.AnimationWindowEvent"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.AnimationWindowEvent");
		
		
		public UnityEngine.GameObject root
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GameObject)(__root?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __root?.SetValue(__self__, value);
		}
		
		public UnityEngine.AnimationClip clip
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.AnimationClip)(__clip?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __clip?.SetValue(__self__, value);
		}
		
		public UnityEditor_AnimationClipInfoProperties clipInfo
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => new UnityEditor_AnimationClipInfoProperties(__clipInfo?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __clipInfo?.SetValue(__self__, value.__self__);
		}
		
		public int eventIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__eventIndex?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __eventIndex?.SetValue(__self__, value);
		}
		
		public static UnityEditor_AnimationWindowEvent CreateAndEdit(UnityEngine.GameObject root, UnityEngine.AnimationClip clip, float time)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = root;
			__params__[1] = clip;
			__params__[2] = time;
			var __result__ = __CreateAndEdit?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? new UnityEditor_AnimationWindowEvent(__result__) : default;
		}
		
		public static UnityEditor_AnimationWindowEvent Edit(UnityEngine.GameObject root, UnityEngine.AnimationClip clip, int eventIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = root;
			__params__[1] = clip;
			__params__[2] = eventIndex;
			var __result__ = __Edit?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? new UnityEditor_AnimationWindowEvent(__result__) : default;
		}
		
		public static UnityEditor_AnimationWindowEvent Edit(UnityEditor_AnimationClipInfoProperties clipInfo, int eventIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = clipInfo.__self__;
			__params__[1] = eventIndex;
			var __result__ = __Edit__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? new UnityEditor_AnimationWindowEvent(__result__) : default;
		}
		
		public static int InsertAnimationEvent(ref UnityEngine.AnimationEvent[] events, UnityEngine.AnimationClip clip, UnityEngine.AnimationEvent evt)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = events;
			__params__[1] = clip;
			__params__[2] = evt;
			var __result__ = __InsertAnimationEvent?.Invoke(null, __params__);
			events = (UnityEngine.AnimationEvent[])(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public UnityEditor_AnimationWindowEvent(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
		public UnityEngine.Object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEngine.ScriptableObject __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.ScriptableObject)(__self__);
		}
		
		private static FieldInfo ___root;
		private static FieldInfo __root
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___root ??= __type__?.GetField("root", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___clip;
		private static FieldInfo __clip
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___clip ??= __type__?.GetField("clip", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___clipInfo;
		private static FieldInfo __clipInfo
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___clipInfo ??= __type__?.GetField("clipInfo", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___eventIndex;
		private static FieldInfo __eventIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___eventIndex ??= __type__?.GetField("eventIndex", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___CreateAndEdit;
		private static MethodInfo __CreateAndEdit
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateAndEdit ??= __type__?.GetMethodInfoByParameterTypeNames("CreateAndEdit", "UnityEngine.GameObject", "UnityEngine.AnimationClip", "System.Single");
		}
		
		private static MethodInfo ___Edit;
		private static MethodInfo __Edit
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Edit ??= __type__?.GetMethodInfoByParameterTypeNames("Edit", "UnityEngine.GameObject", "UnityEngine.AnimationClip", "System.Int32");
		}
		
		private static MethodInfo ___Edit__2;
		private static MethodInfo __Edit__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Edit__2 ??= __type__?.GetMethodInfoByParameterTypeNames("Edit", "UnityEditor.AnimationClipInfoProperties", "System.Int32");
		}
		
		private static MethodInfo ___InsertAnimationEvent;
		private static MethodInfo __InsertAnimationEvent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InsertAnimationEvent ??= __type__?.GetMethodInfoByParameterTypeNames("InsertAnimationEvent", "UnityEngine.AnimationEvent[]&", "UnityEngine.AnimationClip", "UnityEngine.AnimationEvent");
		}
	}
}
