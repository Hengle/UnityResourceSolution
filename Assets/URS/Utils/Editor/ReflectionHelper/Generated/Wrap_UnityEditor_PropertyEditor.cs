//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_PropertyEditor
	{
		
		/// <summary>
		/// <see cref="UnityEditor.PropertyEditor"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.PropertyEditor");
		
		
		public UnityEngine.UIElements.VisualElement editorsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__editorsElement?.GetValue(__self__));
		}
		
		public UnityEngine.UIElements.VisualElement previewAndLabelElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__previewAndLabelElement?.GetValue(__self__));
		}
		
		public UnityEngine.UIElements.VisualElement versionControlElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__versionControlElement?.GetValue(__self__));
		}
		
		public object parent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__parent?.GetValue(__self__));
		}
		
		public System.Collections.Generic.HashSet<int> editorsWithImportedObjectLabel
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.HashSet<int>)(__editorsWithImportedObjectLabel?.GetValue(__self__));
		}
		
		public object editorDragging
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__editorDragging?.GetValue(__self__));
		}
		
		public bool useUIElementsDefaultInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__useUIElementsDefaultInspector?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __useUIElementsDefaultInspector?.SetValue(__self__, value);
		}
		
		public UnityEditor.Editor lastInteractedEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.Editor)(__lastInteractedEditor?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __lastInteractedEditor?.SetValue(__self__, value);
		}
		
		public static UnityEditor_PropertyEditor HoveredPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => new UnityEditor_PropertyEditor(__HoveredPropertyEditor?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __HoveredPropertyEditor?.SetValue(null, value.__self__);
		}
		
		public static UnityEditor_PropertyEditor FocusedPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => new UnityEditor_PropertyEditor(__FocusedPropertyEditor?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __FocusedPropertyEditor?.SetValue(null, value.__self__);
		}
		
		public UnityEditor.InspectorMode inspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.InspectorMode)(__inspectorMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __inspectorMode?.SetValue(__self__, value);
		}
		
		public UnityEditor.ActiveEditorTracker tracker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.ActiveEditorTracker)(__tracker?.GetValue(__self__));
		}
		
		public UnityEngine.Rect bottomAreaDropRectangle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rect)(__bottomAreaDropRectangle?.GetValue(__self__));
		}
		
		public UnityEngine.Rect scrollViewportRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rect)(__scrollViewportRect?.GetValue(__self__));
		}
		
		public static string k_AssetPropertiesMenuItemName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__k_AssetPropertiesMenuItemName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_AssetPropertiesMenuItemName?.SetValue(null, value);
		}
		
		public static string s_MultiEditClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_MultiEditClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MultiEditClassName?.SetValue(null, value);
		}
		
		public static string s_EditorListClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_EditorListClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_EditorListClassName?.SetValue(null, value);
		}
		
		public static string s_AddComponentClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_AddComponentClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_AddComponentClassName?.SetValue(null, value);
		}
		
		public static string s_HeaderInfoClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_HeaderInfoClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_HeaderInfoClassName?.SetValue(null, value);
		}
		
		public static string s_FooterInfoClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_FooterInfoClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_FooterInfoClassName?.SetValue(null, value);
		}
		
		public static string s_MainContainerClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__s_MainContainerClassName?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MainContainerClassName?.SetValue(null, value);
		}
		
		public static float kBottomToolbarHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kBottomToolbarHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kBottomToolbarHeight?.SetValue(null, value);
		}
		
		public static float kAddComponentButtonHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kAddComponentButtonHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kAddComponentButtonHeight?.SetValue(null, value);
		}
		
		public static float kEditorElementPaddingBottom
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kEditorElementPaddingBottom?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kEditorElementPaddingBottom?.SetValue(null, value);
		}
		
		public static float k_MinAreaAbovePreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__k_MinAreaAbovePreview?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_MinAreaAbovePreview?.SetValue(null, value);
		}
		
		public static float k_InspectorPreviewMinHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__k_InspectorPreviewMinHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_InspectorPreviewMinHeight?.SetValue(null, value);
		}
		
		public static float k_InspectorPreviewMinTotalHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__k_InspectorPreviewMinTotalHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_InspectorPreviewMinTotalHeight?.SetValue(null, value);
		}
		
		public static int k_MinimumRootVisualHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__k_MinimumRootVisualHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_MinimumRootVisualHeight?.SetValue(null, value);
		}
		
		public static int k_MinimumWindowWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__k_MinimumWindowWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_MinimumWindowWidth?.SetValue(null, value);
		}
		
		public static int k_AutoScrollZoneHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__k_AutoScrollZoneHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_AutoScrollZoneHeight?.SetValue(null, value);
		}
		
		public static long delayRepaintWhilePlayingAnimation
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (long)(__delayRepaintWhilePlayingAnimation?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __delayRepaintWhilePlayingAnimation?.SetValue(null, value);
		}
		
		public long m_LastUpdateWhilePlayingAnimation
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (long)(__m_LastUpdateWhilePlayingAnimation?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LastUpdateWhilePlayingAnimation?.SetValue(__self__, value);
		}
		
		public System.Collections.Generic.List<UnityEngine.Object> m_ObjectsLockedBeforeSerialization
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.List<UnityEngine.Object>)(__m_ObjectsLockedBeforeSerialization?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ObjectsLockedBeforeSerialization?.SetValue(__self__, value);
		}
		
		public System.Collections.Generic.List<int> m_InstanceIDsLockedBeforeSerialization
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.List<int>)(__m_InstanceIDsLockedBeforeSerialization?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InstanceIDsLockedBeforeSerialization?.SetValue(__self__, value);
		}
		
		public object m_PreviewResizer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_PreviewResizer?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviewResizer?.SetValue(__self__, value);
		}
		
		public object m_LabelGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_LabelGUI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LabelGUI?.SetValue(__self__, value);
		}
		
		public int m_LastInspectedObjectInstanceID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_LastInspectedObjectInstanceID?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LastInspectedObjectInstanceID?.SetValue(__self__, value);
		}
		
		public float m_LastVerticalScrollValue
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__m_LastVerticalScrollValue?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LastVerticalScrollValue?.SetValue(__self__, value);
		}
		
		public string m_GlobalObjectId
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__m_GlobalObjectId?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_GlobalObjectId?.SetValue(__self__, value);
		}
		
		public UnityEditor.InspectorMode m_InspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.InspectorMode)(__m_InspectorMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InspectorMode?.SetValue(__self__, value);
		}
		
		public UnityEngine.Object m_InspectedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object)(__m_InspectedObject?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InspectedObject?.SetValue(__self__, value);
		}
		
		public static UnityEditor_PropertyEditor s_LastPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => new UnityEditor_PropertyEditor(__s_LastPropertyEditor?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LastPropertyEditor?.SetValue(null, value.__self__);
		}
		
		public int m_LastInitialEditorInstanceID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_LastInitialEditorInstanceID?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_LastInitialEditorInstanceID?.SetValue(__self__, value);
		}
		
		public UnityEngine.Component[] m_ComponentsInPrefabSource
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Component[])(__m_ComponentsInPrefabSource?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ComponentsInPrefabSource?.SetValue(__self__, value);
		}
		
		public System.Collections.Generic.HashSet<UnityEngine.Component> m_RemovedComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.HashSet<UnityEngine.Component>)(__m_RemovedComponents?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_RemovedComponents?.SetValue(__self__, value);
		}
		
		public System.Collections.Generic.HashSet<UnityEngine.Component> m_SuppressedComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.HashSet<UnityEngine.Component>)(__m_SuppressedComponents?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_SuppressedComponents?.SetValue(__self__, value);
		}
		
		public bool m_ResetKeyboardControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_ResetKeyboardControl?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ResetKeyboardControl?.SetValue(__self__, value);
		}
		
		public bool m_OpenAddComponentMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_OpenAddComponentMenu?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_OpenAddComponentMenu?.SetValue(__self__, value);
		}
		
		public UnityEditor.ActiveEditorTracker m_Tracker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.ActiveEditorTracker)(__m_Tracker?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Tracker?.SetValue(__self__, value);
		}
		
		public object m_AssetBundleNameGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_AssetBundleNameGUI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_AssetBundleNameGUI?.SetValue(__self__, value);
		}
		
		public object m_TypeSelectionList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_TypeSelectionList?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_TypeSelectionList?.SetValue(__self__, value);
		}
		
		public double m_lastRenderedTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (double)(__m_lastRenderedTime?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_lastRenderedTime?.SetValue(__self__, value);
		}
		
		public System.Collections.IList m_Previews
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.IList)(__m_Previews?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Previews?.SetValue(__self__, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public object m_Previews__GetItem(int i) => (object)(m_Previews?[i]);
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public void m_Previews__SetItem(int i, object value)
		{
			var __list__ = m_Previews;
			if (__list__ == null) return;
			__list__[i] = value;
		}
		
		public System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<System.Type>> m_PreviewableTypes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<System.Type>>)(__m_PreviewableTypes?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviewableTypes?.SetValue(__self__, value);
		}
		
		public object m_SelectedPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_SelectedPreview?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_SelectedPreview?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_EditorsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_EditorsElement?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_EditorsElement?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_RemovedPrefabComponentsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_RemovedPrefabComponentsElement?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_RemovedPrefabComponentsElement?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_PreviewAndLabelElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_PreviewAndLabelElement?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviewAndLabelElement?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_VersionControlElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_VersionControlElement?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_VersionControlElement?.SetValue(__self__, value);
		}
		
		public static System.Collections.IDictionary m_VersionControlBarState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.IDictionary)(__m_VersionControlBarState?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_VersionControlBarState?.SetValue(null, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_MultiEditLabel
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_MultiEditLabel?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_MultiEditLabel?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.ScrollView m_ScrollView
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.ScrollView)(__m_ScrollView?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ScrollView?.SetValue(__self__, value);
		}
		
		public bool m_TrackerResetInserted
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_TrackerResetInserted?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_TrackerResetInserted?.SetValue(__self__, value);
		}
		
		public bool m_FirstInitialize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_FirstInitialize?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_FirstInitialize?.SetValue(__self__, value);
		}
		
		public float m_PreviousFooterHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__m_PreviousFooterHeight?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviousFooterHeight?.SetValue(__self__, value);
		}
		
		public bool m_PreviousPreviewExpandedState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_PreviousPreviewExpandedState?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PreviousPreviewExpandedState?.SetValue(__self__, value);
		}
		
		public bool m_HasPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_HasPreview?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_HasPreview?.SetValue(__self__, value);
		}
		
		public System.Collections.Generic.HashSet<int> m_DrawnSelection
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.HashSet<int>)(__m_DrawnSelection?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DrawnSelection?.SetValue(__self__, value);
		}
		
		public static UnityEditor.Editor[] s_Editors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.Editor[])(__s_Editors?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_Editors?.SetValue(null, value);
		}
		
		public void OnDestroy()
		{
			__OnDestroy?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnFocusChanged(bool focus)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = focus;
			__OnFocusChanged?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnEnable()
		{
			__OnEnable?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnDisable()
		{
			__OnDisable?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnMouseEnter(UnityEngine.UIElements.MouseEnterEvent e)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = e;
			__OnMouseEnter?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnMouseLeave(UnityEngine.UIElements.MouseLeaveEvent e)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = e;
			__OnMouseLeave?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnFocusIn(UnityEngine.UIElements.FocusInEvent e)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = e;
			__OnFocusIn?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnFocusOut(UnityEngine.UIElements.FocusOutEvent e)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = e;
			__OnFocusOut?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnLostFocus()
		{
			__OnLostFocus?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool CloseIfEmpty()
		{
			var __result__ = __CloseIfEmpty?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnInspectorUpdate()
		{
			__OnInspectorUpdate?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnGUI()
		{
			__OnGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void Update()
		{
			__Update?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SetMode(UnityEditor.InspectorMode mode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = mode;
			__SetMode?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetTitle(UnityEngine.Object obj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__SetTitle?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void RefreshTitle()
		{
			__RefreshTitle?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEngine.UIElements.VisualElement FindVisualElementInTreeByClassName(string elementClassName)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = elementClassName;
			var __result__ = __FindVisualElementInTreeByClassName?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.UIElements.VisualElement)(__result__) : default;
		}
		
		public static void ClearVersionControlBarState()
		{
			__ClearVersionControlBarState?.Invoke(null, System.Array.Empty<object>());
		}
		
		public void LoadVisualTreeFromUxml()
		{
			__LoadVisualTreeFromUxml?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = e;
			__OnGeometryChanged?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetUseUIEDefaultInspector()
		{
			__SetUseUIEDefaultInspector?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SetDebug()
		{
			__SetDebug?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SetNormal()
		{
			__SetNormal?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SetDebugInternal()
		{
			__SetDebugInternal?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void AddDebugItemsToMenu(UnityEditor.GenericMenu menu)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = menu;
			__AddDebugItemsToMenu?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void AddItemsToMenu(UnityEditor.GenericMenu menu)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = menu;
			__AddItemsToMenu?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetTrackerExpandedState(UnityEditor.ActiveEditorTracker tracker, int editorIndex, bool expanded)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = tracker;
			__params__[1] = editorIndex;
			__params__[2] = expanded;
			__SetTrackerExpandedState?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ExpandAllComponents()
		{
			__ExpandAllComponents?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool IsAnyComponentCollapsed()
		{
			var __result__ = __IsAnyComponentCollapsed?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void CollapseAllComponents()
		{
			__CollapseAllComponents?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool IsAnyComponentExpanded()
		{
			var __result__ = __IsAnyComponentExpanded?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool LoadPersistedObject()
		{
			var __result__ = __LoadPersistedObject?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void CreateTracker()
		{
			__CreateTracker?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnTrackerRebuilt()
		{
			__OnTrackerRebuilt?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnObjectChanged(UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs args)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = args;
			__OnObjectChanged?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnObjectChanged(ref UnityEditor.ObjectChangeEventStream stream)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = stream;
			__OnObjectChanged__2?.Invoke(__self__, __params__);
			stream = (UnityEditor.ObjectChangeEventStream)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public void UpdateWindowObjectNameTitle()
		{
			__UpdateWindowObjectNameTitle?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnUndoRedoPerformed()
		{
			__OnUndoRedoPerformed?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ExtractPrefabComponents()
		{
			__ExtractPrefabComponents?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void CreatePreviewables()
		{
			__CreatePreviewables?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ClearPreviewables()
		{
			__ClearPreviewables?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<System.Type>> GetPreviewableTypes()
		{
			var __result__ = __GetPreviewableTypes?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<System.Type>>)(__result__) : default;
		}
		
		public object GetPreviewsForType(UnityEditor.Editor editor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editor;
			var __result__ = __GetPreviewsForType?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public void ClearTrackerDirtyOnRepaint()
		{
			__ClearTrackerDirtyOnRepaint?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEngine.UIElements.IMGUIContainer CreateIMGUIContainer(System.Action onGUIHandler, string name)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = onGUIHandler;
			__params__[1] = name;
			var __result__ = __CreateIMGUIContainer?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.UIElements.IMGUIContainer)(__result__) : default;
		}
		
		public void BeginRebuildContentContainers()
		{
			__BeginRebuildContentContainers?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void EndRebuildContentContainers()
		{
			__EndRebuildContentContainers?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void RebuildContentsContainers()
		{
			__RebuildContentsContainers?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void AutoScroll(UnityEngine.Vector2 mousePosition)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = mousePosition;
			__AutoScroll?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ScrollTo(UnityEngine.Vector2 position)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = position;
			__ScrollTo?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DragOverBottomArea(UnityEngine.UIElements.DragUpdatedEvent dragUpdatedEvent)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = dragUpdatedEvent;
			__DragOverBottomArea?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DragPerformInBottomArea(UnityEngine.UIElements.DragPerformEvent dragPerformedEvent)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = dragPerformedEvent;
			__DragPerformInBottomArea?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEditor.Editor GetLastInteractedEditor()
		{
			var __result__ = __GetLastInteractedEditor?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEditor.Editor)(__result__) : default;
		}
		
		public object GetEditorThatControlsPreview(Array editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			var __result__ = __GetEditorThatControlsPreview?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public Array GetEditorsWithPreviews(UnityEditor.Editor[] editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			var __result__ = __GetEditorsWithPreviews?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public UnityEngine.Object GetInspectedObject()
		{
			var __result__ = __GetInspectedObject?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Object)(__result__) : default;
		}
		
		public void ResetKeyboardControl()
		{
			__ResetKeyboardControl?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static bool HasLabel(UnityEngine.Object target)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = target;
			var __result__ = __HasLabel?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool HasLabel(UnityEngine.Object target, string assetPath)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = target;
			__params__[1] = assetPath;
			var __result__ = __HasLabel__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public UnityEngine.Object[] GetInspectedAssets()
		{
			var __result__ = __GetInspectedAssets?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Object[])(__result__) : default;
		}
		
		public bool BeginDrawPreviewAndLabels()
		{
			var __result__ = __BeginDrawPreviewAndLabels?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void EndDrawPreviewAndLabels(UnityEngine.Event evt, UnityEngine.Rect rect, UnityEngine.Rect dragRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = evt;
			__params__[1] = rect;
			__params__[2] = dragRect;
			__EndDrawPreviewAndLabels?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DrawPreviewAndLabels()
		{
			__DrawPreviewAndLabels?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnPreviewSelected(object userData, string[] options, int selected)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = userData;
			__params__[1] = options;
			__params__[2] = selected;
			__OnPreviewSelected?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public static void VersionControlBar(UnityEditor.Editor assetEditor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = assetEditor;
			__VersionControlBar?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void VersionControlBar(UnityEditor.Editor[] assetEditors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = assetEditors;
			__VersionControlBar__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void VersionControlCheckoutHint(UnityEditor.Editor assetEditor, bool connected)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = assetEditor;
			__params__[1] = connected;
			__VersionControlCheckoutHint?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void CheckoutForInspector(UnityEngine.Object[] targets)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = targets;
			__CheckoutForInspector?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void DoRevertUnchanged(object o)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = o;
			__DoRevertUnchanged?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static float VersionControlBarButtons(object presence, UnityEngine.Rect rect, bool connected)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = presence;
			__params__[1] = rect;
			__params__[2] = connected;
			var __result__ = __VersionControlBarButtons?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (float)(__result__) : default;
		}
		
		public static bool VersionControlActionDropdownButton(UnityEngine.Rect buttonRect, ref float buttonX, UnityEngine.GUIContent content, UnityEngine.GUIContent[] menuNames, UnityEditor.GenericMenu.MenuFunction2[] menuActions, object context)
		{
			var __pool__ = FixedArrayPool<object>.Shared(6);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = buttonX;
			__params__[2] = content;
			__params__[3] = menuNames;
			__params__[4] = menuActions;
			__params__[5] = context;
			var __result__ = __VersionControlActionDropdownButton?.Invoke(null, __params__);
			buttonX = (float)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool VersionControlActionButton(UnityEngine.Rect buttonRect, ref float buttonX, UnityEngine.GUIContent content)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = buttonX;
			__params__[2] = content;
			var __result__ = __VersionControlActionButton?.Invoke(null, __params__);
			buttonX = (float)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void DrawEditors(UnityEditor.Editor[] editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			__DrawEditors?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void RestoreVerticalScrollIfNeeded()
		{
			__RestoreVerticalScrollIfNeeded?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnPrefabInstanceUnpacked(UnityEngine.GameObject unpackedPrefabInstance)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = unpackedPrefabInstance;
			__OnPrefabInstanceUnpacked?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void AddRemovedPrefabComponentElement(UnityEngine.GameObject targetGameObject, UnityEngine.Component nextInSource, UnityEngine.UIElements.VisualElement element)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = targetGameObject;
			__params__[1] = nextInSource;
			__params__[2] = element;
			__AddRemovedPrefabComponentElement?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool ShouldDisplayRemovedComponent(UnityEngine.GameObject go, UnityEngine.Component comp)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = go;
			__params__[1] = comp;
			var __result__ = __ShouldDisplayRemovedComponent?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void DisplayRemovedComponent(UnityEngine.GameObject go, UnityEngine.Component comp)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = go;
			__params__[1] = comp;
			__DisplayRemovedComponent?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public bool WasEditorVisible(UnityEditor.Editor[] editors, int editorIndex, UnityEngine.Object target)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			__params__[1] = editorIndex;
			__params__[2] = target;
			var __result__ = __WasEditorVisible?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool IsMultiEditingSupported(UnityEditor.Editor editor, UnityEngine.Object target)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = editor;
			__params__[1] = target;
			var __result__ = __IsMultiEditingSupported?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool EditorHasLargeHeader(int editorIndex, UnityEditor.Editor[] trackerActiveEditors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = editorIndex;
			__params__[1] = trackerActiveEditors;
			var __result__ = __EditorHasLargeHeader?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool ShouldCullEditor(UnityEditor.Editor[] editors, int editorIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			__params__[1] = editorIndex;
			var __result__ = __ShouldCullEditor?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void DrawSelectionPickerList()
		{
			__DrawSelectionPickerList?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEditor.AssetImporters.AssetImporterEditor GetAssetImporter(UnityEditor.Editor[] editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			var __result__ = __GetAssetImporter?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEditor.AssetImporters.AssetImporterEditor)(__result__) : default;
		}
		
		public void AddComponentButton(UnityEditor.Editor[] editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			__AddComponentButton?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool ReadyToRepaint()
		{
			var __result__ = __ReadyToRepaint?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void DrawSplitLine(float y)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = y;
			__DrawSplitLine?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public System.Collections.IDictionary ProcessEditorElementsToRebuild(UnityEditor.Editor[] editors)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editors;
			var __result__ = __ProcessEditorElementsToRebuild?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (System.Collections.IDictionary)(__result__) : default;
		}
		
		public static bool ValidatePropertyEditorOnSelection()
		{
			var __result__ = __ValidatePropertyEditorOnSelection?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void OpenPropertyEditorOnSelection()
		{
			__OpenPropertyEditorOnSelection?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static UnityEditor_PropertyEditor OpenPropertyEditor(System.Collections.Generic.IList<UnityEngine.Object> objs)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = objs;
			var __result__ = __OpenPropertyEditor?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? new UnityEditor_PropertyEditor(__result__) : default;
		}
		
		public static UnityEditor_PropertyEditor OpenPropertyEditor(UnityEngine.Object obj, bool showWindow)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__params__[1] = showWindow;
			var __result__ = __OpenPropertyEditor__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? new UnityEditor_PropertyEditor(__result__) : default;
		}
		
		public static void ShowPropertyEditorWindow(UnityEditor_PropertyEditor propertyEditor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = propertyEditor.__self__;
			__ShowPropertyEditorWindow?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void OpenHoveredItemPropertyEditor(UnityEditor.ShortcutManagement.ShortcutArguments args)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = args;
			__OpenHoveredItemPropertyEditor?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEditor_PropertyEditor(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
		public UnityEngine.Object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEditor.EditorWindow __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.EditorWindow)(__self__);
		}
		
		private static FieldInfo ___k_AssetPropertiesMenuItemName;
		private static FieldInfo __k_AssetPropertiesMenuItemName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_AssetPropertiesMenuItemName ??= __type__?.GetField("k_AssetPropertiesMenuItemName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_MultiEditClassName;
		private static FieldInfo __s_MultiEditClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MultiEditClassName ??= __type__?.GetField("s_MultiEditClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_EditorListClassName;
		private static FieldInfo __s_EditorListClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_EditorListClassName ??= __type__?.GetField("s_EditorListClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_AddComponentClassName;
		private static FieldInfo __s_AddComponentClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_AddComponentClassName ??= __type__?.GetField("s_AddComponentClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_HeaderInfoClassName;
		private static FieldInfo __s_HeaderInfoClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_HeaderInfoClassName ??= __type__?.GetField("s_HeaderInfoClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_FooterInfoClassName;
		private static FieldInfo __s_FooterInfoClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_FooterInfoClassName ??= __type__?.GetField("s_FooterInfoClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_MainContainerClassName;
		private static FieldInfo __s_MainContainerClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MainContainerClassName ??= __type__?.GetField("s_MainContainerClassName", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kBottomToolbarHeight;
		private static FieldInfo __kBottomToolbarHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kBottomToolbarHeight ??= __type__?.GetField("kBottomToolbarHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kAddComponentButtonHeight;
		private static FieldInfo __kAddComponentButtonHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kAddComponentButtonHeight ??= __type__?.GetField("kAddComponentButtonHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kEditorElementPaddingBottom;
		private static FieldInfo __kEditorElementPaddingBottom
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kEditorElementPaddingBottom ??= __type__?.GetField("kEditorElementPaddingBottom", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_MinAreaAbovePreview;
		private static FieldInfo __k_MinAreaAbovePreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_MinAreaAbovePreview ??= __type__?.GetField("k_MinAreaAbovePreview", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_InspectorPreviewMinHeight;
		private static FieldInfo __k_InspectorPreviewMinHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_InspectorPreviewMinHeight ??= __type__?.GetField("k_InspectorPreviewMinHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_InspectorPreviewMinTotalHeight;
		private static FieldInfo __k_InspectorPreviewMinTotalHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_InspectorPreviewMinTotalHeight ??= __type__?.GetField("k_InspectorPreviewMinTotalHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_MinimumRootVisualHeight;
		private static FieldInfo __k_MinimumRootVisualHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_MinimumRootVisualHeight ??= __type__?.GetField("k_MinimumRootVisualHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_MinimumWindowWidth;
		private static FieldInfo __k_MinimumWindowWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_MinimumWindowWidth ??= __type__?.GetField("k_MinimumWindowWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_AutoScrollZoneHeight;
		private static FieldInfo __k_AutoScrollZoneHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_AutoScrollZoneHeight ??= __type__?.GetField("k_AutoScrollZoneHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___delayRepaintWhilePlayingAnimation;
		private static FieldInfo __delayRepaintWhilePlayingAnimation
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___delayRepaintWhilePlayingAnimation ??= __type__?.GetField("delayRepaintWhilePlayingAnimation", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LastUpdateWhilePlayingAnimation;
		private static FieldInfo __m_LastUpdateWhilePlayingAnimation
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LastUpdateWhilePlayingAnimation ??= __type__?.GetField("m_LastUpdateWhilePlayingAnimation", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ObjectsLockedBeforeSerialization;
		private static FieldInfo __m_ObjectsLockedBeforeSerialization
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ObjectsLockedBeforeSerialization ??= __type__?.GetField("m_ObjectsLockedBeforeSerialization", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InstanceIDsLockedBeforeSerialization;
		private static FieldInfo __m_InstanceIDsLockedBeforeSerialization
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InstanceIDsLockedBeforeSerialization ??= __type__?.GetField("m_InstanceIDsLockedBeforeSerialization", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PreviewResizer;
		private static FieldInfo __m_PreviewResizer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviewResizer ??= __type__?.GetField("m_PreviewResizer", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LabelGUI;
		private static FieldInfo __m_LabelGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LabelGUI ??= __type__?.GetField("m_LabelGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LastInspectedObjectInstanceID;
		private static FieldInfo __m_LastInspectedObjectInstanceID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LastInspectedObjectInstanceID ??= __type__?.GetField("m_LastInspectedObjectInstanceID", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LastVerticalScrollValue;
		private static FieldInfo __m_LastVerticalScrollValue
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LastVerticalScrollValue ??= __type__?.GetField("m_LastVerticalScrollValue", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_GlobalObjectId;
		private static FieldInfo __m_GlobalObjectId
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_GlobalObjectId ??= __type__?.GetField("m_GlobalObjectId", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InspectorMode;
		private static FieldInfo __m_InspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InspectorMode ??= __type__?.GetField("m_InspectorMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InspectedObject;
		private static FieldInfo __m_InspectedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InspectedObject ??= __type__?.GetField("m_InspectedObject", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_LastPropertyEditor;
		private static FieldInfo __s_LastPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LastPropertyEditor ??= __type__?.GetField("s_LastPropertyEditor", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_LastInitialEditorInstanceID;
		private static FieldInfo __m_LastInitialEditorInstanceID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_LastInitialEditorInstanceID ??= __type__?.GetField("m_LastInitialEditorInstanceID", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ComponentsInPrefabSource;
		private static FieldInfo __m_ComponentsInPrefabSource
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ComponentsInPrefabSource ??= __type__?.GetField("m_ComponentsInPrefabSource", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_RemovedComponents;
		private static FieldInfo __m_RemovedComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_RemovedComponents ??= __type__?.GetField("m_RemovedComponents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_SuppressedComponents;
		private static FieldInfo __m_SuppressedComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_SuppressedComponents ??= __type__?.GetField("m_SuppressedComponents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ResetKeyboardControl;
		private static FieldInfo __m_ResetKeyboardControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ResetKeyboardControl ??= __type__?.GetField("m_ResetKeyboardControl", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_OpenAddComponentMenu;
		private static FieldInfo __m_OpenAddComponentMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_OpenAddComponentMenu ??= __type__?.GetField("m_OpenAddComponentMenu", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Tracker;
		private static FieldInfo __m_Tracker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Tracker ??= __type__?.GetField("m_Tracker", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_AssetBundleNameGUI;
		private static FieldInfo __m_AssetBundleNameGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_AssetBundleNameGUI ??= __type__?.GetField("m_AssetBundleNameGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_TypeSelectionList;
		private static FieldInfo __m_TypeSelectionList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_TypeSelectionList ??= __type__?.GetField("m_TypeSelectionList", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_lastRenderedTime;
		private static FieldInfo __m_lastRenderedTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_lastRenderedTime ??= __type__?.GetField("m_lastRenderedTime", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Previews;
		private static FieldInfo __m_Previews
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Previews ??= __type__?.GetField("m_Previews", (BindingFlags)(-1));
		}
		
		private static Type ___E__m_Previews;
		public static Type __E__m_Previews
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__m_Previews ??= EditorUtils.GetTypeByFullName("UnityEditor.IPreviewable");
		}
		
		private static FieldInfo ___m_PreviewableTypes;
		private static FieldInfo __m_PreviewableTypes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviewableTypes ??= __type__?.GetField("m_PreviewableTypes", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_SelectedPreview;
		private static FieldInfo __m_SelectedPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_SelectedPreview ??= __type__?.GetField("m_SelectedPreview", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_EditorsElement;
		private static FieldInfo __m_EditorsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_EditorsElement ??= __type__?.GetField("m_EditorsElement", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_RemovedPrefabComponentsElement;
		private static FieldInfo __m_RemovedPrefabComponentsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_RemovedPrefabComponentsElement ??= __type__?.GetField("m_RemovedPrefabComponentsElement", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PreviewAndLabelElement;
		private static FieldInfo __m_PreviewAndLabelElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviewAndLabelElement ??= __type__?.GetField("m_PreviewAndLabelElement", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_VersionControlElement;
		private static FieldInfo __m_VersionControlElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_VersionControlElement ??= __type__?.GetField("m_VersionControlElement", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_VersionControlBarState;
		private static FieldInfo __m_VersionControlBarState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_VersionControlBarState ??= __type__?.GetField("m_VersionControlBarState", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_MultiEditLabel;
		private static FieldInfo __m_MultiEditLabel
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_MultiEditLabel ??= __type__?.GetField("m_MultiEditLabel", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ScrollView;
		private static FieldInfo __m_ScrollView
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ScrollView ??= __type__?.GetField("m_ScrollView", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_TrackerResetInserted;
		private static FieldInfo __m_TrackerResetInserted
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_TrackerResetInserted ??= __type__?.GetField("m_TrackerResetInserted", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_FirstInitialize;
		private static FieldInfo __m_FirstInitialize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_FirstInitialize ??= __type__?.GetField("m_FirstInitialize", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PreviousFooterHeight;
		private static FieldInfo __m_PreviousFooterHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviousFooterHeight ??= __type__?.GetField("m_PreviousFooterHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PreviousPreviewExpandedState;
		private static FieldInfo __m_PreviousPreviewExpandedState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PreviousPreviewExpandedState ??= __type__?.GetField("m_PreviousPreviewExpandedState", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_HasPreview;
		private static FieldInfo __m_HasPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_HasPreview ??= __type__?.GetField("m_HasPreview", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DrawnSelection;
		private static FieldInfo __m_DrawnSelection
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DrawnSelection ??= __type__?.GetField("m_DrawnSelection", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_Editors;
		private static FieldInfo __s_Editors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_Editors ??= __type__?.GetField("s_Editors", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___editorsElement;
		private static PropertyInfo __editorsElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___editorsElement ??= __type__?.GetProperty("editorsElement", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___previewAndLabelElement;
		private static PropertyInfo __previewAndLabelElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___previewAndLabelElement ??= __type__?.GetProperty("previewAndLabelElement", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___versionControlElement;
		private static PropertyInfo __versionControlElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___versionControlElement ??= __type__?.GetProperty("versionControlElement", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___parent;
		private static PropertyInfo __parent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___parent ??= __type__?.GetProperty("parent", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___editorsWithImportedObjectLabel;
		private static PropertyInfo __editorsWithImportedObjectLabel
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___editorsWithImportedObjectLabel ??= __type__?.GetProperty("editorsWithImportedObjectLabel", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___editorDragging;
		private static PropertyInfo __editorDragging
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___editorDragging ??= __type__?.GetProperty("editorDragging", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___useUIElementsDefaultInspector;
		private static PropertyInfo __useUIElementsDefaultInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___useUIElementsDefaultInspector ??= __type__?.GetProperty("useUIElementsDefaultInspector", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___lastInteractedEditor;
		private static PropertyInfo __lastInteractedEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___lastInteractedEditor ??= __type__?.GetProperty("lastInteractedEditor", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___HoveredPropertyEditor;
		private static PropertyInfo __HoveredPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HoveredPropertyEditor ??= __type__?.GetProperty("HoveredPropertyEditor", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___FocusedPropertyEditor;
		private static PropertyInfo __FocusedPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FocusedPropertyEditor ??= __type__?.GetProperty("FocusedPropertyEditor", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___inspectorMode;
		private static PropertyInfo __inspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___inspectorMode ??= __type__?.GetProperty("inspectorMode", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___tracker;
		private static PropertyInfo __tracker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___tracker ??= __type__?.GetProperty("tracker", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___bottomAreaDropRectangle;
		private static PropertyInfo __bottomAreaDropRectangle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___bottomAreaDropRectangle ??= __type__?.GetProperty("bottomAreaDropRectangle", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___scrollViewportRect;
		private static PropertyInfo __scrollViewportRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___scrollViewportRect ??= __type__?.GetProperty("scrollViewportRect", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___OnDestroy;
		private static MethodInfo __OnDestroy
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDestroy ??= __type__?.GetMethodInfoByParameterTypeNames("OnDestroy");
		}
		
		private static MethodInfo ___OnFocusChanged;
		private static MethodInfo __OnFocusChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnFocusChanged ??= __type__?.GetMethodInfoByParameterTypeNames("OnFocusChanged", "System.Boolean");
		}
		
		private static MethodInfo ___OnEnable;
		private static MethodInfo __OnEnable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnEnable ??= __type__?.GetMethodInfoByParameterTypeNames("OnEnable");
		}
		
		private static MethodInfo ___OnDisable;
		private static MethodInfo __OnDisable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDisable ??= __type__?.GetMethodInfoByParameterTypeNames("OnDisable");
		}
		
		private static MethodInfo ___OnMouseEnter;
		private static MethodInfo __OnMouseEnter
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnMouseEnter ??= __type__?.GetMethodInfoByParameterTypeNames("OnMouseEnter", "UnityEngine.UIElements.MouseEnterEvent");
		}
		
		private static MethodInfo ___OnMouseLeave;
		private static MethodInfo __OnMouseLeave
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnMouseLeave ??= __type__?.GetMethodInfoByParameterTypeNames("OnMouseLeave", "UnityEngine.UIElements.MouseLeaveEvent");
		}
		
		private static MethodInfo ___OnFocusIn;
		private static MethodInfo __OnFocusIn
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnFocusIn ??= __type__?.GetMethodInfoByParameterTypeNames("OnFocusIn", "UnityEngine.UIElements.FocusInEvent");
		}
		
		private static MethodInfo ___OnFocusOut;
		private static MethodInfo __OnFocusOut
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnFocusOut ??= __type__?.GetMethodInfoByParameterTypeNames("OnFocusOut", "UnityEngine.UIElements.FocusOutEvent");
		}
		
		private static MethodInfo ___OnLostFocus;
		private static MethodInfo __OnLostFocus
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnLostFocus ??= __type__?.GetMethodInfoByParameterTypeNames("OnLostFocus");
		}
		
		private static MethodInfo ___CloseIfEmpty;
		private static MethodInfo __CloseIfEmpty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CloseIfEmpty ??= __type__?.GetMethodInfoByParameterTypeNames("CloseIfEmpty");
		}
		
		private static MethodInfo ___OnInspectorUpdate;
		private static MethodInfo __OnInspectorUpdate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnInspectorUpdate ??= __type__?.GetMethodInfoByParameterTypeNames("OnInspectorUpdate");
		}
		
		private static MethodInfo ___OnGUI;
		private static MethodInfo __OnGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnGUI");
		}
		
		private static MethodInfo ___Update;
		private static MethodInfo __Update
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Update ??= __type__?.GetMethodInfoByParameterTypeNames("Update");
		}
		
		private static MethodInfo ___SetMode;
		private static MethodInfo __SetMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetMode ??= __type__?.GetMethodInfoByParameterTypeNames("SetMode", "UnityEditor.InspectorMode");
		}
		
		private static MethodInfo ___SetTitle;
		private static MethodInfo __SetTitle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetTitle ??= __type__?.GetMethodInfoByParameterTypeNames("SetTitle", "UnityEngine.Object");
		}
		
		private static MethodInfo ___RefreshTitle;
		private static MethodInfo __RefreshTitle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RefreshTitle ??= __type__?.GetMethodInfoByParameterTypeNames("RefreshTitle");
		}
		
		private static MethodInfo ___FindVisualElementInTreeByClassName;
		private static MethodInfo __FindVisualElementInTreeByClassName
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___FindVisualElementInTreeByClassName ??= __type__?.GetMethodInfoByParameterTypeNames("FindVisualElementInTreeByClassName", "System.String");
		}
		
		private static MethodInfo ___ClearVersionControlBarState;
		private static MethodInfo __ClearVersionControlBarState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearVersionControlBarState ??= __type__?.GetMethodInfoByParameterTypeNames("ClearVersionControlBarState");
		}
		
		private static MethodInfo ___LoadVisualTreeFromUxml;
		private static MethodInfo __LoadVisualTreeFromUxml
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadVisualTreeFromUxml ??= __type__?.GetMethodInfoByParameterTypeNames("LoadVisualTreeFromUxml");
		}
		
		private static MethodInfo ___OnGeometryChanged;
		private static MethodInfo __OnGeometryChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnGeometryChanged ??= __type__?.GetMethodInfoByParameterTypeNames("OnGeometryChanged", "UnityEngine.UIElements.GeometryChangedEvent");
		}
		
		private static MethodInfo ___SetUseUIEDefaultInspector;
		private static MethodInfo __SetUseUIEDefaultInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetUseUIEDefaultInspector ??= __type__?.GetMethodInfoByParameterTypeNames("SetUseUIEDefaultInspector");
		}
		
		private static MethodInfo ___SetDebug;
		private static MethodInfo __SetDebug
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetDebug ??= __type__?.GetMethodInfoByParameterTypeNames("SetDebug");
		}
		
		private static MethodInfo ___SetNormal;
		private static MethodInfo __SetNormal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetNormal ??= __type__?.GetMethodInfoByParameterTypeNames("SetNormal");
		}
		
		private static MethodInfo ___SetDebugInternal;
		private static MethodInfo __SetDebugInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetDebugInternal ??= __type__?.GetMethodInfoByParameterTypeNames("SetDebugInternal");
		}
		
		private static MethodInfo ___AddDebugItemsToMenu;
		private static MethodInfo __AddDebugItemsToMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddDebugItemsToMenu ??= __type__?.GetMethodInfoByParameterTypeNames("AddDebugItemsToMenu", "UnityEditor.GenericMenu");
		}
		
		private static MethodInfo ___AddItemsToMenu;
		private static MethodInfo __AddItemsToMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddItemsToMenu ??= __type__?.GetMethodInfoByParameterTypeNames("AddItemsToMenu", "UnityEditor.GenericMenu");
		}
		
		private static MethodInfo ___SetTrackerExpandedState;
		private static MethodInfo __SetTrackerExpandedState
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetTrackerExpandedState ??= __type__?.GetMethodInfoByParameterTypeNames("SetTrackerExpandedState", "UnityEditor.ActiveEditorTracker", "System.Int32", "System.Boolean");
		}
		
		private static MethodInfo ___ExpandAllComponents;
		private static MethodInfo __ExpandAllComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ExpandAllComponents ??= __type__?.GetMethodInfoByParameterTypeNames("ExpandAllComponents");
		}
		
		private static MethodInfo ___IsAnyComponentCollapsed;
		private static MethodInfo __IsAnyComponentCollapsed
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsAnyComponentCollapsed ??= __type__?.GetMethodInfoByParameterTypeNames("IsAnyComponentCollapsed");
		}
		
		private static MethodInfo ___CollapseAllComponents;
		private static MethodInfo __CollapseAllComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CollapseAllComponents ??= __type__?.GetMethodInfoByParameterTypeNames("CollapseAllComponents");
		}
		
		private static MethodInfo ___IsAnyComponentExpanded;
		private static MethodInfo __IsAnyComponentExpanded
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsAnyComponentExpanded ??= __type__?.GetMethodInfoByParameterTypeNames("IsAnyComponentExpanded");
		}
		
		private static MethodInfo ___LoadPersistedObject;
		private static MethodInfo __LoadPersistedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadPersistedObject ??= __type__?.GetMethodInfoByParameterTypeNames("LoadPersistedObject");
		}
		
		private static MethodInfo ___CreateTracker;
		private static MethodInfo __CreateTracker
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateTracker ??= __type__?.GetMethodInfoByParameterTypeNames("CreateTracker");
		}
		
		private static MethodInfo ___OnTrackerRebuilt;
		private static MethodInfo __OnTrackerRebuilt
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnTrackerRebuilt ??= __type__?.GetMethodInfoByParameterTypeNames("OnTrackerRebuilt");
		}
		
		private static MethodInfo ___OnObjectChanged;
		private static MethodInfo __OnObjectChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnObjectChanged ??= __type__?.GetMethodInfoByParameterTypeNames("OnObjectChanged", "UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs");
		}
		
		private static MethodInfo ___OnObjectChanged__2;
		private static MethodInfo __OnObjectChanged__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnObjectChanged__2 ??= __type__?.GetMethodInfoByParameterTypeNames("OnObjectChanged", "UnityEditor.ObjectChangeEventStream&");
		}
		
		private static MethodInfo ___UpdateWindowObjectNameTitle;
		private static MethodInfo __UpdateWindowObjectNameTitle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UpdateWindowObjectNameTitle ??= __type__?.GetMethodInfoByParameterTypeNames("UpdateWindowObjectNameTitle");
		}
		
		private static MethodInfo ___OnUndoRedoPerformed;
		private static MethodInfo __OnUndoRedoPerformed
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnUndoRedoPerformed ??= __type__?.GetMethodInfoByParameterTypeNames("OnUndoRedoPerformed");
		}
		
		private static MethodInfo ___ExtractPrefabComponents;
		private static MethodInfo __ExtractPrefabComponents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ExtractPrefabComponents ??= __type__?.GetMethodInfoByParameterTypeNames("ExtractPrefabComponents");
		}
		
		private static MethodInfo ___CreatePreviewables;
		private static MethodInfo __CreatePreviewables
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreatePreviewables ??= __type__?.GetMethodInfoByParameterTypeNames("CreatePreviewables");
		}
		
		private static MethodInfo ___ClearPreviewables;
		private static MethodInfo __ClearPreviewables
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearPreviewables ??= __type__?.GetMethodInfoByParameterTypeNames("ClearPreviewables");
		}
		
		private static MethodInfo ___GetPreviewableTypes;
		private static MethodInfo __GetPreviewableTypes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPreviewableTypes ??= __type__?.GetMethodInfoByParameterTypeNames("GetPreviewableTypes");
		}
		
		private static MethodInfo ___GetPreviewsForType;
		private static MethodInfo __GetPreviewsForType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPreviewsForType ??= __type__?.GetMethodInfoByParameterTypeNames("GetPreviewsForType", "UnityEditor.Editor");
		}
		
		private static MethodInfo ___ClearTrackerDirtyOnRepaint;
		private static MethodInfo __ClearTrackerDirtyOnRepaint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearTrackerDirtyOnRepaint ??= __type__?.GetMethodInfoByParameterTypeNames("ClearTrackerDirtyOnRepaint");
		}
		
		private static MethodInfo ___CreateIMGUIContainer;
		private static MethodInfo __CreateIMGUIContainer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateIMGUIContainer ??= __type__?.GetMethodInfoByParameterTypeNames("CreateIMGUIContainer", "System.Action", "System.String");
		}
		
		private static MethodInfo ___BeginRebuildContentContainers;
		private static MethodInfo __BeginRebuildContentContainers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginRebuildContentContainers ??= __type__?.GetMethodInfoByParameterTypeNames("BeginRebuildContentContainers");
		}
		
		private static MethodInfo ___EndRebuildContentContainers;
		private static MethodInfo __EndRebuildContentContainers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndRebuildContentContainers ??= __type__?.GetMethodInfoByParameterTypeNames("EndRebuildContentContainers");
		}
		
		private static MethodInfo ___RebuildContentsContainers;
		private static MethodInfo __RebuildContentsContainers
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RebuildContentsContainers ??= __type__?.GetMethodInfoByParameterTypeNames("RebuildContentsContainers");
		}
		
		private static MethodInfo ___AutoScroll;
		private static MethodInfo __AutoScroll
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AutoScroll ??= __type__?.GetMethodInfoByParameterTypeNames("AutoScroll", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___ScrollTo;
		private static MethodInfo __ScrollTo
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ScrollTo ??= __type__?.GetMethodInfoByParameterTypeNames("ScrollTo", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___DragOverBottomArea;
		private static MethodInfo __DragOverBottomArea
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DragOverBottomArea ??= __type__?.GetMethodInfoByParameterTypeNames("DragOverBottomArea", "UnityEngine.UIElements.DragUpdatedEvent");
		}
		
		private static MethodInfo ___DragPerformInBottomArea;
		private static MethodInfo __DragPerformInBottomArea
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DragPerformInBottomArea ??= __type__?.GetMethodInfoByParameterTypeNames("DragPerformInBottomArea", "UnityEngine.UIElements.DragPerformEvent");
		}
		
		private static MethodInfo ___GetLastInteractedEditor;
		private static MethodInfo __GetLastInteractedEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLastInteractedEditor ??= __type__?.GetMethodInfoByParameterTypeNames("GetLastInteractedEditor");
		}
		
		private static MethodInfo ___GetEditorThatControlsPreview;
		private static MethodInfo __GetEditorThatControlsPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetEditorThatControlsPreview ??= __type__?.GetMethodInfoByParameterTypeNames("GetEditorThatControlsPreview", "UnityEditor.IPreviewable[]");
		}
		
		private static MethodInfo ___GetEditorsWithPreviews;
		private static MethodInfo __GetEditorsWithPreviews
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetEditorsWithPreviews ??= __type__?.GetMethodInfoByParameterTypeNames("GetEditorsWithPreviews", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___GetInspectedObject;
		private static MethodInfo __GetInspectedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetInspectedObject ??= __type__?.GetMethodInfoByParameterTypeNames("GetInspectedObject");
		}
		
		private static MethodInfo ___ResetKeyboardControl;
		private static MethodInfo __ResetKeyboardControl
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ResetKeyboardControl ??= __type__?.GetMethodInfoByParameterTypeNames("ResetKeyboardControl");
		}
		
		private static MethodInfo ___HasLabel;
		private static MethodInfo __HasLabel
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasLabel ??= __type__?.GetMethodInfoByParameterTypeNames("HasLabel", "UnityEngine.Object");
		}
		
		private static MethodInfo ___HasLabel__2;
		private static MethodInfo __HasLabel__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasLabel__2 ??= __type__?.GetMethodInfoByParameterTypeNames("HasLabel", "UnityEngine.Object", "System.String");
		}
		
		private static MethodInfo ___GetInspectedAssets;
		private static MethodInfo __GetInspectedAssets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetInspectedAssets ??= __type__?.GetMethodInfoByParameterTypeNames("GetInspectedAssets");
		}
		
		private static MethodInfo ___BeginDrawPreviewAndLabels;
		private static MethodInfo __BeginDrawPreviewAndLabels
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BeginDrawPreviewAndLabels ??= __type__?.GetMethodInfoByParameterTypeNames("BeginDrawPreviewAndLabels");
		}
		
		private static MethodInfo ___EndDrawPreviewAndLabels;
		private static MethodInfo __EndDrawPreviewAndLabels
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EndDrawPreviewAndLabels ??= __type__?.GetMethodInfoByParameterTypeNames("EndDrawPreviewAndLabels", "UnityEngine.Event", "UnityEngine.Rect", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___DrawPreviewAndLabels;
		private static MethodInfo __DrawPreviewAndLabels
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawPreviewAndLabels ??= __type__?.GetMethodInfoByParameterTypeNames("DrawPreviewAndLabels");
		}
		
		private static MethodInfo ___OnPreviewSelected;
		private static MethodInfo __OnPreviewSelected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnPreviewSelected ??= __type__?.GetMethodInfoByParameterTypeNames("OnPreviewSelected", "System.Object", "System.String[]", "System.Int32");
		}
		
		private static MethodInfo ___VersionControlBar;
		private static MethodInfo __VersionControlBar
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlBar ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlBar", "UnityEditor.Editor");
		}
		
		private static MethodInfo ___VersionControlBar__2;
		private static MethodInfo __VersionControlBar__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlBar__2 ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlBar", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___VersionControlCheckoutHint;
		private static MethodInfo __VersionControlCheckoutHint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlCheckoutHint ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlCheckoutHint", "UnityEditor.Editor", "System.Boolean");
		}
		
		private static MethodInfo ___CheckoutForInspector;
		private static MethodInfo __CheckoutForInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckoutForInspector ??= __type__?.GetMethodInfoByParameterTypeNames("CheckoutForInspector", "UnityEngine.Object[]");
		}
		
		private static MethodInfo ___DoRevertUnchanged;
		private static MethodInfo __DoRevertUnchanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoRevertUnchanged ??= __type__?.GetMethodInfoByParameterTypeNames("DoRevertUnchanged", "System.Object");
		}
		
		private static MethodInfo ___VersionControlBarButtons;
		private static MethodInfo __VersionControlBarButtons
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlBarButtons ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlBarButtons", "UnityEditor.PropertyEditor+VersionControlBarState", "UnityEngine.Rect", "System.Boolean");
		}
		
		private static MethodInfo ___VersionControlActionDropdownButton;
		private static MethodInfo __VersionControlActionDropdownButton
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlActionDropdownButton ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlActionDropdownButton", "UnityEngine.Rect", "System.Single&", "UnityEngine.GUIContent", "UnityEngine.GUIContent[]", "UnityEditor.GenericMenu+MenuFunction2[]", "System.Object");
		}
		
		private static MethodInfo ___VersionControlActionButton;
		private static MethodInfo __VersionControlActionButton
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___VersionControlActionButton ??= __type__?.GetMethodInfoByParameterTypeNames("VersionControlActionButton", "UnityEngine.Rect", "System.Single&", "UnityEngine.GUIContent");
		}
		
		private static MethodInfo ___DrawEditors;
		private static MethodInfo __DrawEditors
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawEditors ??= __type__?.GetMethodInfoByParameterTypeNames("DrawEditors", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___RestoreVerticalScrollIfNeeded;
		private static MethodInfo __RestoreVerticalScrollIfNeeded
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RestoreVerticalScrollIfNeeded ??= __type__?.GetMethodInfoByParameterTypeNames("RestoreVerticalScrollIfNeeded");
		}
		
		private static MethodInfo ___OnPrefabInstanceUnpacked;
		private static MethodInfo __OnPrefabInstanceUnpacked
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnPrefabInstanceUnpacked ??= __type__?.GetMethodInfoByParameterTypeNames("OnPrefabInstanceUnpacked", "UnityEngine.GameObject");
		}
		
		private static MethodInfo ___AddRemovedPrefabComponentElement;
		private static MethodInfo __AddRemovedPrefabComponentElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddRemovedPrefabComponentElement ??= __type__?.GetMethodInfoByParameterTypeNames("AddRemovedPrefabComponentElement", "UnityEngine.GameObject", "UnityEngine.Component", "UnityEngine.UIElements.VisualElement");
		}
		
		private static MethodInfo ___ShouldDisplayRemovedComponent;
		private static MethodInfo __ShouldDisplayRemovedComponent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldDisplayRemovedComponent ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldDisplayRemovedComponent", "UnityEngine.GameObject", "UnityEngine.Component");
		}
		
		private static MethodInfo ___DisplayRemovedComponent;
		private static MethodInfo __DisplayRemovedComponent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DisplayRemovedComponent ??= __type__?.GetMethodInfoByParameterTypeNames("DisplayRemovedComponent", "UnityEngine.GameObject", "UnityEngine.Component");
		}
		
		private static MethodInfo ___WasEditorVisible;
		private static MethodInfo __WasEditorVisible
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___WasEditorVisible ??= __type__?.GetMethodInfoByParameterTypeNames("WasEditorVisible", "UnityEditor.Editor[]", "System.Int32", "UnityEngine.Object");
		}
		
		private static MethodInfo ___IsMultiEditingSupported;
		private static MethodInfo __IsMultiEditingSupported
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsMultiEditingSupported ??= __type__?.GetMethodInfoByParameterTypeNames("IsMultiEditingSupported", "UnityEditor.Editor", "UnityEngine.Object");
		}
		
		private static MethodInfo ___EditorHasLargeHeader;
		private static MethodInfo __EditorHasLargeHeader
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___EditorHasLargeHeader ??= __type__?.GetMethodInfoByParameterTypeNames("EditorHasLargeHeader", "System.Int32", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___ShouldCullEditor;
		private static MethodInfo __ShouldCullEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldCullEditor ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldCullEditor", "UnityEditor.Editor[]", "System.Int32");
		}
		
		private static MethodInfo ___DrawSelectionPickerList;
		private static MethodInfo __DrawSelectionPickerList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawSelectionPickerList ??= __type__?.GetMethodInfoByParameterTypeNames("DrawSelectionPickerList");
		}
		
		private static MethodInfo ___GetAssetImporter;
		private static MethodInfo __GetAssetImporter
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAssetImporter ??= __type__?.GetMethodInfoByParameterTypeNames("GetAssetImporter", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___AddComponentButton;
		private static MethodInfo __AddComponentButton
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddComponentButton ??= __type__?.GetMethodInfoByParameterTypeNames("AddComponentButton", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___ReadyToRepaint;
		private static MethodInfo __ReadyToRepaint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ReadyToRepaint ??= __type__?.GetMethodInfoByParameterTypeNames("ReadyToRepaint");
		}
		
		private static MethodInfo ___DrawSplitLine;
		private static MethodInfo __DrawSplitLine
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawSplitLine ??= __type__?.GetMethodInfoByParameterTypeNames("DrawSplitLine", "System.Single");
		}
		
		private static MethodInfo ___ProcessEditorElementsToRebuild;
		private static MethodInfo __ProcessEditorElementsToRebuild
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ProcessEditorElementsToRebuild ??= __type__?.GetMethodInfoByParameterTypeNames("ProcessEditorElementsToRebuild", "UnityEditor.Editor[]");
		}
		
		private static MethodInfo ___ValidatePropertyEditorOnSelection;
		private static MethodInfo __ValidatePropertyEditorOnSelection
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ValidatePropertyEditorOnSelection ??= __type__?.GetMethodInfoByParameterTypeNames("ValidatePropertyEditorOnSelection");
		}
		
		private static MethodInfo ___OpenPropertyEditorOnSelection;
		private static MethodInfo __OpenPropertyEditorOnSelection
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OpenPropertyEditorOnSelection ??= __type__?.GetMethodInfoByParameterTypeNames("OpenPropertyEditorOnSelection");
		}
		
		private static MethodInfo ___OpenPropertyEditor;
		private static MethodInfo __OpenPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OpenPropertyEditor ??= __type__?.GetMethodInfoByParameterTypeNames("OpenPropertyEditor", "System.Collections.Generic.IList`1[[UnityEngine.Object, UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]");
		}
		
		private static MethodInfo ___OpenPropertyEditor__2;
		private static MethodInfo __OpenPropertyEditor__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OpenPropertyEditor__2 ??= __type__?.GetMethodInfoByParameterTypeNames("OpenPropertyEditor", "UnityEngine.Object", "System.Boolean");
		}
		
		private static MethodInfo ___ShowPropertyEditorWindow;
		private static MethodInfo __ShowPropertyEditorWindow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowPropertyEditorWindow ??= __type__?.GetMethodInfoByParameterTypeNames("ShowPropertyEditorWindow", "UnityEditor.PropertyEditor");
		}
		
		private static MethodInfo ___OpenHoveredItemPropertyEditor;
		private static MethodInfo __OpenHoveredItemPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OpenHoveredItemPropertyEditor ??= __type__?.GetMethodInfoByParameterTypeNames("OpenHoveredItemPropertyEditor", "UnityEditor.ShortcutManagement.ShortcutArguments");
		}
	}
}
