//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEngine_TextCore_LowLevel_FontEngine
	{
		
		/// <summary>
		/// <see cref="UnityEngine.TextCore.LowLevel.FontEngine"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.FontEngine");
		
		
		public static bool isProcessingDone
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__isProcessingDone?.GetValue(null));
		}
		
		public static float generationProgress
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__generationProgress?.GetValue(null));
		}
		
		public static UnityEngine.TextCore.Glyph[] s_Glyphs
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.Glyph[])(__s_Glyphs?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_Glyphs?.SetValue(null, value);
		}
		
		public static uint[] s_GlyphIndexes_MarshallingArray_A
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (uint[])(__s_GlyphIndexes_MarshallingArray_A?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GlyphIndexes_MarshallingArray_A?.SetValue(null, value);
		}
		
		public static uint[] s_GlyphIndexes_MarshallingArray_B
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (uint[])(__s_GlyphIndexes_MarshallingArray_B?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GlyphIndexes_MarshallingArray_B?.SetValue(null, value);
		}
		
		public static Array s_GlyphMarshallingStruct_IN
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_GlyphMarshallingStruct_IN?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GlyphMarshallingStruct_IN?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_GlyphMarshallingStruct_IN__GetItem(int i) => (object)(s_GlyphMarshallingStruct_IN?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_GlyphMarshallingStruct_IN__SetItem(int i, object value) => s_GlyphMarshallingStruct_IN?.SetValue(value, i);
		
		public static Array s_GlyphMarshallingStruct_OUT
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_GlyphMarshallingStruct_OUT?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GlyphMarshallingStruct_OUT?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_GlyphMarshallingStruct_OUT__GetItem(int i) => (object)(s_GlyphMarshallingStruct_OUT?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_GlyphMarshallingStruct_OUT__SetItem(int i, object value) => s_GlyphMarshallingStruct_OUT?.SetValue(value, i);
		
		public static UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.GlyphRect[])(__s_FreeGlyphRects?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_FreeGlyphRects?.SetValue(null, value);
		}
		
		public static UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.GlyphRect[])(__s_UsedGlyphRects?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_UsedGlyphRects?.SetValue(null, value);
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[] s_SingleAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[])(__s_SingleAdjustmentRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_SingleAdjustmentRecords_MarshallingArray?.SetValue(null, value);
		}
		
		public static Array s_SingleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_SingleSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_SingleSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_SingleSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_SingleSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_SingleSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_SingleSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_MultipleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_MultipleSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MultipleSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_MultipleSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_MultipleSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_MultipleSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_MultipleSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_AlternateSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_AlternateSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_AlternateSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_AlternateSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_AlternateSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_AlternateSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_AlternateSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_LigatureSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_LigatureSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_LigatureSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_LigatureSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_LigatureSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_LigatureSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_LigatureSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_ContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_ContextualSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ContextualSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_ContextualSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_ContextualSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_ContextualSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_ContextualSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_ChainingContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_ChainingContextualSubstitutionRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ChainingContextualSubstitutionRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_ChainingContextualSubstitutionRecords_MarshallingArray__GetItem(int i) => (object)(s_ChainingContextualSubstitutionRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_ChainingContextualSubstitutionRecords_MarshallingArray__SetItem(int i, object value) => s_ChainingContextualSubstitutionRecords_MarshallingArray?.SetValue(value, i);
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__s_PairAdjustmentRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_PairAdjustmentRecords_MarshallingArray?.SetValue(null, value);
		}
		
		public static Array s_MarkToBaseAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_MarkToBaseAdjustmentRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MarkToBaseAdjustmentRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_MarkToBaseAdjustmentRecords_MarshallingArray__GetItem(int i) => (object)(s_MarkToBaseAdjustmentRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_MarkToBaseAdjustmentRecords_MarshallingArray__SetItem(int i, object value) => s_MarkToBaseAdjustmentRecords_MarshallingArray?.SetValue(value, i);
		
		public static Array s_MarkToMarkAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (Array)(__s_MarkToMarkAdjustmentRecords_MarshallingArray?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_MarkToMarkAdjustmentRecords_MarshallingArray?.SetValue(null, value);
		}
		
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static object s_MarkToMarkAdjustmentRecords_MarshallingArray__GetItem(int i) => (object)(s_MarkToMarkAdjustmentRecords_MarshallingArray?.GetValue(i));
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		public static void s_MarkToMarkAdjustmentRecords_MarshallingArray__SetItem(int i, object value) => s_MarkToMarkAdjustmentRecords_MarshallingArray?.SetValue(value, i);
		
		public static System.Collections.Generic.Dictionary<uint, UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Collections.Generic.Dictionary<uint, UnityEngine.TextCore.Glyph>)(__s_GlyphLookupDictionary?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_GlyphLookupDictionary?.SetValue(null, value);
		}
		
		public static int InitializeFontEngine_Internal()
		{
			var __result__ = __InitializeFontEngine_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int DestroyFontEngine_Internal()
		{
			var __result__ = __DestroyFontEngine_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void SendCancellationRequest()
		{
			__SendCancellationRequest?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void SendCancellationRequest_Internal()
		{
			__SendCancellationRequest_Internal?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static int LoadFontFace_Internal(string filePath)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = filePath;
			var __result__ = __LoadFontFace_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_Internal(string filePath, int pointSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = filePath;
			__params__[1] = pointSize;
			var __result__ = __LoadFontFace_With_Size_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_And_FaceIndex_Internal(string filePath, int pointSize, int faceIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = filePath;
			__params__[1] = pointSize;
			__params__[2] = faceIndex;
			var __result__ = __LoadFontFace_With_Size_And_FaceIndex_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_FromSourceFontFile_Internal(byte[] sourceFontFile)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = sourceFontFile;
			var __result__ = __LoadFontFace_FromSourceFontFile_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_FromSourceFontFile_Internal(byte[] sourceFontFile, int pointSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = sourceFontFile;
			__params__[1] = pointSize;
			var __result__ = __LoadFontFace_With_Size_FromSourceFontFile_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal(byte[] sourceFontFile, int pointSize, int faceIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = sourceFontFile;
			__params__[1] = pointSize;
			__params__[2] = faceIndex;
			var __result__ = __LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_FromFont_Internal(UnityEngine.Font font)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = font;
			var __result__ = __LoadFontFace_FromFont_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_FromFont_Internal(UnityEngine.Font font, int pointSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = font;
			__params__[1] = pointSize;
			var __result__ = __LoadFontFace_With_Size_FromFont_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal(UnityEngine.Font font, int pointSize, int faceIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = font;
			__params__[1] = pointSize;
			__params__[2] = faceIndex;
			var __result__ = __LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_by_FamilyName_and_StyleName_Internal(string familyName, string styleName)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = familyName;
			__params__[1] = styleName;
			var __result__ = __LoadFontFace_by_FamilyName_and_StyleName_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal(string familyName, string styleName, int pointSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = familyName;
			__params__[1] = styleName;
			__params__[2] = pointSize;
			var __result__ = __LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int UnloadFontFace_Internal()
		{
			var __result__ = __UnloadFontFace_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int UnloadAllFontFaces_Internal()
		{
			var __result__ = __UnloadAllFontFaces_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static string[] GetSystemFontNames_Internal()
		{
			var __result__ = __GetSystemFontNames_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (string[])(__result__) : default;
		}
		
		public static Array GetSystemFontReferences()
		{
			var __result__ = __GetSystemFontReferences?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static bool TryGetSystemFontReference(string familyName, string styleName, out object fontRef)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = familyName;
			__params__[1] = styleName;
			__params__[2] = null;
			var __result__ = __TryGetSystemFontReference?.Invoke(null, __params__);
			fontRef = (object)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryGetSystemFontReference_Internal(string familyName, string styleName, out object fontRef)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = familyName;
			__params__[1] = styleName;
			__params__[2] = Activator.CreateInstance(typeof(object));
			var __result__ = __TryGetSystemFontReference_Internal?.Invoke(null, __params__);
			fontRef = (object)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static int SetFaceSize_Internal(int pointSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = pointSize;
			var __result__ = __SetFaceSize_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetFaceInfo_Internal(ref UnityEngine.TextCore.FaceInfo faceInfo)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = faceInfo;
			var __result__ = __GetFaceInfo_Internal?.Invoke(null, __params__);
			faceInfo = (UnityEngine.TextCore.FaceInfo)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetFaceCount()
		{
			var __result__ = __GetFaceCount?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static string[] GetFontFaces_Internal()
		{
			var __result__ = __GetFontFaces_Internal?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (string[])(__result__) : default;
		}
		
		public static uint GetVariantGlyphIndex(uint unicode, uint variantSelectorUnicode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = unicode;
			__params__[1] = variantSelectorUnicode;
			var __result__ = __GetVariantGlyphIndex?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (uint)(__result__) : default;
		}
		
		public static uint GetGlyphIndex(uint unicode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = unicode;
			var __result__ = __GetGlyphIndex?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (uint)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.FontEngineError LoadGlyph(uint unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags flags)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = unicode;
			__params__[1] = flags;
			var __result__ = __LoadGlyph?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.FontEngineError)(__result__) : default;
		}
		
		public static int LoadGlyph_Internal(uint unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = unicode;
			__params__[1] = loadFlags;
			var __result__ = __LoadGlyph_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static bool TryGetGlyphWithUnicodeValue_Internal(uint unicode, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref object glyphStruct)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = unicode;
			__params__[1] = loadFlags;
			__params__[2] = glyphStruct;
			var __result__ = __TryGetGlyphWithUnicodeValue_Internal?.Invoke(null, __params__);
			glyphStruct = (object)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryGetGlyphWithIndexValue_Internal(uint glyphIndex, UnityEngine.TextCore.LowLevel.GlyphLoadFlags loadFlags, ref object glyphStruct)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = loadFlags;
			__params__[2] = glyphStruct;
			var __result__ = __TryGetGlyphWithIndexValue_Internal?.Invoke(null, __params__);
			glyphStruct = (object)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryPackGlyphInAtlas(UnityEngine.TextCore.Glyph glyph, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, int width, int height, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> usedGlyphRects)
		{
			var __pool__ = FixedArrayPool<object>.Shared(8);
			var __params__ = __pool__.Rent();
			__params__[0] = glyph;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = renderMode;
			__params__[4] = width;
			__params__[5] = height;
			__params__[6] = freeGlyphRects;
			__params__[7] = usedGlyphRects;
			var __result__ = __TryPackGlyphInAtlas?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryPackGlyphInAtlas_Internal(ref object glyph, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, int width, int height, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref int freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref int usedGlyphRectCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(10);
			var __params__ = __pool__.Rent();
			__params__[0] = glyph;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = renderMode;
			__params__[4] = width;
			__params__[5] = height;
			__params__[6] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[7] = freeGlyphRectCount;
			__params__[8] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[9] = usedGlyphRectCount;
			var __result__ = __TryPackGlyphInAtlas_Internal?.Invoke(null, __params__);
			glyph = (object)(__params__[0]);
			freeGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[6]);
			freeGlyphRectCount = (int)(__params__[7]);
			usedGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[8]);
			usedGlyphRectCount = (int)(__params__[9]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryPackGlyphsInAtlas(System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphsToAdd, System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphsAdded, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, int width, int height, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> usedGlyphRects)
		{
			var __pool__ = FixedArrayPool<object>.Shared(9);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphsToAdd;
			__params__[1] = glyphsAdded;
			__params__[2] = padding;
			__params__[3] = packingMode;
			__params__[4] = renderMode;
			__params__[5] = width;
			__params__[6] = height;
			__params__[7] = freeGlyphRects;
			__params__[8] = usedGlyphRects;
			var __result__ = __TryPackGlyphsInAtlas?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryPackGlyphsInAtlas_Internal(out Array glyphsToAdd, ref int glyphsToAddCount, out Array glyphsAdded, ref int glyphsAddedCount, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, int width, int height, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref int freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref int usedGlyphRectCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(13);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			__params__[1] = glyphsToAddCount;
			__params__[2] = Activator.CreateInstance(typeof(Array));
			__params__[3] = glyphsAddedCount;
			__params__[4] = padding;
			__params__[5] = packingMode;
			__params__[6] = renderMode;
			__params__[7] = width;
			__params__[8] = height;
			__params__[9] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[10] = freeGlyphRectCount;
			__params__[11] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[12] = usedGlyphRectCount;
			var __result__ = __TryPackGlyphsInAtlas_Internal?.Invoke(null, __params__);
			glyphsToAdd = (Array)(__params__[0]);
			glyphsToAddCount = (int)(__params__[1]);
			glyphsAdded = (Array)(__params__[2]);
			glyphsAddedCount = (int)(__params__[3]);
			freeGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[9]);
			freeGlyphRectCount = (int)(__params__[10]);
			usedGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[11]);
			usedGlyphRectCount = (int)(__params__[12]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.FontEngineError RenderGlyphToTexture(UnityEngine.TextCore.Glyph glyph, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = glyph;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = texture;
			var __result__ = __RenderGlyphToTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.FontEngineError)(__result__) : default;
		}
		
		public static int RenderGlyphToTexture_Internal(object glyphStruct, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphStruct;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = texture;
			var __result__ = __RenderGlyphToTexture_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.FontEngineError RenderGlyphsToTexture(System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphs, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = texture;
			var __result__ = __RenderGlyphsToTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.FontEngineError)(__result__) : default;
		}
		
		public static int RenderGlyphsToTexture_Internal(Array glyphs, int glyphCount, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = glyphCount;
			__params__[2] = padding;
			__params__[3] = renderMode;
			__params__[4] = texture;
			var __result__ = __RenderGlyphsToTexture_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.FontEngineError RenderGlyphsToTexture(System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphs, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, byte[] texBuffer, int texWidth, int texHeight)
		{
			var __pool__ = FixedArrayPool<object>.Shared(6);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = texBuffer;
			__params__[4] = texWidth;
			__params__[5] = texHeight;
			var __result__ = __RenderGlyphsToTexture__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.FontEngineError)(__result__) : default;
		}
		
		public static int RenderGlyphsToTextureBuffer_Internal(Array glyphs, int glyphCount, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, out byte[] texBuffer, int texWidth, int texHeight)
		{
			var __pool__ = FixedArrayPool<object>.Shared(7);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = glyphCount;
			__params__[2] = padding;
			__params__[3] = renderMode;
			__params__[4] = Activator.CreateInstance(typeof(byte[]));
			__params__[5] = texWidth;
			__params__[6] = texHeight;
			var __result__ = __RenderGlyphsToTextureBuffer_Internal?.Invoke(null, __params__);
			texBuffer = (byte[])(__params__[4]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.FontEngineError RenderGlyphsToSharedTexture(System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphs, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = padding;
			__params__[2] = renderMode;
			var __result__ = __RenderGlyphsToSharedTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.FontEngineError)(__result__) : default;
		}
		
		public static int RenderGlyphsToSharedTexture_Internal(Array glyphs, int glyphCount, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphs;
			__params__[1] = glyphCount;
			__params__[2] = padding;
			__params__[3] = renderMode;
			var __result__ = __RenderGlyphsToSharedTexture_Internal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void SetSharedTexture(UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = texture;
			__SetSharedTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void ReleaseSharedTexture()
		{
			__ReleaseSharedTexture?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void SetTextureUploadMode(bool shouldUploadImmediately)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = shouldUploadImmediately;
			__SetTextureUploadMode?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static bool TryAddGlyphToTexture(uint glyphIndex, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph glyph)
		{
			var __pool__ = FixedArrayPool<object>.Shared(8);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = freeGlyphRects;
			__params__[4] = usedGlyphRects;
			__params__[5] = renderMode;
			__params__[6] = texture;
			__params__[7] = null;
			var __result__ = __TryAddGlyphToTexture?.Invoke(null, __params__);
			glyph = (UnityEngine.TextCore.Glyph)(__params__[7]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryAddGlyphToTexture_Internal(uint glyphIndex, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref int freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref int usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out object glyph)
		{
			var __pool__ = FixedArrayPool<object>.Shared(10);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[4] = freeGlyphRectCount;
			__params__[5] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[6] = usedGlyphRectCount;
			__params__[7] = renderMode;
			__params__[8] = texture;
			__params__[9] = Activator.CreateInstance(typeof(object));
			var __result__ = __TryAddGlyphToTexture_Internal?.Invoke(null, __params__);
			freeGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[3]);
			freeGlyphRectCount = (int)(__params__[4]);
			usedGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[5]);
			usedGlyphRectCount = (int)(__params__[6]);
			glyph = (object)(__params__[9]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryAddGlyphsToTexture(System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphsToAdd, System.Collections.Generic.List<UnityEngine.TextCore.Glyph> glyphsAdded, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(8);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphsToAdd;
			__params__[1] = glyphsAdded;
			__params__[2] = padding;
			__params__[3] = packingMode;
			__params__[4] = freeGlyphRects;
			__params__[5] = usedGlyphRects;
			__params__[6] = renderMode;
			__params__[7] = texture;
			var __result__ = __TryAddGlyphsToTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryAddGlyphsToTexture_Internal_MultiThread(out Array glyphsToAdd, ref int glyphsToAddCount, out Array glyphsAdded, ref int glyphsAddedCount, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref int freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref int usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(12);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			__params__[1] = glyphsToAddCount;
			__params__[2] = Activator.CreateInstance(typeof(Array));
			__params__[3] = glyphsAddedCount;
			__params__[4] = padding;
			__params__[5] = packingMode;
			__params__[6] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[7] = freeGlyphRectCount;
			__params__[8] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[9] = usedGlyphRectCount;
			__params__[10] = renderMode;
			__params__[11] = texture;
			var __result__ = __TryAddGlyphsToTexture_Internal_MultiThread?.Invoke(null, __params__);
			glyphsToAdd = (Array)(__params__[0]);
			glyphsToAddCount = (int)(__params__[1]);
			glyphsAdded = (Array)(__params__[2]);
			glyphsAddedCount = (int)(__params__[3]);
			freeGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[6]);
			freeGlyphRectCount = (int)(__params__[7]);
			usedGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[8]);
			usedGlyphRectCount = (int)(__params__[9]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryAddGlyphsToTexture(System.Collections.Generic.List<uint> glyphIndexes, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> freeGlyphRects, System.Collections.Generic.List<UnityEngine.TextCore.GlyphRect> usedGlyphRects, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out UnityEngine.TextCore.Glyph[] glyphs)
		{
			var __pool__ = FixedArrayPool<object>.Shared(8);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = freeGlyphRects;
			__params__[4] = usedGlyphRects;
			__params__[5] = renderMode;
			__params__[6] = texture;
			__params__[7] = null;
			var __result__ = __TryAddGlyphsToTexture__2?.Invoke(null, __params__);
			glyphs = (UnityEngine.TextCore.Glyph[])(__params__[7]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool TryAddGlyphsToTexture_Internal(uint[] glyphIndex, int padding, UnityEngine.TextCore.LowLevel.GlyphPackingMode packingMode, out UnityEngine.TextCore.GlyphRect[] freeGlyphRects, ref int freeGlyphRectCount, out UnityEngine.TextCore.GlyphRect[] usedGlyphRects, ref int usedGlyphRectCount, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture, out Array glyphs, ref int glyphCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(11);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = padding;
			__params__[2] = packingMode;
			__params__[3] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[4] = freeGlyphRectCount;
			__params__[5] = Activator.CreateInstance(typeof(UnityEngine.TextCore.GlyphRect[]));
			__params__[6] = usedGlyphRectCount;
			__params__[7] = renderMode;
			__params__[8] = texture;
			__params__[9] = Activator.CreateInstance(typeof(Array));
			__params__[10] = glyphCount;
			var __result__ = __TryAddGlyphsToTexture_Internal?.Invoke(null, __params__);
			freeGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[3]);
			freeGlyphRectCount = (int)(__params__[4]);
			usedGlyphRects = (UnityEngine.TextCore.GlyphRect[])(__params__[5]);
			usedGlyphRectCount = (int)(__params__[6]);
			glyphs = (Array)(__params__[9]);
			glyphCount = (int)(__params__[10]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static object GetOpenTypeLayoutTable(object type)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			var __result__ = __GetOpenTypeLayoutTable?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public static Array GetOpenTypeLayoutScripts()
		{
			var __result__ = __GetOpenTypeLayoutScripts?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetOpenTypeLayoutFeatures()
		{
			var __result__ = __GetOpenTypeLayoutFeatures?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetOpenTypeLayoutLookups()
		{
			var __result__ = __GetOpenTypeLayoutLookups?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetOpenTypeFontFeatureList()
		{
			var __result__ = __GetOpenTypeFontFeatureList?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetAllSingleSubstitutionRecords()
		{
			var __result__ = __GetAllSingleSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetSingleSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetSingleSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetSingleSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetSingleSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetSingleSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetSingleSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetSingleSubstitutionRecordsFromMarshallingArray(out Array singleSubstitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetSingleSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			singleSubstitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllMultipleSubstitutionRecords()
		{
			var __result__ = __GetAllMultipleSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMultipleSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetMultipleSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMultipleSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMultipleSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMultipleSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMultipleSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetMultipleSubstitutionRecordsFromMarshallingArray(out Array substitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetMultipleSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			substitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllAlternateSubstitutionRecords()
		{
			var __result__ = __GetAllAlternateSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetAlternateSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetAlternateSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetAlternateSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetAlternateSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetAlternateSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetAlternateSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetAlternateSubstitutionRecordsFromMarshallingArray(out Array singleSubstitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetAlternateSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			singleSubstitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllLigatureSubstitutionRecords()
		{
			var __result__ = __GetAllLigatureSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			var __result__ = __GetLigatureSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetLigatureSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetLigatureSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetLigatureSubstitutionRecords__4?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetLigatureSubstitutionRecords__5?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetLigatureSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetLigatureSubstitutionRecords__6?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateLigatureSubstitutionRecordMarshallingArray(uint[] glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateLigatureSubstitutionRecordMarshallingArray?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetLigatureSubstitutionRecordsFromMarshallingArray(out Array ligatureSubstitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetLigatureSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			ligatureSubstitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllContextualSubstitutionRecords()
		{
			var __result__ = __GetAllContextualSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetContextualSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetContextualSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetContextualSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetContextualSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetContextualSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetContextualSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetContextualSubstitutionRecordsFromMarshallingArray(out Array substitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetContextualSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			substitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllChainingContextualSubstitutionRecords()
		{
			var __result__ = __GetAllChainingContextualSubstitutionRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetChainingContextualSubstitutionRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetChainingContextualSubstitutionRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetChainingContextualSubstitutionRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetChainingContextualSubstitutionRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetChainingContextualSubstitutionRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetChainingContextualSubstitutionRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetChainingContextualSubstitutionRecordsFromMarshallingArray(out Array substitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetChainingContextualSubstitutionRecordsFromMarshallingArray?.Invoke(null, __params__);
			substitutionRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentTable(uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetGlyphPairAdjustmentTable?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(System.Collections.Generic.List<uint> glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = null;
			var __result__ = __GetGlyphPairAdjustmentRecords?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static int PopulatePairAdjustmentRecordMarshallingArray_from_KernTable(uint[] glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulatePairAdjustmentRecordMarshallingArray_from_KernTable?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(uint glyphIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = null;
			var __result__ = __GetGlyphPairAdjustmentRecords__2?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static int PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex(uint glyphIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(System.Collections.Generic.List<uint> newGlyphIndexes, System.Collections.Generic.List<uint> allGlyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = newGlyphIndexes;
			__params__[1] = allGlyphIndexes;
			var __result__ = __GetGlyphPairAdjustmentRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static int PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes(uint[] newGlyphIndexes, uint[] allGlyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = newGlyphIndexes;
			__params__[1] = allGlyphIndexes;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord GetGlyphPairAdjustmentRecord(uint firstGlyphIndex, uint secondGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			var __result__ = __GetGlyphPairAdjustmentRecord?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetSingleAdjustmentRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetSingleAdjustmentRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetSingleAdjustmentRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[])(__result__) : default;
		}
		
		public static int PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetSingleAdjustmentRecordsFromMarshallingArray(out UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[] singleSubstitutionRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[]));
			var __result__ = __GetSingleAdjustmentRecordsFromMarshallingArray?.Invoke(null, __params__);
			singleSubstitutionRecords = (UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[])(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			var __result__ = __GetPairAdjustmentRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord GetPairAdjustmentRecord(uint firstGlyphIndex, uint secondGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			var __result__ = __GetPairAdjustmentRecord?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord)(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetAllPairAdjustmentRecords()
		{
			var __result__ = __GetAllPairAdjustmentRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetPairAdjustmentRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, uint glyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndex;
			var __result__ = __GetPairAdjustmentRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetPairAdjustmentRecords__4?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetPairAdjustmentRecords__5?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetPairAdjustmentRecords__6?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__result__) : default;
		}
		
		public static int PopulatePairAdjustmentRecordMarshallingArray(uint[] glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulatePairAdjustmentRecordMarshallingArray?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetPairAdjustmentRecordsFromMarshallingArray(out UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] glyphPairAdjustmentRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[]));
			var __result__ = __GetPairAdjustmentRecordsFromMarshallingArray?.Invoke(null, __params__);
			glyphPairAdjustmentRecords = (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[])(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllMarkToBaseAdjustmentRecords()
		{
			var __result__ = __GetAllMarkToBaseAdjustmentRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToBaseAdjustmentRecords(uint baseGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = baseGlyphIndex;
			var __result__ = __GetMarkToBaseAdjustmentRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static object GetMarkToBaseAdjustmentRecord(uint baseGlyphIndex, uint markGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = baseGlyphIndex;
			__params__[1] = markGlyphIndex;
			var __result__ = __GetMarkToBaseAdjustmentRecord?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public static Array GetMarkToBaseAdjustmentRecords(System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetMarkToBaseAdjustmentRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToBaseAdjustmentRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMarkToBaseAdjustmentRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToBaseAdjustmentRecords(uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetMarkToBaseAdjustmentRecords__4?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToBaseAdjustmentRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMarkToBaseAdjustmentRecords__5?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateMarkToBaseAdjustmentRecordMarshallingArray(uint[] glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateMarkToBaseAdjustmentRecordMarshallingArray?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetMarkToBaseAdjustmentRecordsFromMarshallingArray(out Array adjustmentRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetMarkToBaseAdjustmentRecordsFromMarshallingArray?.Invoke(null, __params__);
			adjustmentRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static Array GetAllMarkToMarkAdjustmentRecords()
		{
			var __result__ = __GetAllMarkToMarkAdjustmentRecords?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToMarkAdjustmentRecords(uint baseMarkGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = baseMarkGlyphIndex;
			var __result__ = __GetMarkToMarkAdjustmentRecords?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static object GetMarkToMarkAdjustmentRecord(uint firstGlyphIndex, uint secondGlyphIndex)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			var __result__ = __GetMarkToMarkAdjustmentRecord?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public static Array GetMarkToMarkAdjustmentRecords(System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetMarkToMarkAdjustmentRecords__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToMarkAdjustmentRecords(int lookupIndex, System.Collections.Generic.List<uint> glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMarkToMarkAdjustmentRecords__3?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToMarkAdjustmentRecords(uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			var __result__ = __GetMarkToMarkAdjustmentRecords__4?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static Array GetMarkToMarkAdjustmentRecords(int lookupIndex, uint[] glyphIndexes)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = lookupIndex;
			__params__[1] = glyphIndexes;
			var __result__ = __GetMarkToMarkAdjustmentRecords__5?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (Array)(__result__) : default;
		}
		
		public static int PopulateMarkToMarkAdjustmentRecordMarshallingArray(uint[] glyphIndexes, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateMarkToMarkAdjustmentRecordMarshallingArray?.Invoke(null, __params__);
			recordCount = (int)(__params__[1]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex(uint[] glyphIndexes, int lookupIndex, out int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndexes;
			__params__[1] = lookupIndex;
			__params__[2] = Activator.CreateInstance(typeof(int));
			var __result__ = __PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex?.Invoke(null, __params__);
			recordCount = (int)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static int GetMarkToMarkAdjustmentRecordsFromMarshallingArray(out Array adjustmentRecords)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(Array));
			var __result__ = __GetMarkToMarkAdjustmentRecordsFromMarshallingArray?.Invoke(null, __params__);
			adjustmentRecords = (Array)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void GlyphIndexToMarshallingArray(uint glyphIndex, ref uint[] dstArray)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphIndex;
			__params__[1] = dstArray;
			__GlyphIndexToMarshallingArray?.Invoke(null, __params__);
			dstArray = (uint[])(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public static void GenericListToMarshallingArray<T>(ref System.Collections.IList srcList, ref Array dstArray)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = srcList;
			__params__[1] = dstArray;
			__GenericListToMarshallingArray?.Invoke(null, __params__);
			srcList = (System.Collections.IList)(__params__[0]);
			dstArray = (Array)(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public static void SetMarshallingArraySize<T>(ref Array marshallingArray, int recordCount)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = marshallingArray;
			__params__[1] = recordCount;
			__SetMarshallingArraySize?.Invoke(null, __params__);
			marshallingArray = (Array)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public static void ResetAtlasTexture(UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = texture;
			__ResetAtlasTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void RenderBufferToTexture(UnityEngine.Texture2D srcTexture, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D dstTexture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = srcTexture;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = dstTexture;
			__RenderBufferToTexture?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static int RenderGlyphToTexture_Internal_Injected(ref object glyphStruct, int padding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, UnityEngine.Texture2D texture)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = glyphStruct;
			__params__[1] = padding;
			__params__[2] = renderMode;
			__params__[3] = texture;
			var __result__ = __RenderGlyphToTexture_Internal_Injected?.Invoke(null, __params__);
			glyphStruct = (object)(__params__[0]);
			__pool__.Return(__params__);
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void GetOpenTypeLayoutTable_Injected(object type, out object ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = type;
			__params__[1] = Activator.CreateInstance(typeof(object));
			__GetOpenTypeLayoutTable_Injected?.Invoke(null, __params__);
			ret = (object)(__params__[1]);
			__pool__.Return(__params__);
		}
		
		public static void GetGlyphPairAdjustmentRecord_Injected(uint firstGlyphIndex, uint secondGlyphIndex, out UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			__params__[2] = Activator.CreateInstance(typeof(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord));
			__GetGlyphPairAdjustmentRecord_Injected?.Invoke(null, __params__);
			ret = (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void GetPairAdjustmentRecord_Injected(uint firstGlyphIndex, uint secondGlyphIndex, out UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			__params__[2] = Activator.CreateInstance(typeof(UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord));
			__GetPairAdjustmentRecord_Injected?.Invoke(null, __params__);
			ret = (UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void GetMarkToBaseAdjustmentRecord_Injected(uint baseGlyphIndex, uint markGlyphIndex, out object ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = baseGlyphIndex;
			__params__[1] = markGlyphIndex;
			__params__[2] = Activator.CreateInstance(typeof(object));
			__GetMarkToBaseAdjustmentRecord_Injected?.Invoke(null, __params__);
			ret = (object)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public static void GetMarkToMarkAdjustmentRecord_Injected(uint firstGlyphIndex, uint secondGlyphIndex, out object ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = firstGlyphIndex;
			__params__[1] = secondGlyphIndex;
			__params__[2] = Activator.CreateInstance(typeof(object));
			__GetMarkToMarkAdjustmentRecord_Injected?.Invoke(null, __params__);
			ret = (object)(__params__[2]);
			__pool__.Return(__params__);
		}
		
		public UnityEngine_TextCore_LowLevel_FontEngine(object __self__) => this.__self__ = __self__ as object;
		public object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEngine.TextCore.LowLevel.FontEngine __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.TextCore.LowLevel.FontEngine)(__self__);
		}
		
		private static FieldInfo ___s_Glyphs;
		private static FieldInfo __s_Glyphs
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_Glyphs ??= __type__?.GetField("s_Glyphs", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_GlyphIndexes_MarshallingArray_A;
		private static FieldInfo __s_GlyphIndexes_MarshallingArray_A
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GlyphIndexes_MarshallingArray_A ??= __type__?.GetField("s_GlyphIndexes_MarshallingArray_A", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_GlyphIndexes_MarshallingArray_B;
		private static FieldInfo __s_GlyphIndexes_MarshallingArray_B
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GlyphIndexes_MarshallingArray_B ??= __type__?.GetField("s_GlyphIndexes_MarshallingArray_B", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_GlyphMarshallingStruct_IN;
		private static FieldInfo __s_GlyphMarshallingStruct_IN
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GlyphMarshallingStruct_IN ??= __type__?.GetField("s_GlyphMarshallingStruct_IN", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_GlyphMarshallingStruct_IN;
		public static Type __E__s_GlyphMarshallingStruct_IN
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_GlyphMarshallingStruct_IN ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct");
		}
		
		private static FieldInfo ___s_GlyphMarshallingStruct_OUT;
		private static FieldInfo __s_GlyphMarshallingStruct_OUT
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GlyphMarshallingStruct_OUT ??= __type__?.GetField("s_GlyphMarshallingStruct_OUT", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_GlyphMarshallingStruct_OUT;
		public static Type __E__s_GlyphMarshallingStruct_OUT
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_GlyphMarshallingStruct_OUT ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct");
		}
		
		private static FieldInfo ___s_FreeGlyphRects;
		private static FieldInfo __s_FreeGlyphRects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_FreeGlyphRects ??= __type__?.GetField("s_FreeGlyphRects", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_UsedGlyphRects;
		private static FieldInfo __s_UsedGlyphRects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_UsedGlyphRects ??= __type__?.GetField("s_UsedGlyphRects", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_SingleAdjustmentRecords_MarshallingArray;
		private static FieldInfo __s_SingleAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_SingleAdjustmentRecords_MarshallingArray ??= __type__?.GetField("s_SingleAdjustmentRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_SingleSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_SingleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_SingleSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_SingleSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_SingleSubstitutionRecords_MarshallingArray;
		public static Type __E__s_SingleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_SingleSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.SingleSubstitutionRecord");
		}
		
		private static FieldInfo ___s_MultipleSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_MultipleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MultipleSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_MultipleSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_MultipleSubstitutionRecords_MarshallingArray;
		public static Type __E__s_MultipleSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_MultipleSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord");
		}
		
		private static FieldInfo ___s_AlternateSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_AlternateSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_AlternateSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_AlternateSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_AlternateSubstitutionRecords_MarshallingArray;
		public static Type __E__s_AlternateSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_AlternateSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.AlternateSubstitutionRecord");
		}
		
		private static FieldInfo ___s_LigatureSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_LigatureSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_LigatureSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_LigatureSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_LigatureSubstitutionRecords_MarshallingArray;
		public static Type __E__s_LigatureSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_LigatureSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord");
		}
		
		private static FieldInfo ___s_ContextualSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_ContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ContextualSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_ContextualSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_ContextualSubstitutionRecords_MarshallingArray;
		public static Type __E__s_ContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_ContextualSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.ContextualSubstitutionRecord");
		}
		
		private static FieldInfo ___s_ChainingContextualSubstitutionRecords_MarshallingArray;
		private static FieldInfo __s_ChainingContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ChainingContextualSubstitutionRecords_MarshallingArray ??= __type__?.GetField("s_ChainingContextualSubstitutionRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_ChainingContextualSubstitutionRecords_MarshallingArray;
		public static Type __E__s_ChainingContextualSubstitutionRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_ChainingContextualSubstitutionRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.ChainingContextualSubstitutionRecord");
		}
		
		private static FieldInfo ___s_PairAdjustmentRecords_MarshallingArray;
		private static FieldInfo __s_PairAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_PairAdjustmentRecords_MarshallingArray ??= __type__?.GetField("s_PairAdjustmentRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_MarkToBaseAdjustmentRecords_MarshallingArray;
		private static FieldInfo __s_MarkToBaseAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MarkToBaseAdjustmentRecords_MarshallingArray ??= __type__?.GetField("s_MarkToBaseAdjustmentRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_MarkToBaseAdjustmentRecords_MarshallingArray;
		public static Type __E__s_MarkToBaseAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_MarkToBaseAdjustmentRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord");
		}
		
		private static FieldInfo ___s_MarkToMarkAdjustmentRecords_MarshallingArray;
		private static FieldInfo __s_MarkToMarkAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_MarkToMarkAdjustmentRecords_MarshallingArray ??= __type__?.GetField("s_MarkToMarkAdjustmentRecords_MarshallingArray", (BindingFlags)(-1));
		}
		
		private static Type ___E__s_MarkToMarkAdjustmentRecords_MarshallingArray;
		public static Type __E__s_MarkToMarkAdjustmentRecords_MarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___E__s_MarkToMarkAdjustmentRecords_MarshallingArray ??= EditorUtils.GetTypeByFullName("UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord");
		}
		
		private static FieldInfo ___s_GlyphLookupDictionary;
		private static FieldInfo __s_GlyphLookupDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_GlyphLookupDictionary ??= __type__?.GetField("s_GlyphLookupDictionary", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___isProcessingDone;
		private static PropertyInfo __isProcessingDone
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___isProcessingDone ??= __type__?.GetProperty("isProcessingDone", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___generationProgress;
		private static PropertyInfo __generationProgress
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___generationProgress ??= __type__?.GetProperty("generationProgress", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___InitializeFontEngine_Internal;
		private static MethodInfo __InitializeFontEngine_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InitializeFontEngine_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("InitializeFontEngine_Internal");
		}
		
		private static MethodInfo ___DestroyFontEngine_Internal;
		private static MethodInfo __DestroyFontEngine_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DestroyFontEngine_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("DestroyFontEngine_Internal");
		}
		
		private static MethodInfo ___SendCancellationRequest;
		private static MethodInfo __SendCancellationRequest
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SendCancellationRequest ??= __type__?.GetMethodInfoByParameterTypeNames("SendCancellationRequest");
		}
		
		private static MethodInfo ___SendCancellationRequest_Internal;
		private static MethodInfo __SendCancellationRequest_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SendCancellationRequest_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("SendCancellationRequest_Internal");
		}
		
		private static MethodInfo ___LoadFontFace_Internal;
		private static MethodInfo __LoadFontFace_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_Internal", "System.String");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_Internal;
		private static MethodInfo __LoadFontFace_With_Size_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_Internal", "System.String", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_And_FaceIndex_Internal;
		private static MethodInfo __LoadFontFace_With_Size_And_FaceIndex_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_And_FaceIndex_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_And_FaceIndex_Internal", "System.String", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_FromSourceFontFile_Internal;
		private static MethodInfo __LoadFontFace_FromSourceFontFile_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_FromSourceFontFile_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_FromSourceFontFile_Internal", "System.Byte[]");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_FromSourceFontFile_Internal;
		private static MethodInfo __LoadFontFace_With_Size_FromSourceFontFile_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_FromSourceFontFile_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_FromSourceFontFile_Internal", "System.Byte[]", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal;
		private static MethodInfo __LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal", "System.Byte[]", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_FromFont_Internal;
		private static MethodInfo __LoadFontFace_FromFont_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_FromFont_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_FromFont_Internal", "UnityEngine.Font");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_FromFont_Internal;
		private static MethodInfo __LoadFontFace_With_Size_FromFont_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_FromFont_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_FromFont_Internal", "UnityEngine.Font", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal;
		private static MethodInfo __LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal", "UnityEngine.Font", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___LoadFontFace_by_FamilyName_and_StyleName_Internal;
		private static MethodInfo __LoadFontFace_by_FamilyName_and_StyleName_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_by_FamilyName_and_StyleName_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_by_FamilyName_and_StyleName_Internal", "System.String", "System.String");
		}
		
		private static MethodInfo ___LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal;
		private static MethodInfo __LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal", "System.String", "System.String", "System.Int32");
		}
		
		private static MethodInfo ___UnloadFontFace_Internal;
		private static MethodInfo __UnloadFontFace_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnloadFontFace_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("UnloadFontFace_Internal");
		}
		
		private static MethodInfo ___UnloadAllFontFaces_Internal;
		private static MethodInfo __UnloadAllFontFaces_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnloadAllFontFaces_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("UnloadAllFontFaces_Internal");
		}
		
		private static MethodInfo ___GetSystemFontNames_Internal;
		private static MethodInfo __GetSystemFontNames_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSystemFontNames_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("GetSystemFontNames_Internal");
		}
		
		private static MethodInfo ___GetSystemFontReferences;
		private static MethodInfo __GetSystemFontReferences
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSystemFontReferences ??= __type__?.GetMethodInfoByParameterTypeNames("GetSystemFontReferences");
		}
		
		private static MethodInfo ___TryGetSystemFontReference;
		private static MethodInfo __TryGetSystemFontReference
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryGetSystemFontReference ??= __type__?.GetMethodInfoByParameterTypeNames("TryGetSystemFontReference", "System.String", "System.String", "UnityEngine.TextCore.LowLevel.FontReference&");
		}
		
		private static MethodInfo ___TryGetSystemFontReference_Internal;
		private static MethodInfo __TryGetSystemFontReference_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryGetSystemFontReference_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryGetSystemFontReference_Internal", "System.String", "System.String", "UnityEngine.TextCore.LowLevel.FontReference&");
		}
		
		private static MethodInfo ___SetFaceSize_Internal;
		private static MethodInfo __SetFaceSize_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetFaceSize_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("SetFaceSize_Internal", "System.Int32");
		}
		
		private static MethodInfo ___GetFaceInfo_Internal;
		private static MethodInfo __GetFaceInfo_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetFaceInfo_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("GetFaceInfo_Internal", "UnityEngine.TextCore.FaceInfo&");
		}
		
		private static MethodInfo ___GetFaceCount;
		private static MethodInfo __GetFaceCount
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetFaceCount ??= __type__?.GetMethodInfoByParameterTypeNames("GetFaceCount");
		}
		
		private static MethodInfo ___GetFontFaces_Internal;
		private static MethodInfo __GetFontFaces_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetFontFaces_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("GetFontFaces_Internal");
		}
		
		private static MethodInfo ___GetVariantGlyphIndex;
		private static MethodInfo __GetVariantGlyphIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetVariantGlyphIndex ??= __type__?.GetMethodInfoByParameterTypeNames("GetVariantGlyphIndex", "System.UInt32", "System.UInt32");
		}
		
		private static MethodInfo ___GetGlyphIndex;
		private static MethodInfo __GetGlyphIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphIndex ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphIndex", "System.UInt32");
		}
		
		private static MethodInfo ___LoadGlyph;
		private static MethodInfo __LoadGlyph
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadGlyph ??= __type__?.GetMethodInfoByParameterTypeNames("LoadGlyph", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphLoadFlags");
		}
		
		private static MethodInfo ___LoadGlyph_Internal;
		private static MethodInfo __LoadGlyph_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___LoadGlyph_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("LoadGlyph_Internal", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphLoadFlags");
		}
		
		private static MethodInfo ___TryGetGlyphWithUnicodeValue_Internal;
		private static MethodInfo __TryGetGlyphWithUnicodeValue_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryGetGlyphWithUnicodeValue_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryGetGlyphWithUnicodeValue_Internal", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphLoadFlags", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct&");
		}
		
		private static MethodInfo ___TryGetGlyphWithIndexValue_Internal;
		private static MethodInfo __TryGetGlyphWithIndexValue_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryGetGlyphWithIndexValue_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryGetGlyphWithIndexValue_Internal", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphLoadFlags", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct&");
		}
		
		private static MethodInfo ___TryPackGlyphInAtlas;
		private static MethodInfo __TryPackGlyphInAtlas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryPackGlyphInAtlas ??= __type__?.GetMethodInfoByParameterTypeNames("TryPackGlyphInAtlas", "UnityEngine.TextCore.Glyph", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Int32", "System.Int32", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]");
		}
		
		private static MethodInfo ___TryPackGlyphInAtlas_Internal;
		private static MethodInfo __TryPackGlyphInAtlas_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryPackGlyphInAtlas_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryPackGlyphInAtlas_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct&", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Int32", "System.Int32", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&");
		}
		
		private static MethodInfo ___TryPackGlyphsInAtlas;
		private static MethodInfo __TryPackGlyphsInAtlas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryPackGlyphsInAtlas ??= __type__?.GetMethodInfoByParameterTypeNames("TryPackGlyphsInAtlas", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Int32", "System.Int32", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]");
		}
		
		private static MethodInfo ___TryPackGlyphsInAtlas_Internal;
		private static MethodInfo __TryPackGlyphsInAtlas_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryPackGlyphsInAtlas_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryPackGlyphsInAtlas_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32&", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32&", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Int32", "System.Int32", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&");
		}
		
		private static MethodInfo ___RenderGlyphToTexture;
		private static MethodInfo __RenderGlyphToTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphToTexture ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphToTexture", "UnityEngine.TextCore.Glyph", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderGlyphToTexture_Internal;
		private static MethodInfo __RenderGlyphToTexture_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphToTexture_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphToTexture_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderGlyphsToTexture;
		private static MethodInfo __RenderGlyphsToTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToTexture ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToTexture", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderGlyphsToTexture_Internal;
		private static MethodInfo __RenderGlyphsToTexture_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToTexture_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToTexture_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderGlyphsToTexture__2;
		private static MethodInfo __RenderGlyphsToTexture__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToTexture__2 ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToTexture", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Byte[]", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___RenderGlyphsToTextureBuffer_Internal;
		private static MethodInfo __RenderGlyphsToTextureBuffer_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToTextureBuffer_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToTextureBuffer_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "System.Byte[]", "System.Int32", "System.Int32");
		}
		
		private static MethodInfo ___RenderGlyphsToSharedTexture;
		private static MethodInfo __RenderGlyphsToSharedTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToSharedTexture ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToSharedTexture", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode");
		}
		
		private static MethodInfo ___RenderGlyphsToSharedTexture_Internal;
		private static MethodInfo __RenderGlyphsToSharedTexture_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphsToSharedTexture_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphsToSharedTexture_Internal", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode");
		}
		
		private static MethodInfo ___SetSharedTexture;
		private static MethodInfo __SetSharedTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetSharedTexture ??= __type__?.GetMethodInfoByParameterTypeNames("SetSharedTexture", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___ReleaseSharedTexture;
		private static MethodInfo __ReleaseSharedTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ReleaseSharedTexture ??= __type__?.GetMethodInfoByParameterTypeNames("ReleaseSharedTexture");
		}
		
		private static MethodInfo ___SetTextureUploadMode;
		private static MethodInfo __SetTextureUploadMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetTextureUploadMode ??= __type__?.GetMethodInfoByParameterTypeNames("SetTextureUploadMode", "System.Boolean");
		}
		
		private static MethodInfo ___TryAddGlyphToTexture;
		private static MethodInfo __TryAddGlyphToTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphToTexture ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphToTexture", "System.UInt32", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D", "UnityEngine.TextCore.Glyph&");
		}
		
		private static MethodInfo ___TryAddGlyphToTexture_Internal;
		private static MethodInfo __TryAddGlyphToTexture_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphToTexture_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphToTexture_Internal", "System.UInt32", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct&");
		}
		
		private static MethodInfo ___TryAddGlyphsToTexture;
		private static MethodInfo __TryAddGlyphsToTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphsToTexture ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphsToTexture", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.Glyph, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___TryAddGlyphsToTexture_Internal_MultiThread;
		private static MethodInfo __TryAddGlyphsToTexture_Internal_MultiThread
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphsToTexture_Internal_MultiThread ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphsToTexture_Internal_MultiThread", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32&", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32&", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___TryAddGlyphsToTexture__2;
		private static MethodInfo __TryAddGlyphsToTexture__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphsToTexture__2 ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphsToTexture", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "System.Collections.Generic.List`1[[UnityEngine.TextCore.GlyphRect, UnityEngine.TextCoreFontEngineModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null]]", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D", "UnityEngine.TextCore.Glyph[]&");
		}
		
		private static MethodInfo ___TryAddGlyphsToTexture_Internal;
		private static MethodInfo __TryAddGlyphsToTexture_Internal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___TryAddGlyphsToTexture_Internal ??= __type__?.GetMethodInfoByParameterTypeNames("TryAddGlyphsToTexture_Internal", "System.UInt32[]", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphPackingMode", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.GlyphRect[]", "System.Int32&", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[]", "System.Int32&");
		}
		
		private static MethodInfo ___GetOpenTypeLayoutTable;
		private static MethodInfo __GetOpenTypeLayoutTable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeLayoutTable ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeLayoutTable", "UnityEngine.TextCore.LowLevel.OTL_TableType");
		}
		
		private static MethodInfo ___GetOpenTypeLayoutScripts;
		private static MethodInfo __GetOpenTypeLayoutScripts
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeLayoutScripts ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeLayoutScripts");
		}
		
		private static MethodInfo ___GetOpenTypeLayoutFeatures;
		private static MethodInfo __GetOpenTypeLayoutFeatures
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeLayoutFeatures ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeLayoutFeatures");
		}
		
		private static MethodInfo ___GetOpenTypeLayoutLookups;
		private static MethodInfo __GetOpenTypeLayoutLookups
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeLayoutLookups ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeLayoutLookups");
		}
		
		private static MethodInfo ___GetOpenTypeFontFeatureList;
		private static MethodInfo __GetOpenTypeFontFeatureList
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeFontFeatureList ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeFontFeatureList");
		}
		
		private static MethodInfo ___GetAllSingleSubstitutionRecords;
		private static MethodInfo __GetAllSingleSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllSingleSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllSingleSubstitutionRecords");
		}
		
		private static MethodInfo ___GetSingleSubstitutionRecords;
		private static MethodInfo __GetSingleSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetSingleSubstitutionRecords__2;
		private static MethodInfo __GetSingleSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetSingleSubstitutionRecords__3;
		private static MethodInfo __GetSingleSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetSingleSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetSingleSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.SingleSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetAllMultipleSubstitutionRecords;
		private static MethodInfo __GetAllMultipleSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllMultipleSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllMultipleSubstitutionRecords");
		}
		
		private static MethodInfo ___GetMultipleSubstitutionRecords;
		private static MethodInfo __GetMultipleSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMultipleSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetMultipleSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetMultipleSubstitutionRecords__2;
		private static MethodInfo __GetMultipleSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMultipleSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMultipleSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetMultipleSubstitutionRecords__3;
		private static MethodInfo __GetMultipleSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMultipleSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMultipleSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetMultipleSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetMultipleSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMultipleSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetMultipleSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetAllAlternateSubstitutionRecords;
		private static MethodInfo __GetAllAlternateSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllAlternateSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllAlternateSubstitutionRecords");
		}
		
		private static MethodInfo ___GetAlternateSubstitutionRecords;
		private static MethodInfo __GetAlternateSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAlternateSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAlternateSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetAlternateSubstitutionRecords__2;
		private static MethodInfo __GetAlternateSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAlternateSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetAlternateSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetAlternateSubstitutionRecords__3;
		private static MethodInfo __GetAlternateSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAlternateSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetAlternateSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetAlternateSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetAlternateSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAlternateSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetAlternateSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.AlternateSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetAllLigatureSubstitutionRecords;
		private static MethodInfo __GetAllLigatureSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllLigatureSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllLigatureSubstitutionRecords");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords;
		private static MethodInfo __GetLigatureSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.UInt32");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords__2;
		private static MethodInfo __GetLigatureSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords__3;
		private static MethodInfo __GetLigatureSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords__4;
		private static MethodInfo __GetLigatureSubstitutionRecords__4
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords__4 ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords__5;
		private static MethodInfo __GetLigatureSubstitutionRecords__5
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords__5 ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.UInt32[]");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecords__6;
		private static MethodInfo __GetLigatureSubstitutionRecords__6
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecords__6 ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateLigatureSubstitutionRecordMarshallingArray;
		private static MethodInfo __PopulateLigatureSubstitutionRecordMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateLigatureSubstitutionRecordMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateLigatureSubstitutionRecordMarshallingArray", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex;
		private static MethodInfo __PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetLigatureSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetLigatureSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLigatureSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetLigatureSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetAllContextualSubstitutionRecords;
		private static MethodInfo __GetAllContextualSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllContextualSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllContextualSubstitutionRecords");
		}
		
		private static MethodInfo ___GetContextualSubstitutionRecords;
		private static MethodInfo __GetContextualSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetContextualSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetContextualSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetContextualSubstitutionRecords__2;
		private static MethodInfo __GetContextualSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetContextualSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetContextualSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetContextualSubstitutionRecords__3;
		private static MethodInfo __GetContextualSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetContextualSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetContextualSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetContextualSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetContextualSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetContextualSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetContextualSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.ContextualSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetAllChainingContextualSubstitutionRecords;
		private static MethodInfo __GetAllChainingContextualSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllChainingContextualSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllChainingContextualSubstitutionRecords");
		}
		
		private static MethodInfo ___GetChainingContextualSubstitutionRecords;
		private static MethodInfo __GetChainingContextualSubstitutionRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetChainingContextualSubstitutionRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetChainingContextualSubstitutionRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetChainingContextualSubstitutionRecords__2;
		private static MethodInfo __GetChainingContextualSubstitutionRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetChainingContextualSubstitutionRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetChainingContextualSubstitutionRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetChainingContextualSubstitutionRecords__3;
		private static MethodInfo __GetChainingContextualSubstitutionRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetChainingContextualSubstitutionRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetChainingContextualSubstitutionRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetChainingContextualSubstitutionRecordsFromMarshallingArray;
		private static MethodInfo __GetChainingContextualSubstitutionRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetChainingContextualSubstitutionRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetChainingContextualSubstitutionRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.ChainingContextualSubstitutionRecord[]");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentTable;
		private static MethodInfo __GetGlyphPairAdjustmentTable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentTable ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentTable", "System.UInt32[]");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentRecords;
		private static MethodInfo __GetGlyphPairAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]", "System.Int32&");
		}
		
		private static MethodInfo ___PopulatePairAdjustmentRecordMarshallingArray_from_KernTable;
		private static MethodInfo __PopulatePairAdjustmentRecordMarshallingArray_from_KernTable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulatePairAdjustmentRecordMarshallingArray_from_KernTable ??= __type__?.GetMethodInfoByParameterTypeNames("PopulatePairAdjustmentRecordMarshallingArray_from_KernTable", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentRecords__2;
		private static MethodInfo __GetGlyphPairAdjustmentRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentRecords", "System.UInt32", "System.Int32&");
		}
		
		private static MethodInfo ___PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex;
		private static MethodInfo __PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex ??= __type__?.GetMethodInfoByParameterTypeNames("PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex", "System.UInt32", "System.Int32&");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentRecords__3;
		private static MethodInfo __GetGlyphPairAdjustmentRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes;
		private static MethodInfo __PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes", "System.UInt32[]", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentRecord;
		private static MethodInfo __GetGlyphPairAdjustmentRecord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentRecord ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentRecord", "System.UInt32", "System.UInt32");
		}
		
		private static MethodInfo ___GetSingleAdjustmentRecords;
		private static MethodInfo __GetSingleAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleAdjustmentRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetSingleAdjustmentRecords__2;
		private static MethodInfo __GetSingleAdjustmentRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleAdjustmentRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleAdjustmentRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetSingleAdjustmentRecords__3;
		private static MethodInfo __GetSingleAdjustmentRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleAdjustmentRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleAdjustmentRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes;
		private static MethodInfo __PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetSingleAdjustmentRecordsFromMarshallingArray;
		private static MethodInfo __GetSingleAdjustmentRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSingleAdjustmentRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetSingleAdjustmentRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord[]");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords;
		private static MethodInfo __GetPairAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.UInt32");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecord;
		private static MethodInfo __GetPairAdjustmentRecord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecord ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecord", "System.UInt32", "System.UInt32");
		}
		
		private static MethodInfo ___GetAllPairAdjustmentRecords;
		private static MethodInfo __GetAllPairAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllPairAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllPairAdjustmentRecords");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords__2;
		private static MethodInfo __GetPairAdjustmentRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords__3;
		private static MethodInfo __GetPairAdjustmentRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.Int32", "System.UInt32");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords__4;
		private static MethodInfo __GetPairAdjustmentRecords__4
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords__4 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords__5;
		private static MethodInfo __GetPairAdjustmentRecords__5
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords__5 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.UInt32[]");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecords__6;
		private static MethodInfo __GetPairAdjustmentRecords__6
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecords__6 ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulatePairAdjustmentRecordMarshallingArray;
		private static MethodInfo __PopulatePairAdjustmentRecordMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulatePairAdjustmentRecordMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("PopulatePairAdjustmentRecordMarshallingArray", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex;
		private static MethodInfo __PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex ??= __type__?.GetMethodInfoByParameterTypeNames("PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecordsFromMarshallingArray;
		private static MethodInfo __GetPairAdjustmentRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[]");
		}
		
		private static MethodInfo ___GetAllMarkToBaseAdjustmentRecords;
		private static MethodInfo __GetAllMarkToBaseAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllMarkToBaseAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllMarkToBaseAdjustmentRecords");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecords;
		private static MethodInfo __GetMarkToBaseAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecords", "System.UInt32");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecord;
		private static MethodInfo __GetMarkToBaseAdjustmentRecord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecord ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecord", "System.UInt32", "System.UInt32");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecords__2;
		private static MethodInfo __GetMarkToBaseAdjustmentRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecords__3;
		private static MethodInfo __GetMarkToBaseAdjustmentRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecords__4;
		private static MethodInfo __GetMarkToBaseAdjustmentRecords__4
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecords__4 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecords", "System.UInt32[]");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecords__5;
		private static MethodInfo __GetMarkToBaseAdjustmentRecords__5
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecords__5 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateMarkToBaseAdjustmentRecordMarshallingArray;
		private static MethodInfo __PopulateMarkToBaseAdjustmentRecordMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateMarkToBaseAdjustmentRecordMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateMarkToBaseAdjustmentRecordMarshallingArray", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex;
		private static MethodInfo __PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecordsFromMarshallingArray;
		private static MethodInfo __GetMarkToBaseAdjustmentRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord[]");
		}
		
		private static MethodInfo ___GetAllMarkToMarkAdjustmentRecords;
		private static MethodInfo __GetAllMarkToMarkAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetAllMarkToMarkAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetAllMarkToMarkAdjustmentRecords");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecords;
		private static MethodInfo __GetMarkToMarkAdjustmentRecords
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecords ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecords", "System.UInt32");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecord;
		private static MethodInfo __GetMarkToMarkAdjustmentRecord
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecord ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecord", "System.UInt32", "System.UInt32");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecords__2;
		private static MethodInfo __GetMarkToMarkAdjustmentRecords__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecords__2 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecords", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecords__3;
		private static MethodInfo __GetMarkToMarkAdjustmentRecords__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecords__3 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecords", "System.Int32", "System.Collections.Generic.List`1[[System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecords__4;
		private static MethodInfo __GetMarkToMarkAdjustmentRecords__4
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecords__4 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecords", "System.UInt32[]");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecords__5;
		private static MethodInfo __GetMarkToMarkAdjustmentRecords__5
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecords__5 ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecords", "System.Int32", "System.UInt32[]");
		}
		
		private static MethodInfo ___PopulateMarkToMarkAdjustmentRecordMarshallingArray;
		private static MethodInfo __PopulateMarkToMarkAdjustmentRecordMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateMarkToMarkAdjustmentRecordMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateMarkToMarkAdjustmentRecordMarshallingArray", "System.UInt32[]", "System.Int32&");
		}
		
		private static MethodInfo ___PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex;
		private static MethodInfo __PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex ??= __type__?.GetMethodInfoByParameterTypeNames("PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex", "System.UInt32[]", "System.Int32", "System.Int32&");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecordsFromMarshallingArray;
		private static MethodInfo __GetMarkToMarkAdjustmentRecordsFromMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecordsFromMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecordsFromMarshallingArray", "UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord[]");
		}
		
		private static MethodInfo ___GlyphIndexToMarshallingArray;
		private static MethodInfo __GlyphIndexToMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GlyphIndexToMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GlyphIndexToMarshallingArray", "System.UInt32", "System.UInt32[]&");
		}
		
		private static MethodInfo ___GenericListToMarshallingArray;
		private static MethodInfo __GenericListToMarshallingArray
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GenericListToMarshallingArray ??= __type__?.GetMethodInfoByParameterTypeNames("GenericListToMarshallingArray", "", "");
		}
		
		private static MethodInfo ___SetMarshallingArraySize;
		private static MethodInfo __SetMarshallingArraySize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetMarshallingArraySize ??= __type__?.GetMethodInfoByParameterTypeNames("SetMarshallingArraySize", "", "System.Int32");
		}
		
		private static MethodInfo ___ResetAtlasTexture;
		private static MethodInfo __ResetAtlasTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ResetAtlasTexture ??= __type__?.GetMethodInfoByParameterTypeNames("ResetAtlasTexture", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderBufferToTexture;
		private static MethodInfo __RenderBufferToTexture
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderBufferToTexture ??= __type__?.GetMethodInfoByParameterTypeNames("RenderBufferToTexture", "UnityEngine.Texture2D", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___RenderGlyphToTexture_Internal_Injected;
		private static MethodInfo __RenderGlyphToTexture_Internal_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RenderGlyphToTexture_Internal_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("RenderGlyphToTexture_Internal_Injected", "UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct&", "System.Int32", "UnityEngine.TextCore.LowLevel.GlyphRenderMode", "UnityEngine.Texture2D");
		}
		
		private static MethodInfo ___GetOpenTypeLayoutTable_Injected;
		private static MethodInfo __GetOpenTypeLayoutTable_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOpenTypeLayoutTable_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetOpenTypeLayoutTable_Injected", "UnityEngine.TextCore.LowLevel.OTL_TableType", "UnityEngine.TextCore.LowLevel.OTL_Table&");
		}
		
		private static MethodInfo ___GetGlyphPairAdjustmentRecord_Injected;
		private static MethodInfo __GetGlyphPairAdjustmentRecord_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetGlyphPairAdjustmentRecord_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetGlyphPairAdjustmentRecord_Injected", "System.UInt32", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord&");
		}
		
		private static MethodInfo ___GetPairAdjustmentRecord_Injected;
		private static MethodInfo __GetPairAdjustmentRecord_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetPairAdjustmentRecord_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetPairAdjustmentRecord_Injected", "System.UInt32", "System.UInt32", "UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord&");
		}
		
		private static MethodInfo ___GetMarkToBaseAdjustmentRecord_Injected;
		private static MethodInfo __GetMarkToBaseAdjustmentRecord_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToBaseAdjustmentRecord_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToBaseAdjustmentRecord_Injected", "System.UInt32", "System.UInt32", "UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord&");
		}
		
		private static MethodInfo ___GetMarkToMarkAdjustmentRecord_Injected;
		private static MethodInfo __GetMarkToMarkAdjustmentRecord_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetMarkToMarkAdjustmentRecord_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetMarkToMarkAdjustmentRecord_Injected", "System.UInt32", "System.UInt32", "UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord&");
		}
	}
	public static class UnityEngine_TextCore_LowLevel_FontEngine_Extension
	{
		public static UnityEngine_TextCore_LowLevel_FontEngine ReflectionHelper(this UnityEngine.TextCore.LowLevel.FontEngine self) => new(self);
	}
}
