//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_Editor
	{
		
		/// <summary>
		/// <see cref="UnityEditor.Editor"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.Editor");
		
		public delegate void OnEditorGUIDelegate(UnityEditor.Editor editor, UnityEngine.Rect drawRect);
		
		public UnityEditor.InspectorMode inspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.InspectorMode)(__inspectorMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __inspectorMode?.SetValue(__self__, value);
		}
		
		public bool firstInspectedEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__firstInspectedEditor?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __firstInspectedEditor?.SetValue(__self__, value);
		}
		
		public object propertyViewer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__propertyViewer?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __propertyViewer?.SetValue(__self__, value);
		}
		
		public bool canEditMultipleObjects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__canEditMultipleObjects?.GetValue(__self__));
		}
		
		public object preview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__preview?.GetValue(__self__));
		}
		
		public object propertyHandlerCache
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__propertyHandlerCache?.GetValue(__self__));
		}
		
		public bool UnityEditor_IToolModeOwner_areToolModesAvailable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__UnityEditor_IToolModeOwner_areToolModesAvailable?.GetValue(__self__));
		}
		
		public int referenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__referenceTargetIndex?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __referenceTargetIndex?.SetValue(__self__, value);
		}
		
		public string targetTitle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__targetTitle?.GetValue(__self__));
		}
		
		public UnityEditor.SerializedProperty enabledProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedProperty)(__enabledProperty?.GetValue(__self__));
		}
		
		public bool isInspectorDirty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__isInspectorDirty?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __isInspectorDirty?.SetValue(__self__, value);
		}
		
		public bool alwaysAllowExpansion
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__alwaysAllowExpansion?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __alwaysAllowExpansion?.SetValue(__self__, value);
		}
		
		public UnityEngine.Object[] m_Targets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object[])(__m_Targets?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Targets?.SetValue(__self__, value);
		}
		
		public UnityEngine.Object m_Context
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Object)(__m_Context?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Context?.SetValue(__self__, value);
		}
		
		public int m_IsDirty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_IsDirty?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_IsDirty?.SetValue(__self__, value);
		}
		
		public int m_ReferenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_ReferenceTargetIndex?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ReferenceTargetIndex?.SetValue(__self__, value);
		}
		
		public object m_PropertyHandlerCache
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_PropertyHandlerCache?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_PropertyHandlerCache?.SetValue(__self__, value);
		}
		
		public object m_DummyPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_DummyPreview?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DummyPreview?.SetValue(__self__, value);
		}
		
		public object m_AudioFilterGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_AudioFilterGUI?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_AudioFilterGUI?.SetValue(__self__, value);
		}
		
		public UnityEditor.SerializedObject m_SerializedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedObject)(__m_SerializedObject?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_SerializedObject?.SetValue(__self__, value);
		}
		
		public UnityEditor.SerializedProperty m_EnabledProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.SerializedProperty)(__m_EnabledProperty?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_EnabledProperty?.SetValue(__self__, value);
		}
		
		public UnityEditor.InspectorMode m_InspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.InspectorMode)(__m_InspectorMode?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_InspectorMode?.SetValue(__self__, value);
		}
		
		public static float kLineHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kLineHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kLineHeight?.SetValue(null, value);
		}
		
		public bool hideInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__hideInspector?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __hideInspector?.SetValue(__self__, value);
		}
		
		public static float kImageSectionWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__kImageSectionWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kImageSectionWidth?.SetValue(null, value);
		}
		
		public static float k_WideModeMinWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__k_WideModeMinWidth?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_WideModeMinWidth?.SetValue(null, value);
		}
		
		public static float k_HeaderHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__k_HeaderHeight?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __k_HeaderHeight?.SetValue(null, value);
		}
		
		public static OnEditorGUIDelegate OnPostIconGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (__OnPostIconGUI?.GetValue(null) as Delegate)?.Cast<OnEditorGUIDelegate>();
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __OnPostIconGUI?.SetValue(null, value?.Cast(__OnPostIconGUI.FieldType));
		}
		
		public static bool m_AllowMultiObjectAccess
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_AllowMultiObjectAccess?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_AllowMultiObjectAccess?.SetValue(null, value);
		}
		
		public static System.Action<UnityEditor.Editor> finishedDefaultHeaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action<UnityEditor.Editor>)(__finishedDefaultHeaderGUI?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __finishedDefaultHeaderGUI?.SetValue(null, value);
		}
		
		public bool HasLargeHeader()
		{
			var __result__ = __HasLargeHeader?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void CleanupPropertyEditor()
		{
			__CleanupPropertyEditor?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnDisableINTERNAL()
		{
			__OnDisableINTERNAL?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEditor.SerializedObject GetSerializedObjectInternal()
		{
			var __result__ = __GetSerializedObjectInternal?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEditor.SerializedObject)(__result__) : default;
		}
		
		public void CreateSerializedObject()
		{
			__CreateSerializedObject?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static void AssignCachedProperties<T>(T self, UnityEditor.SerializedProperty root)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = self;
			__params__[1] = root;
			__AssignCachedProperties?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public void InternalSetTargets(UnityEngine.Object[] t)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			__InternalSetTargets?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void InternalSetHidden(bool hidden)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = hidden;
			__InternalSetHidden?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void InternalSetContextObject(UnityEngine.Object context)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = context;
			__InternalSetContextObject?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEngine.Bounds UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets()
		{
			var __result__ = __UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Bounds)(__result__) : default;
		}
		
		public UnityEngine.Bounds GetWorldBoundsOfTarget(UnityEngine.Object targetObject)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = targetObject;
			var __result__ = __GetWorldBoundsOfTarget?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Bounds)(__result__) : default;
		}
		
		public bool UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange(int toolMode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = toolMode;
			var __result__ = __UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnForceReloadInspector()
		{
			__OnForceReloadInspector?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool GetOptimizedGUIBlock(bool isDirty, bool isVisible, out float height)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = isDirty;
			__params__[1] = isVisible;
			__params__[2] = null;
			var __result__ = __GetOptimizedGUIBlock?.Invoke(__self__, __params__);
			height = (float)(__params__[2]);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool OnOptimizedInspectorGUI(UnityEngine.Rect contentRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = contentRect;
			var __result__ = __OnOptimizedInspectorGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static void DrawPropertiesExcluding(UnityEditor.SerializedObject obj, string[] propertyToExclude)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			__params__[1] = propertyToExclude;
			__DrawPropertiesExcluding?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static bool DoDrawDefaultInspector(UnityEditor.SerializedObject obj)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = obj;
			var __result__ = __DoDrawDefaultInspector?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool DoDrawDefaultInspector()
		{
			var __result__ = __DoDrawDefaultInspector__2?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnHeaderGUI()
		{
			__OnHeaderGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnHeaderControlsGUI()
		{
			__OnHeaderControlsGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ShowOpenButton(UnityEngine.Object[] assets, bool enableCondition)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = assets;
			__params__[1] = enableCondition;
			__ShowOpenButton?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public bool ShouldHideOpenButton()
		{
			var __result__ = __ShouldHideOpenButton?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool CanOpenMultipleObjects()
		{
			var __result__ = __CanOpenMultipleObjects?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool ShouldTryToMakeEditableOnOpen()
		{
			var __result__ = __ShouldTryToMakeEditableOnOpen?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnHeaderIconGUI(UnityEngine.Rect iconRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = iconRect;
			__OnHeaderIconGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnHeaderTitleGUI(UnityEngine.Rect titleRect, string header)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = titleRect;
			__params__[1] = header;
			__OnHeaderTitleGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEngine.Rect DrawHeaderHelpAndSettingsGUI(UnityEngine.Rect r)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = r;
			var __result__ = __DrawHeaderHelpAndSettingsGUI?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public void DrawHeaderFromInsideHierarchy()
		{
			__DrawHeaderFromInsideHierarchy?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static UnityEngine.Rect DrawHeaderGUI(UnityEditor.Editor editor, string header)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = editor;
			__params__[1] = header;
			var __result__ = __DrawHeaderGUI?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static UnityEngine.Rect DrawHeaderGUI(UnityEditor.Editor editor, string header, float leftMargin)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = editor;
			__params__[1] = header;
			__params__[2] = leftMargin;
			var __result__ = __DrawHeaderGUI__2?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static void CheckForMainObjectNameMismatch(UnityEditor.Editor editor)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = editor;
			__CheckForMainObjectNameMismatch?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public void DrawPostIconContent(UnityEngine.Rect iconRect)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = iconRect;
			__DrawPostIconContent?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void DrawPostIconContent()
		{
			__DrawPostIconContent__2?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool CanBeExpandedViaAFoldout()
		{
			var __result__ = __CanBeExpandedViaAFoldout?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool CanBeExpandedViaAFoldoutWithoutUpdate()
		{
			var __result__ = __CanBeExpandedViaAFoldoutWithoutUpdate?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public static bool IsAppropriateFileOpenForEdit(UnityEngine.Object assetObject)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = assetObject;
			var __result__ = __IsAppropriateFileOpenForEdit?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool IsEnabled()
		{
			var __result__ = __IsEnabled?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool IsOpenForEdit()
		{
			var __result__ = __IsOpenForEdit?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void OnAssetStoreInspectorGUI()
		{
			__OnAssetStoreInspectorGUI?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static UnityEditor.Editor CreateEditorWithContextInternal(UnityEngine.Object[] targetObjects, UnityEngine.Object context, System.Type editorType)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = targetObjects;
			__params__[1] = context;
			__params__[2] = editorType;
			var __result__ = __CreateEditorWithContextInternal?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEditor.Editor)(__result__) : default;
		}
		
		public static UnityEngine.Vector2 GetCurrentMousePosition()
		{
			var __result__ = __GetCurrentMousePosition?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.Vector2)(__result__) : default;
		}
		
		public int UnityEditor_IToolModeOwner_GetInstanceID()
		{
			var __result__ = __UnityEditor_IToolModeOwner_GetInstanceID?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public static void GetCurrentMousePosition_Injected(out UnityEngine.Vector2 ret)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = Activator.CreateInstance(typeof(UnityEngine.Vector2));
			__GetCurrentMousePosition_Injected?.Invoke(null, __params__);
			ret = (UnityEngine.Vector2)(__params__[0]);
			__pool__.Return(__params__);
		}
		
		public UnityEditor_Editor(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
		public UnityEngine.Object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEditor.Editor __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.Editor)(__self__);
		}
		
		private static FieldInfo ___m_Targets;
		private static FieldInfo __m_Targets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Targets ??= __type__?.GetField("m_Targets", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Context;
		private static FieldInfo __m_Context
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Context ??= __type__?.GetField("m_Context", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_IsDirty;
		private static FieldInfo __m_IsDirty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_IsDirty ??= __type__?.GetField("m_IsDirty", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ReferenceTargetIndex;
		private static FieldInfo __m_ReferenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ReferenceTargetIndex ??= __type__?.GetField("m_ReferenceTargetIndex", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_PropertyHandlerCache;
		private static FieldInfo __m_PropertyHandlerCache
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_PropertyHandlerCache ??= __type__?.GetField("m_PropertyHandlerCache", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DummyPreview;
		private static FieldInfo __m_DummyPreview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DummyPreview ??= __type__?.GetField("m_DummyPreview", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_AudioFilterGUI;
		private static FieldInfo __m_AudioFilterGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_AudioFilterGUI ??= __type__?.GetField("m_AudioFilterGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_SerializedObject;
		private static FieldInfo __m_SerializedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_SerializedObject ??= __type__?.GetField("m_SerializedObject", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_EnabledProperty;
		private static FieldInfo __m_EnabledProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_EnabledProperty ??= __type__?.GetField("m_EnabledProperty", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_InspectorMode;
		private static FieldInfo __m_InspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_InspectorMode ??= __type__?.GetField("m_InspectorMode", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kLineHeight;
		private static FieldInfo __kLineHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kLineHeight ??= __type__?.GetField("kLineHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___hideInspector;
		private static FieldInfo __hideInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___hideInspector ??= __type__?.GetField("hideInspector", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kImageSectionWidth;
		private static FieldInfo __kImageSectionWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kImageSectionWidth ??= __type__?.GetField("kImageSectionWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_WideModeMinWidth;
		private static FieldInfo __k_WideModeMinWidth
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_WideModeMinWidth ??= __type__?.GetField("k_WideModeMinWidth", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___k_HeaderHeight;
		private static FieldInfo __k_HeaderHeight
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___k_HeaderHeight ??= __type__?.GetField("k_HeaderHeight", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___OnPostIconGUI;
		private static FieldInfo __OnPostIconGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnPostIconGUI ??= __type__?.GetField("OnPostIconGUI", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_AllowMultiObjectAccess;
		private static FieldInfo __m_AllowMultiObjectAccess
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_AllowMultiObjectAccess ??= __type__?.GetField("m_AllowMultiObjectAccess", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___finishedDefaultHeaderGUI;
		private static FieldInfo __finishedDefaultHeaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___finishedDefaultHeaderGUI ??= __type__?.GetField("finishedDefaultHeaderGUI", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___inspectorMode;
		private static PropertyInfo __inspectorMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___inspectorMode ??= __type__?.GetProperty("inspectorMode", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___firstInspectedEditor;
		private static PropertyInfo __firstInspectedEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___firstInspectedEditor ??= __type__?.GetProperty("firstInspectedEditor", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___propertyViewer;
		private static PropertyInfo __propertyViewer
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___propertyViewer ??= __type__?.GetProperty("propertyViewer", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___canEditMultipleObjects;
		private static PropertyInfo __canEditMultipleObjects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___canEditMultipleObjects ??= __type__?.GetProperty("canEditMultipleObjects", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___preview;
		private static PropertyInfo __preview
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___preview ??= __type__?.GetProperty("preview", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___propertyHandlerCache;
		private static PropertyInfo __propertyHandlerCache
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___propertyHandlerCache ??= __type__?.GetProperty("propertyHandlerCache", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___UnityEditor_IToolModeOwner_areToolModesAvailable;
		private static PropertyInfo __UnityEditor_IToolModeOwner_areToolModesAvailable
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnityEditor_IToolModeOwner_areToolModesAvailable ??= __type__?.GetProperty("UnityEditor_IToolModeOwner_areToolModesAvailable", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___referenceTargetIndex;
		private static PropertyInfo __referenceTargetIndex
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___referenceTargetIndex ??= __type__?.GetProperty("referenceTargetIndex", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___targetTitle;
		private static PropertyInfo __targetTitle
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___targetTitle ??= __type__?.GetProperty("targetTitle", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___enabledProperty;
		private static PropertyInfo __enabledProperty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___enabledProperty ??= __type__?.GetProperty("enabledProperty", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___isInspectorDirty;
		private static PropertyInfo __isInspectorDirty
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___isInspectorDirty ??= __type__?.GetProperty("isInspectorDirty", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___alwaysAllowExpansion;
		private static PropertyInfo __alwaysAllowExpansion
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___alwaysAllowExpansion ??= __type__?.GetProperty("alwaysAllowExpansion", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___HasLargeHeader;
		private static MethodInfo __HasLargeHeader
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HasLargeHeader ??= __type__?.GetMethodInfoByParameterTypeNames("HasLargeHeader");
		}
		
		private static MethodInfo ___CleanupPropertyEditor;
		private static MethodInfo __CleanupPropertyEditor
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CleanupPropertyEditor ??= __type__?.GetMethodInfoByParameterTypeNames("CleanupPropertyEditor");
		}
		
		private static MethodInfo ___OnDisableINTERNAL;
		private static MethodInfo __OnDisableINTERNAL
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDisableINTERNAL ??= __type__?.GetMethodInfoByParameterTypeNames("OnDisableINTERNAL");
		}
		
		private static MethodInfo ___GetSerializedObjectInternal;
		private static MethodInfo __GetSerializedObjectInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetSerializedObjectInternal ??= __type__?.GetMethodInfoByParameterTypeNames("GetSerializedObjectInternal");
		}
		
		private static MethodInfo ___CreateSerializedObject;
		private static MethodInfo __CreateSerializedObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateSerializedObject ??= __type__?.GetMethodInfoByParameterTypeNames("CreateSerializedObject");
		}
		
		private static MethodInfo ___AssignCachedProperties;
		private static MethodInfo __AssignCachedProperties
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AssignCachedProperties ??= __type__?.GetMethodInfoByParameterTypeNames("AssignCachedProperties", "", "UnityEditor.SerializedProperty");
		}
		
		private static MethodInfo ___InternalSetTargets;
		private static MethodInfo __InternalSetTargets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalSetTargets ??= __type__?.GetMethodInfoByParameterTypeNames("InternalSetTargets", "UnityEngine.Object[]");
		}
		
		private static MethodInfo ___InternalSetHidden;
		private static MethodInfo __InternalSetHidden
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalSetHidden ??= __type__?.GetMethodInfoByParameterTypeNames("InternalSetHidden", "System.Boolean");
		}
		
		private static MethodInfo ___InternalSetContextObject;
		private static MethodInfo __InternalSetContextObject
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___InternalSetContextObject ??= __type__?.GetMethodInfoByParameterTypeNames("InternalSetContextObject", "UnityEngine.Object");
		}
		
		private static MethodInfo ___UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets;
		private static MethodInfo __UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets ??= __type__?.GetMethodInfoByParameterTypeNames("UnityEditor_IToolModeOwner_GetWorldBoundsOfTargets");
		}
		
		private static MethodInfo ___GetWorldBoundsOfTarget;
		private static MethodInfo __GetWorldBoundsOfTarget
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetWorldBoundsOfTarget ??= __type__?.GetMethodInfoByParameterTypeNames("GetWorldBoundsOfTarget", "UnityEngine.Object");
		}
		
		private static MethodInfo ___UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange;
		private static MethodInfo __UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange ??= __type__?.GetMethodInfoByParameterTypeNames("UnityEditor_IToolModeOwner_ModeSurvivesSelectionChange", "System.Int32");
		}
		
		private static MethodInfo ___OnForceReloadInspector;
		private static MethodInfo __OnForceReloadInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnForceReloadInspector ??= __type__?.GetMethodInfoByParameterTypeNames("OnForceReloadInspector");
		}
		
		private static MethodInfo ___GetOptimizedGUIBlock;
		private static MethodInfo __GetOptimizedGUIBlock
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetOptimizedGUIBlock ??= __type__?.GetMethodInfoByParameterTypeNames("GetOptimizedGUIBlock", "System.Boolean", "System.Boolean", "System.Single&");
		}
		
		private static MethodInfo ___OnOptimizedInspectorGUI;
		private static MethodInfo __OnOptimizedInspectorGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnOptimizedInspectorGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnOptimizedInspectorGUI", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___DrawPropertiesExcluding;
		private static MethodInfo __DrawPropertiesExcluding
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawPropertiesExcluding ??= __type__?.GetMethodInfoByParameterTypeNames("DrawPropertiesExcluding", "UnityEditor.SerializedObject", "System.String[]");
		}
		
		private static MethodInfo ___DoDrawDefaultInspector;
		private static MethodInfo __DoDrawDefaultInspector
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoDrawDefaultInspector ??= __type__?.GetMethodInfoByParameterTypeNames("DoDrawDefaultInspector", "UnityEditor.SerializedObject");
		}
		
		private static MethodInfo ___DoDrawDefaultInspector__2;
		private static MethodInfo __DoDrawDefaultInspector__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DoDrawDefaultInspector__2 ??= __type__?.GetMethodInfoByParameterTypeNames("DoDrawDefaultInspector");
		}
		
		private static MethodInfo ___OnHeaderGUI;
		private static MethodInfo __OnHeaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderGUI");
		}
		
		private static MethodInfo ___OnHeaderControlsGUI;
		private static MethodInfo __OnHeaderControlsGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderControlsGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderControlsGUI");
		}
		
		private static MethodInfo ___ShowOpenButton;
		private static MethodInfo __ShowOpenButton
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowOpenButton ??= __type__?.GetMethodInfoByParameterTypeNames("ShowOpenButton", "UnityEngine.Object[]", "System.Boolean");
		}
		
		private static MethodInfo ___ShouldHideOpenButton;
		private static MethodInfo __ShouldHideOpenButton
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldHideOpenButton ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldHideOpenButton");
		}
		
		private static MethodInfo ___CanOpenMultipleObjects;
		private static MethodInfo __CanOpenMultipleObjects
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CanOpenMultipleObjects ??= __type__?.GetMethodInfoByParameterTypeNames("CanOpenMultipleObjects");
		}
		
		private static MethodInfo ___ShouldTryToMakeEditableOnOpen;
		private static MethodInfo __ShouldTryToMakeEditableOnOpen
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShouldTryToMakeEditableOnOpen ??= __type__?.GetMethodInfoByParameterTypeNames("ShouldTryToMakeEditableOnOpen");
		}
		
		private static MethodInfo ___OnHeaderIconGUI;
		private static MethodInfo __OnHeaderIconGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderIconGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderIconGUI", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___OnHeaderTitleGUI;
		private static MethodInfo __OnHeaderTitleGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnHeaderTitleGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnHeaderTitleGUI", "UnityEngine.Rect", "System.String");
		}
		
		private static MethodInfo ___DrawHeaderHelpAndSettingsGUI;
		private static MethodInfo __DrawHeaderHelpAndSettingsGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawHeaderHelpAndSettingsGUI ??= __type__?.GetMethodInfoByParameterTypeNames("DrawHeaderHelpAndSettingsGUI", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___DrawHeaderFromInsideHierarchy;
		private static MethodInfo __DrawHeaderFromInsideHierarchy
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawHeaderFromInsideHierarchy ??= __type__?.GetMethodInfoByParameterTypeNames("DrawHeaderFromInsideHierarchy");
		}
		
		private static MethodInfo ___DrawHeaderGUI;
		private static MethodInfo __DrawHeaderGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawHeaderGUI ??= __type__?.GetMethodInfoByParameterTypeNames("DrawHeaderGUI", "UnityEditor.Editor", "System.String");
		}
		
		private static MethodInfo ___DrawHeaderGUI__2;
		private static MethodInfo __DrawHeaderGUI__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawHeaderGUI__2 ??= __type__?.GetMethodInfoByParameterTypeNames("DrawHeaderGUI", "UnityEditor.Editor", "System.String", "System.Single");
		}
		
		private static MethodInfo ___CheckForMainObjectNameMismatch;
		private static MethodInfo __CheckForMainObjectNameMismatch
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckForMainObjectNameMismatch ??= __type__?.GetMethodInfoByParameterTypeNames("CheckForMainObjectNameMismatch", "UnityEditor.Editor");
		}
		
		private static MethodInfo ___DrawPostIconContent;
		private static MethodInfo __DrawPostIconContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawPostIconContent ??= __type__?.GetMethodInfoByParameterTypeNames("DrawPostIconContent", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___DrawPostIconContent__2;
		private static MethodInfo __DrawPostIconContent__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawPostIconContent__2 ??= __type__?.GetMethodInfoByParameterTypeNames("DrawPostIconContent");
		}
		
		private static MethodInfo ___CanBeExpandedViaAFoldout;
		private static MethodInfo __CanBeExpandedViaAFoldout
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CanBeExpandedViaAFoldout ??= __type__?.GetMethodInfoByParameterTypeNames("CanBeExpandedViaAFoldout");
		}
		
		private static MethodInfo ___CanBeExpandedViaAFoldoutWithoutUpdate;
		private static MethodInfo __CanBeExpandedViaAFoldoutWithoutUpdate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CanBeExpandedViaAFoldoutWithoutUpdate ??= __type__?.GetMethodInfoByParameterTypeNames("CanBeExpandedViaAFoldoutWithoutUpdate");
		}
		
		private static MethodInfo ___IsAppropriateFileOpenForEdit;
		private static MethodInfo __IsAppropriateFileOpenForEdit
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsAppropriateFileOpenForEdit ??= __type__?.GetMethodInfoByParameterTypeNames("IsAppropriateFileOpenForEdit", "UnityEngine.Object");
		}
		
		private static MethodInfo ___IsEnabled;
		private static MethodInfo __IsEnabled
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsEnabled ??= __type__?.GetMethodInfoByParameterTypeNames("IsEnabled");
		}
		
		private static MethodInfo ___IsOpenForEdit;
		private static MethodInfo __IsOpenForEdit
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsOpenForEdit ??= __type__?.GetMethodInfoByParameterTypeNames("IsOpenForEdit");
		}
		
		private static MethodInfo ___OnAssetStoreInspectorGUI;
		private static MethodInfo __OnAssetStoreInspectorGUI
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnAssetStoreInspectorGUI ??= __type__?.GetMethodInfoByParameterTypeNames("OnAssetStoreInspectorGUI");
		}
		
		private static MethodInfo ___CreateEditorWithContextInternal;
		private static MethodInfo __CreateEditorWithContextInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateEditorWithContextInternal ??= __type__?.GetMethodInfoByParameterTypeNames("CreateEditorWithContextInternal", "UnityEngine.Object[]", "UnityEngine.Object", "System.Type");
		}
		
		private static MethodInfo ___GetCurrentMousePosition;
		private static MethodInfo __GetCurrentMousePosition
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetCurrentMousePosition ??= __type__?.GetMethodInfoByParameterTypeNames("GetCurrentMousePosition");
		}
		
		private static MethodInfo ___UnityEditor_IToolModeOwner_GetInstanceID;
		private static MethodInfo __UnityEditor_IToolModeOwner_GetInstanceID
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UnityEditor_IToolModeOwner_GetInstanceID ??= __type__?.GetMethodInfoByParameterTypeNames("UnityEditor_IToolModeOwner_GetInstanceID");
		}
		
		private static MethodInfo ___GetCurrentMousePosition_Injected;
		private static MethodInfo __GetCurrentMousePosition_Injected
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetCurrentMousePosition_Injected ??= __type__?.GetMethodInfoByParameterTypeNames("GetCurrentMousePosition_Injected", "UnityEngine.Vector2&");
		}
	}
	public static class UnityEditor_Editor_Extension
	{
		public static UnityEditor_Editor ReflectionHelper(this UnityEditor.Editor self) => new(self);
	}
}
