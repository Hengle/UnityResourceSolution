//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_AnimationClipInfoProperties
	{
		public static class __hook__
		{
			
			[MonoHook]
			public class AddEvent
			{
				/// <summary>
				/// <see cref="UnityEditor.AnimationClipInfoProperties"/>
				/// </summary>
				public static string __type__ = "UnityEditor.AnimationClipInfoProperties";
				public delegate void __delegate__(float time);
				
				public struct Param
				{
					public float time;
					
					public object __this__;
					public __delegate__ __original__;
				}
				
				public delegate bool BeginDelegate(ref Param param);
				public delegate void EndDelegate(ref Param param);
				public static BeginDelegate OnBegin = null;
				public static EndDelegate OnEnd = null;
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public void __replace__(float time)
				{
					Param param = new();
					param.time = time;
					param.__this__ = this;
					param.__original__ = __original__;
					
					if (OnBegin?.Invoke(ref param) == true)
						return;
					
					__original__(param.time);
					
					OnEnd?.Invoke(ref param);
				}
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public void __original__(float time)
				{
				}
			}
			
			[MonoHook]
			public class SetEvent
			{
				/// <summary>
				/// <see cref="UnityEditor.AnimationClipInfoProperties"/>
				/// </summary>
				public static string __type__ = "UnityEditor.AnimationClipInfoProperties";
				public delegate void __delegate__(int index, UnityEngine.AnimationEvent animationEvent);
				
				public struct Param
				{
					public int index;
					public UnityEngine.AnimationEvent animationEvent;
					
					public object __this__;
					public __delegate__ __original__;
				}
				
				public delegate bool BeginDelegate(ref Param param);
				public delegate void EndDelegate(ref Param param);
				public static BeginDelegate OnBegin = null;
				public static EndDelegate OnEnd = null;
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public void __replace__(int index, UnityEngine.AnimationEvent animationEvent)
				{
					Param param = new();
					param.index = index;
					param.animationEvent = animationEvent;
					param.__this__ = this;
					param.__original__ = __original__;
					
					if (OnBegin?.Invoke(ref param) == true)
						return;
					
					__original__(param.index, param.animationEvent);
					
					OnEnd?.Invoke(ref param);
				}
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public void __original__(int index, UnityEngine.AnimationEvent animationEvent)
				{
				}
			}
			
			[MonoHook]
			public class GetEvent
			{
				/// <summary>
				/// <see cref="UnityEditor.AnimationClipInfoProperties"/>
				/// </summary>
				public static string __type__ = "UnityEditor.AnimationClipInfoProperties";
				public delegate UnityEngine.AnimationEvent __delegate__(int index);
				
				public struct Param
				{
					public int index;
					
					public object __this__;
					public UnityEngine.AnimationEvent __result__;
					public __delegate__ __original__;
				}
				
				public delegate bool BeginDelegate(ref Param param);
				public delegate void EndDelegate(ref Param param);
				public static BeginDelegate OnBegin = null;
				public static EndDelegate OnEnd = null;
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public UnityEngine.AnimationEvent __replace__(int index)
				{
					Param param = new();
					param.index = index;
					param.__this__ = this;
					param.__result__ = default;
					param.__original__ = __original__;
					
					if (OnBegin?.Invoke(ref param) == true)
						return param.__result__;
					
					param.__result__ = __original__(param.index);
					
					OnEnd?.Invoke(ref param);
					return param.__result__;
				}
				
				[MethodImpl(MethodImplOptions.NoOptimization)]
				public UnityEngine.AnimationEvent __original__(int index)
				{
					return default;
				}
			}
		}
	}
}
