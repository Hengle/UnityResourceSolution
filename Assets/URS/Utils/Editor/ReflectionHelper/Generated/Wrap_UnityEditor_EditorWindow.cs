//This file was automatically generated by kuroneko.
using System;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace NinjaBeats.ReflectionHelper
{
	public partial struct UnityEditor_EditorWindow
	{
		
		/// <summary>
		/// <see cref="UnityEditor.EditorWindow"/>
		/// </summary>
		public static Type __type__ { get; } = EditorUtils.GetTypeByFullName("UnityEditor.EditorWindow");
		
		
		public UnityEngine.UIElements.VisualElement baseRootVisualElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__baseRootVisualElement?.GetValue(__self__));
		}
		
		public bool liveReloadPreferenceDefault
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__liveReloadPreferenceDefault?.GetValue(__self__));
		}
		
		public bool isUIToolkitWindow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__isUIToolkitWindow?.GetValue(__self__));
		}
		
		public object overlayCanvas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__overlayCanvas?.GetValue(__self__));
		}
		
		public object viewDataDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__viewDataDictionary?.GetValue(__self__));
		}
		
		public bool disableInputEvents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__disableInputEvents?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __disableInputEvents?.SetValue(__self__, value);
		}
		
		public bool hasUnsavedChanges
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__hasUnsavedChanges?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __hasUnsavedChanges?.SetValue(__self__, value);
		}
		
		public string saveChangesMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (string)(__saveChangesMessage?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __saveChangesMessage?.SetValue(__self__, value);
		}
		
		public int antiAliasing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__antiAliasing?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __antiAliasing?.SetValue(__self__, value);
		}
		
		public bool m_AutoRepaintOnSceneChange
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_AutoRepaintOnSceneChange?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_AutoRepaintOnSceneChange?.SetValue(__self__, value);
		}
		
		public UnityEngine.Vector2 m_MinSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__m_MinSize?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_MinSize?.SetValue(__self__, value);
		}
		
		public UnityEngine.Vector2 m_MaxSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__m_MaxSize?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_MaxSize?.SetValue(__self__, value);
		}
		
		public UnityEngine.GUIContent m_TitleContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__m_TitleContent?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_TitleContent?.SetValue(__self__, value);
		}
		
		public int m_DepthBufferBits
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_DepthBufferBits?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DepthBufferBits?.SetValue(__self__, value);
		}
		
		public int m_AntiAliasing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (int)(__m_AntiAliasing?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_AntiAliasing?.SetValue(__self__, value);
		}
		
		public UnityEngine.Rect m_Pos
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rect)(__m_Pos?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Pos?.SetValue(__self__, value);
		}
		
		public UnityEngine.UIElements.VisualElement m_UIRootElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.UIElements.VisualElement)(__m_UIRootElement?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_UIRootElement?.SetValue(__self__, value);
		}
		
		public object m_ViewDataDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_ViewDataDictionary?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_ViewDataDictionary?.SetValue(__self__, value);
		}
		
		public object m_OverlayCanvas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_OverlayCanvas?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_OverlayCanvas?.SetValue(__self__, value);
		}
		
		public bool m_OverlaysInitialized
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_OverlaysInitialized?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_OverlaysInitialized?.SetValue(__self__, value);
		}
		
		public bool m_EnableViewDataPersistence
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_EnableViewDataPersistence?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_EnableViewDataPersistence?.SetValue(__self__, value);
		}
		
		public bool m_RequestedViewDataSave
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_RequestedViewDataSave?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_RequestedViewDataSave?.SetValue(__self__, value);
		}
		
		public static System.Action s_UpdateWindowMenuListingOff
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (System.Action)(__s_UpdateWindowMenuListingOff?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_UpdateWindowMenuListingOff?.SetValue(null, value);
		}
		
		public UnityEngine.Rect m_GameViewRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rect)(__m_GameViewRect?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_GameViewRect?.SetValue(__self__, value);
		}
		
		public UnityEngine.Rect m_GameViewClippedRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Rect)(__m_GameViewClippedRect?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_GameViewClippedRect?.SetValue(__self__, value);
		}
		
		public UnityEngine.Vector2 m_GameViewTargetSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__m_GameViewTargetSize?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_GameViewTargetSize?.SetValue(__self__, value);
		}
		
		public bool m_IsPlayModeView
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_IsPlayModeView?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_IsPlayModeView?.SetValue(__self__, value);
		}
		
		public object m_EventInterests
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_EventInterests?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_EventInterests?.SetValue(__self__, value);
		}
		
		public bool m_DisableInputEvents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_DisableInputEvents?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_DisableInputEvents?.SetValue(__self__, value);
		}
		
		public object m_Parent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__m_Parent?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Parent?.SetValue(__self__, value);
		}
		
		public static double kWarningFadeoutWait
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (double)(__kWarningFadeoutWait?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kWarningFadeoutWait?.SetValue(null, value);
		}
		
		public static double kWarningFadeoutTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (double)(__kWarningFadeoutTime?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __kWarningFadeoutTime?.SetValue(null, value);
		}
		
		public UnityEngine.GUIContent m_Notification
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.GUIContent)(__m_Notification?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_Notification?.SetValue(__self__, value);
		}
		
		public UnityEngine.Vector2 m_NotificationSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEngine.Vector2)(__m_NotificationSize?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_NotificationSize?.SetValue(__self__, value);
		}
		
		public float m_FadeoutTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (float)(__m_FadeoutTime?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_FadeoutTime?.SetValue(__self__, value);
		}
		
		public bool m_HasUnsavedChanges
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (bool)(__m_HasUnsavedChanges?.GetValue(__self__));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __m_HasUnsavedChanges?.SetValue(__self__, value);
		}
		
		public static object s_ShortcutContext
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (object)(__s_ShortcutContext?.GetValue(null));
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			set => __s_ShortcutContext?.SetValue(null, value);
		}
		
		public static void Internal_MakeModal(object win)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = win;
			__Internal_MakeModal?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public void SaveViewData()
		{
			__SaveViewData?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SaveViewDataToDisk()
		{
			__SaveViewDataToDisk?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public object GetViewDataDictionary()
		{
			var __result__ = __GetViewDataDictionary?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (object)(__result__) : default;
		}
		
		public void DisableViewDataPersistence()
		{
			__DisableViewDataPersistence?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ClearPersistentViewData()
		{
			__ClearPersistentViewData?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnResized()
		{
			__OnResized?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnBackgroundViewResized(UnityEngine.Rect pos)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = pos;
			__OnBackgroundViewResized?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void CheckForWindowRepaint()
		{
			__CheckForWindowRepaint?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEngine.GUIContent GetLocalizedTitleContent()
		{
			var __result__ = __GetLocalizedTitleContent?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEngine.GUIContent GetLocalizedTitleContentFromType(System.Type t)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			var __result__ = __GetLocalizedTitleContentFromType?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.GUIContent)(__result__) : default;
		}
		
		public static UnityEditor.EditorWindowTitleAttribute GetEditorWindowTitleAttribute(System.Type t)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			var __result__ = __GetEditorWindowTitleAttribute?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEditor.EditorWindowTitleAttribute)(__result__) : default;
		}
		
		public void DrawNotification()
		{
			__DrawNotification?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnMaximized()
		{
			__OnMaximized?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public bool CanMaximize()
		{
			var __result__ = __CanMaximize?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public int GetNumTabs()
		{
			var __result__ = __GetNumTabs?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (int)(__result__) : default;
		}
		
		public bool ShowNextTabIfPossible()
		{
			var __result__ = __ShowNextTabIfPossible?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public bool IsSelectedTab()
		{
			var __result__ = __IsSelectedTab?.Invoke(__self__, System.Array.Empty<object>());
			return __result__ != null ? (bool)(__result__) : default;
		}
		
		public void MakeParentsSettingsMatchMe()
		{
			__MakeParentsSettingsMatchMe?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ShowTooltip()
		{
			__ShowTooltip?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void MakeModal()
		{
			__MakeModal?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void ShowPopupWithMode(object mode, bool giveFocus)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = mode;
			__params__[1] = giveFocus;
			__ShowPopupWithMode?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ShowWithMode(object mode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = mode;
			__ShowWithMode?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ShowAsDropDown(UnityEngine.Rect buttonRect, UnityEngine.Vector2 windowSize, Array locationPriorityOrder)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = windowSize;
			__params__[2] = locationPriorityOrder;
			__ShowAsDropDown?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ShowAsDropDown(UnityEngine.Rect buttonRect, UnityEngine.Vector2 windowSize, Array locationPriorityOrder, object mode)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = windowSize;
			__params__[2] = locationPriorityOrder;
			__params__[3] = mode;
			__ShowAsDropDown__2?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void ShowAsDropDown(UnityEngine.Rect buttonRect, UnityEngine.Vector2 windowSize, Array locationPriorityOrder, object mode, bool giveFocus)
		{
			var __pool__ = FixedArrayPool<object>.Shared(5);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = windowSize;
			__params__[2] = locationPriorityOrder;
			__params__[3] = mode;
			__params__[4] = giveFocus;
			__ShowAsDropDown__3?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEngine.Rect ShowAsDropDownFitToScreen(UnityEngine.Rect buttonRect, UnityEngine.Vector2 windowSize, Array locationPriorityOrder)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = buttonRect;
			__params__[1] = windowSize;
			__params__[2] = locationPriorityOrder;
			var __result__ = __ShowAsDropDownFitToScreen?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Rect)(__result__) : default;
		}
		
		public static UnityEditor.EditorWindow GetWindowPrivate(System.Type t, bool utility, string title, bool focus)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			__params__[1] = utility;
			__params__[2] = title;
			__params__[3] = focus;
			var __result__ = __GetWindowPrivate?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEditor.EditorWindow)(__result__) : default;
		}
		
		public void RemoveFromDockArea()
		{
			__RemoveFromDockArea?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static UnityEditor.EditorWindow GetWindowWithRectPrivate(System.Type t, UnityEngine.Rect rect, bool utility, string title)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = t;
			__params__[1] = rect;
			__params__[2] = utility;
			__params__[3] = title;
			var __result__ = __GetWindowWithRectPrivate?.Invoke(null, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEditor.EditorWindow)(__result__) : default;
		}
		
		public static T GetWindowDontShow<T>()
		{
			var __result__ = __GetWindowDontShow?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (T)(__result__) : default;
		}
		
		public void RepaintImmediately()
		{
			__RepaintImmediately?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void SetParentGameViewDimensions(UnityEngine.Rect rect, UnityEngine.Rect clippedRect, UnityEngine.Vector2 targetSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(3);
			var __params__ = __pool__.Rent();
			__params__[0] = rect;
			__params__[1] = clippedRect;
			__params__[2] = targetSize;
			__SetParentGameViewDimensions?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetPlayModeViewSize(UnityEngine.Vector2 targetSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = targetSize;
			__SetPlayModeViewSize?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetMainPlayModeViewSize(UnityEngine.Vector2 targetSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = targetSize;
			__SetMainPlayModeViewSize?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void SetDisplayViewSize(int displayId, UnityEngine.Vector2 targetSize)
		{
			var __pool__ = FixedArrayPool<object>.Shared(2);
			var __params__ = __pool__.Rent();
			__params__[0] = displayId;
			__params__[1] = targetSize;
			__SetDisplayViewSize?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public UnityEngine.Vector2 GetDisplayViewSize(int displayId)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = displayId;
			var __result__ = __GetDisplayViewSize?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
			return __result__ != null ? (UnityEngine.Vector2)(__result__) : default;
		}
		
		public void SetPlayModeView(bool value)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = value;
			__SetPlayModeView?.Invoke(__self__, __params__);
			__pool__.Return(__params__);
		}
		
		public void __internalAwake()
		{
			____internalAwake?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static void Initialize()
		{
			__Initialize?.Invoke(null, System.Array.Empty<object>());
		}
		
		public void OnDisableINTERNAL()
		{
			__OnDisableINTERNAL?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static void CreateNewWindowForEditorWindow(UnityEditor.EditorWindow window, bool loadPosition, bool showImmediately, bool setFocus)
		{
			var __pool__ = FixedArrayPool<object>.Shared(4);
			var __params__ = __pool__.Rent();
			__params__[0] = window;
			__params__[1] = loadPosition;
			__params__[2] = showImmediately;
			__params__[3] = setFocus;
			__CreateNewWindowForEditorWindow?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public void AddSceneTab()
		{
			__AddSceneTab?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void AddGameTab()
		{
			__AddGameTab?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public static void UpdateWindowMenuListing()
		{
			__UpdateWindowMenuListing?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static void BuildWindowMenuListing()
		{
			__BuildWindowMenuListing?.Invoke(null, System.Array.Empty<object>());
		}
		
		public static UnityEngine.UIElements.VisualElement CreateRoot()
		{
			var __result__ = __CreateRoot?.Invoke(null, System.Array.Empty<object>());
			return __result__ != null ? (UnityEngine.UIElements.VisualElement)(__result__) : default;
		}
		
		public static void ToggleAllOverlays(UnityEditor.ShortcutManagement.ShortcutArguments args)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = args;
			__ToggleAllOverlays?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void HideOverlay(UnityEditor.ShortcutManagement.ShortcutArguments args)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = args;
			__HideOverlay?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public static void ShowOverlayMenu(UnityEditor.ShortcutManagement.ShortcutArguments args)
		{
			var __pool__ = FixedArrayPool<object>.Shared(1);
			var __params__ = __pool__.Rent();
			__params__[0] = args;
			__ShowOverlayMenu?.Invoke(null, __params__);
			__pool__.Return(__params__);
		}
		
		public void OnBackingScaleFactorChangedInternal()
		{
			__OnBackingScaleFactorChangedInternal?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public void OnBackingScaleFactorChanged()
		{
			__OnBackingScaleFactorChanged?.Invoke(__self__, System.Array.Empty<object>());
		}
		
		public UnityEditor_EditorWindow(object __self__) => this.__self__ = __self__ as UnityEngine.Object;
		public UnityEngine.Object __self__;
		public bool __valid__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => __self__ != null && __type__ != null;
		}
		public UnityEditor.EditorWindow __super__
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => (UnityEditor.EditorWindow)(__self__);
		}
		
		private static FieldInfo ___m_AutoRepaintOnSceneChange;
		private static FieldInfo __m_AutoRepaintOnSceneChange
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_AutoRepaintOnSceneChange ??= __type__?.GetField("m_AutoRepaintOnSceneChange", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_MinSize;
		private static FieldInfo __m_MinSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_MinSize ??= __type__?.GetField("m_MinSize", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_MaxSize;
		private static FieldInfo __m_MaxSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_MaxSize ??= __type__?.GetField("m_MaxSize", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_TitleContent;
		private static FieldInfo __m_TitleContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_TitleContent ??= __type__?.GetField("m_TitleContent", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DepthBufferBits;
		private static FieldInfo __m_DepthBufferBits
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DepthBufferBits ??= __type__?.GetField("m_DepthBufferBits", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_AntiAliasing;
		private static FieldInfo __m_AntiAliasing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_AntiAliasing ??= __type__?.GetField("m_AntiAliasing", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Pos;
		private static FieldInfo __m_Pos
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Pos ??= __type__?.GetField("m_Pos", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_UIRootElement;
		private static FieldInfo __m_UIRootElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_UIRootElement ??= __type__?.GetField("m_UIRootElement", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_ViewDataDictionary;
		private static FieldInfo __m_ViewDataDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_ViewDataDictionary ??= __type__?.GetField("m_ViewDataDictionary", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_OverlayCanvas;
		private static FieldInfo __m_OverlayCanvas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_OverlayCanvas ??= __type__?.GetField("m_OverlayCanvas", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_OverlaysInitialized;
		private static FieldInfo __m_OverlaysInitialized
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_OverlaysInitialized ??= __type__?.GetField("m_OverlaysInitialized", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_EnableViewDataPersistence;
		private static FieldInfo __m_EnableViewDataPersistence
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_EnableViewDataPersistence ??= __type__?.GetField("m_EnableViewDataPersistence", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_RequestedViewDataSave;
		private static FieldInfo __m_RequestedViewDataSave
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_RequestedViewDataSave ??= __type__?.GetField("m_RequestedViewDataSave", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_UpdateWindowMenuListingOff;
		private static FieldInfo __s_UpdateWindowMenuListingOff
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_UpdateWindowMenuListingOff ??= __type__?.GetField("s_UpdateWindowMenuListingOff", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_GameViewRect;
		private static FieldInfo __m_GameViewRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_GameViewRect ??= __type__?.GetField("m_GameViewRect", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_GameViewClippedRect;
		private static FieldInfo __m_GameViewClippedRect
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_GameViewClippedRect ??= __type__?.GetField("m_GameViewClippedRect", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_GameViewTargetSize;
		private static FieldInfo __m_GameViewTargetSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_GameViewTargetSize ??= __type__?.GetField("m_GameViewTargetSize", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_IsPlayModeView;
		private static FieldInfo __m_IsPlayModeView
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_IsPlayModeView ??= __type__?.GetField("m_IsPlayModeView", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_EventInterests;
		private static FieldInfo __m_EventInterests
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_EventInterests ??= __type__?.GetField("m_EventInterests", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_DisableInputEvents;
		private static FieldInfo __m_DisableInputEvents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_DisableInputEvents ??= __type__?.GetField("m_DisableInputEvents", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Parent;
		private static FieldInfo __m_Parent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Parent ??= __type__?.GetField("m_Parent", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kWarningFadeoutWait;
		private static FieldInfo __kWarningFadeoutWait
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kWarningFadeoutWait ??= __type__?.GetField("kWarningFadeoutWait", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___kWarningFadeoutTime;
		private static FieldInfo __kWarningFadeoutTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___kWarningFadeoutTime ??= __type__?.GetField("kWarningFadeoutTime", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_Notification;
		private static FieldInfo __m_Notification
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_Notification ??= __type__?.GetField("m_Notification", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_NotificationSize;
		private static FieldInfo __m_NotificationSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_NotificationSize ??= __type__?.GetField("m_NotificationSize", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_FadeoutTime;
		private static FieldInfo __m_FadeoutTime
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_FadeoutTime ??= __type__?.GetField("m_FadeoutTime", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___m_HasUnsavedChanges;
		private static FieldInfo __m_HasUnsavedChanges
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___m_HasUnsavedChanges ??= __type__?.GetField("m_HasUnsavedChanges", (BindingFlags)(-1));
		}
		
		private static FieldInfo ___s_ShortcutContext;
		private static FieldInfo __s_ShortcutContext
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___s_ShortcutContext ??= __type__?.GetField("s_ShortcutContext", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___baseRootVisualElement;
		private static PropertyInfo __baseRootVisualElement
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___baseRootVisualElement ??= __type__?.GetProperty("baseRootVisualElement", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___liveReloadPreferenceDefault;
		private static PropertyInfo __liveReloadPreferenceDefault
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___liveReloadPreferenceDefault ??= __type__?.GetProperty("liveReloadPreferenceDefault", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___isUIToolkitWindow;
		private static PropertyInfo __isUIToolkitWindow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___isUIToolkitWindow ??= __type__?.GetProperty("isUIToolkitWindow", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___overlayCanvas;
		private static PropertyInfo __overlayCanvas
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___overlayCanvas ??= __type__?.GetProperty("overlayCanvas", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___viewDataDictionary;
		private static PropertyInfo __viewDataDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___viewDataDictionary ??= __type__?.GetProperty("viewDataDictionary", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___disableInputEvents;
		private static PropertyInfo __disableInputEvents
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___disableInputEvents ??= __type__?.GetProperty("disableInputEvents", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___hasUnsavedChanges;
		private static PropertyInfo __hasUnsavedChanges
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___hasUnsavedChanges ??= __type__?.GetProperty("hasUnsavedChanges", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___saveChangesMessage;
		private static PropertyInfo __saveChangesMessage
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___saveChangesMessage ??= __type__?.GetProperty("saveChangesMessage", (BindingFlags)(-1));
		}
		
		private static PropertyInfo ___antiAliasing;
		private static PropertyInfo __antiAliasing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___antiAliasing ??= __type__?.GetProperty("antiAliasing", (BindingFlags)(-1));
		}
		
		private static MethodInfo ___Internal_MakeModal;
		private static MethodInfo __Internal_MakeModal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Internal_MakeModal ??= __type__?.GetMethodInfoByParameterTypeNames("Internal_MakeModal", "UnityEditor.ContainerWindow");
		}
		
		private static MethodInfo ___SaveViewData;
		private static MethodInfo __SaveViewData
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SaveViewData ??= __type__?.GetMethodInfoByParameterTypeNames("SaveViewData");
		}
		
		private static MethodInfo ___SaveViewDataToDisk;
		private static MethodInfo __SaveViewDataToDisk
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SaveViewDataToDisk ??= __type__?.GetMethodInfoByParameterTypeNames("SaveViewDataToDisk");
		}
		
		private static MethodInfo ___GetViewDataDictionary;
		private static MethodInfo __GetViewDataDictionary
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetViewDataDictionary ??= __type__?.GetMethodInfoByParameterTypeNames("GetViewDataDictionary");
		}
		
		private static MethodInfo ___DisableViewDataPersistence;
		private static MethodInfo __DisableViewDataPersistence
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DisableViewDataPersistence ??= __type__?.GetMethodInfoByParameterTypeNames("DisableViewDataPersistence");
		}
		
		private static MethodInfo ___ClearPersistentViewData;
		private static MethodInfo __ClearPersistentViewData
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ClearPersistentViewData ??= __type__?.GetMethodInfoByParameterTypeNames("ClearPersistentViewData");
		}
		
		private static MethodInfo ___OnResized;
		private static MethodInfo __OnResized
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnResized ??= __type__?.GetMethodInfoByParameterTypeNames("OnResized");
		}
		
		private static MethodInfo ___OnBackgroundViewResized;
		private static MethodInfo __OnBackgroundViewResized
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnBackgroundViewResized ??= __type__?.GetMethodInfoByParameterTypeNames("OnBackgroundViewResized", "UnityEngine.Rect");
		}
		
		private static MethodInfo ___CheckForWindowRepaint;
		private static MethodInfo __CheckForWindowRepaint
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CheckForWindowRepaint ??= __type__?.GetMethodInfoByParameterTypeNames("CheckForWindowRepaint");
		}
		
		private static MethodInfo ___GetLocalizedTitleContent;
		private static MethodInfo __GetLocalizedTitleContent
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLocalizedTitleContent ??= __type__?.GetMethodInfoByParameterTypeNames("GetLocalizedTitleContent");
		}
		
		private static MethodInfo ___GetLocalizedTitleContentFromType;
		private static MethodInfo __GetLocalizedTitleContentFromType
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetLocalizedTitleContentFromType ??= __type__?.GetMethodInfoByParameterTypeNames("GetLocalizedTitleContentFromType", "System.Type");
		}
		
		private static MethodInfo ___GetEditorWindowTitleAttribute;
		private static MethodInfo __GetEditorWindowTitleAttribute
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetEditorWindowTitleAttribute ??= __type__?.GetMethodInfoByParameterTypeNames("GetEditorWindowTitleAttribute", "System.Type");
		}
		
		private static MethodInfo ___DrawNotification;
		private static MethodInfo __DrawNotification
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___DrawNotification ??= __type__?.GetMethodInfoByParameterTypeNames("DrawNotification");
		}
		
		private static MethodInfo ___OnMaximized;
		private static MethodInfo __OnMaximized
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnMaximized ??= __type__?.GetMethodInfoByParameterTypeNames("OnMaximized");
		}
		
		private static MethodInfo ___CanMaximize;
		private static MethodInfo __CanMaximize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CanMaximize ??= __type__?.GetMethodInfoByParameterTypeNames("CanMaximize");
		}
		
		private static MethodInfo ___GetNumTabs;
		private static MethodInfo __GetNumTabs
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetNumTabs ??= __type__?.GetMethodInfoByParameterTypeNames("GetNumTabs");
		}
		
		private static MethodInfo ___ShowNextTabIfPossible;
		private static MethodInfo __ShowNextTabIfPossible
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowNextTabIfPossible ??= __type__?.GetMethodInfoByParameterTypeNames("ShowNextTabIfPossible");
		}
		
		private static MethodInfo ___IsSelectedTab;
		private static MethodInfo __IsSelectedTab
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___IsSelectedTab ??= __type__?.GetMethodInfoByParameterTypeNames("IsSelectedTab");
		}
		
		private static MethodInfo ___MakeParentsSettingsMatchMe;
		private static MethodInfo __MakeParentsSettingsMatchMe
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___MakeParentsSettingsMatchMe ??= __type__?.GetMethodInfoByParameterTypeNames("MakeParentsSettingsMatchMe");
		}
		
		private static MethodInfo ___ShowTooltip;
		private static MethodInfo __ShowTooltip
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowTooltip ??= __type__?.GetMethodInfoByParameterTypeNames("ShowTooltip");
		}
		
		private static MethodInfo ___MakeModal;
		private static MethodInfo __MakeModal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___MakeModal ??= __type__?.GetMethodInfoByParameterTypeNames("MakeModal");
		}
		
		private static MethodInfo ___ShowPopupWithMode;
		private static MethodInfo __ShowPopupWithMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowPopupWithMode ??= __type__?.GetMethodInfoByParameterTypeNames("ShowPopupWithMode", "UnityEditor.ShowMode", "System.Boolean");
		}
		
		private static MethodInfo ___ShowWithMode;
		private static MethodInfo __ShowWithMode
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowWithMode ??= __type__?.GetMethodInfoByParameterTypeNames("ShowWithMode", "UnityEditor.ShowMode");
		}
		
		private static MethodInfo ___ShowAsDropDown;
		private static MethodInfo __ShowAsDropDown
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowAsDropDown ??= __type__?.GetMethodInfoByParameterTypeNames("ShowAsDropDown", "UnityEngine.Rect", "UnityEngine.Vector2", "UnityEditor.PopupLocation[]");
		}
		
		private static MethodInfo ___ShowAsDropDown__2;
		private static MethodInfo __ShowAsDropDown__2
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowAsDropDown__2 ??= __type__?.GetMethodInfoByParameterTypeNames("ShowAsDropDown", "UnityEngine.Rect", "UnityEngine.Vector2", "UnityEditor.PopupLocation[]", "UnityEditor.ShowMode");
		}
		
		private static MethodInfo ___ShowAsDropDown__3;
		private static MethodInfo __ShowAsDropDown__3
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowAsDropDown__3 ??= __type__?.GetMethodInfoByParameterTypeNames("ShowAsDropDown", "UnityEngine.Rect", "UnityEngine.Vector2", "UnityEditor.PopupLocation[]", "UnityEditor.ShowMode", "System.Boolean");
		}
		
		private static MethodInfo ___ShowAsDropDownFitToScreen;
		private static MethodInfo __ShowAsDropDownFitToScreen
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowAsDropDownFitToScreen ??= __type__?.GetMethodInfoByParameterTypeNames("ShowAsDropDownFitToScreen", "UnityEngine.Rect", "UnityEngine.Vector2", "UnityEditor.PopupLocation[]");
		}
		
		private static MethodInfo ___GetWindowPrivate;
		private static MethodInfo __GetWindowPrivate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetWindowPrivate ??= __type__?.GetMethodInfoByParameterTypeNames("GetWindowPrivate", "System.Type", "System.Boolean", "System.String", "System.Boolean");
		}
		
		private static MethodInfo ___RemoveFromDockArea;
		private static MethodInfo __RemoveFromDockArea
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RemoveFromDockArea ??= __type__?.GetMethodInfoByParameterTypeNames("RemoveFromDockArea");
		}
		
		private static MethodInfo ___GetWindowWithRectPrivate;
		private static MethodInfo __GetWindowWithRectPrivate
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetWindowWithRectPrivate ??= __type__?.GetMethodInfoByParameterTypeNames("GetWindowWithRectPrivate", "System.Type", "UnityEngine.Rect", "System.Boolean", "System.String");
		}
		
		private static MethodInfo ___GetWindowDontShow;
		private static MethodInfo __GetWindowDontShow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetWindowDontShow ??= __type__?.GetMethodInfoByParameterTypeNames("GetWindowDontShow");
		}
		
		private static MethodInfo ___RepaintImmediately;
		private static MethodInfo __RepaintImmediately
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___RepaintImmediately ??= __type__?.GetMethodInfoByParameterTypeNames("RepaintImmediately");
		}
		
		private static MethodInfo ___SetParentGameViewDimensions;
		private static MethodInfo __SetParentGameViewDimensions
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetParentGameViewDimensions ??= __type__?.GetMethodInfoByParameterTypeNames("SetParentGameViewDimensions", "UnityEngine.Rect", "UnityEngine.Rect", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___SetPlayModeViewSize;
		private static MethodInfo __SetPlayModeViewSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetPlayModeViewSize ??= __type__?.GetMethodInfoByParameterTypeNames("SetPlayModeViewSize", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___SetMainPlayModeViewSize;
		private static MethodInfo __SetMainPlayModeViewSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetMainPlayModeViewSize ??= __type__?.GetMethodInfoByParameterTypeNames("SetMainPlayModeViewSize", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___SetDisplayViewSize;
		private static MethodInfo __SetDisplayViewSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetDisplayViewSize ??= __type__?.GetMethodInfoByParameterTypeNames("SetDisplayViewSize", "System.Int32", "UnityEngine.Vector2");
		}
		
		private static MethodInfo ___GetDisplayViewSize;
		private static MethodInfo __GetDisplayViewSize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___GetDisplayViewSize ??= __type__?.GetMethodInfoByParameterTypeNames("GetDisplayViewSize", "System.Int32");
		}
		
		private static MethodInfo ___SetPlayModeView;
		private static MethodInfo __SetPlayModeView
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___SetPlayModeView ??= __type__?.GetMethodInfoByParameterTypeNames("SetPlayModeView", "System.Boolean");
		}
		
		private static MethodInfo _____internalAwake;
		private static MethodInfo ____internalAwake
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => _____internalAwake ??= __type__?.GetMethodInfoByParameterTypeNames("__internalAwake");
		}
		
		private static MethodInfo ___Initialize;
		private static MethodInfo __Initialize
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___Initialize ??= __type__?.GetMethodInfoByParameterTypeNames("Initialize");
		}
		
		private static MethodInfo ___OnDisableINTERNAL;
		private static MethodInfo __OnDisableINTERNAL
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnDisableINTERNAL ??= __type__?.GetMethodInfoByParameterTypeNames("OnDisableINTERNAL");
		}
		
		private static MethodInfo ___CreateNewWindowForEditorWindow;
		private static MethodInfo __CreateNewWindowForEditorWindow
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateNewWindowForEditorWindow ??= __type__?.GetMethodInfoByParameterTypeNames("CreateNewWindowForEditorWindow", "UnityEditor.EditorWindow", "System.Boolean", "System.Boolean", "System.Boolean");
		}
		
		private static MethodInfo ___AddSceneTab;
		private static MethodInfo __AddSceneTab
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddSceneTab ??= __type__?.GetMethodInfoByParameterTypeNames("AddSceneTab");
		}
		
		private static MethodInfo ___AddGameTab;
		private static MethodInfo __AddGameTab
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___AddGameTab ??= __type__?.GetMethodInfoByParameterTypeNames("AddGameTab");
		}
		
		private static MethodInfo ___UpdateWindowMenuListing;
		private static MethodInfo __UpdateWindowMenuListing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___UpdateWindowMenuListing ??= __type__?.GetMethodInfoByParameterTypeNames("UpdateWindowMenuListing");
		}
		
		private static MethodInfo ___BuildWindowMenuListing;
		private static MethodInfo __BuildWindowMenuListing
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___BuildWindowMenuListing ??= __type__?.GetMethodInfoByParameterTypeNames("BuildWindowMenuListing");
		}
		
		private static MethodInfo ___CreateRoot;
		private static MethodInfo __CreateRoot
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___CreateRoot ??= __type__?.GetMethodInfoByParameterTypeNames("CreateRoot");
		}
		
		private static MethodInfo ___ToggleAllOverlays;
		private static MethodInfo __ToggleAllOverlays
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ToggleAllOverlays ??= __type__?.GetMethodInfoByParameterTypeNames("ToggleAllOverlays", "UnityEditor.ShortcutManagement.ShortcutArguments");
		}
		
		private static MethodInfo ___HideOverlay;
		private static MethodInfo __HideOverlay
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___HideOverlay ??= __type__?.GetMethodInfoByParameterTypeNames("HideOverlay", "UnityEditor.ShortcutManagement.ShortcutArguments");
		}
		
		private static MethodInfo ___ShowOverlayMenu;
		private static MethodInfo __ShowOverlayMenu
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___ShowOverlayMenu ??= __type__?.GetMethodInfoByParameterTypeNames("ShowOverlayMenu", "UnityEditor.ShortcutManagement.ShortcutArguments");
		}
		
		private static MethodInfo ___OnBackingScaleFactorChangedInternal;
		private static MethodInfo __OnBackingScaleFactorChangedInternal
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnBackingScaleFactorChangedInternal ??= __type__?.GetMethodInfoByParameterTypeNames("OnBackingScaleFactorChangedInternal");
		}
		
		private static MethodInfo ___OnBackingScaleFactorChanged;
		private static MethodInfo __OnBackingScaleFactorChanged
		{
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			get => ___OnBackingScaleFactorChanged ??= __type__?.GetMethodInfoByParameterTypeNames("OnBackingScaleFactorChanged");
		}
	}
	public static class UnityEditor_EditorWindow_Extension
	{
		public static UnityEditor_EditorWindow ReflectionHelper(this UnityEditor.EditorWindow self) => new(self);
	}
}
